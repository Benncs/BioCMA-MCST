name: CI
'on':
  push:
    branches:
      - main
      - v0/**
      - poc/**
  pull_request:
    branches:
      - main
jobs:
  Build:
    runs-on: ubuntu-latest
    outputs:
      RUNNER: ${{ runner.name }}
    steps:


      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: '${{ secrets.PAT_TOKEN }}'

      - name: Clone GitLab submodule
        run: |
            git config --global credential.helper '!f() { echo "username=${{ secrets.USER_GITLAB }}"; echo "password=${{ secrets.PAT_GITLAB }}"; }; f'
            git submodule update --init --recursive
            
   
      - name: Setup Cpp (C++ / C)
        uses: aminya/setup-cpp@v0.37.0
        with:
          cmake: true
          compiler: gcc
          ninja: true
          meson: false # Use custom instead 
          python: false # Use custom instead 
          make: false 
          doxygen: false
      
        
      
      - name: OMP / MPI / Dependencies
        run: sudo apt update -q && sudo apt-get install -y libomp-dev libopenmpi-dev libeigen3-dev  pkg-config
      - name: Install Python Development Packages
        run:  sudo apt-get install -y python3-dev python3 python3-pip libpython3-dev python3-numpy python3-pkg-resources python3-setuptools python3-wheel
      - name: Install Pybind11
        run: |
          sudo apt-get install -y pybind11-dev python3-pybind11
          sudo mkdir /usr/local/share/pkgconfig
          sudo touch /usr/local/share/pkgconfig/pybind11.pc 
          sudo echo "prefix=${pcfiledir}/../../
          includedir=${prefix}/include

          Name: pybind11
          Description: Seamless operability between C++11 and Python
          Version: 2.12.0
          Cflags: -I${includedir}
          " >>  /usr/local/share/pkgconfig/pybind11.pc

        # git clone https://github.com/pybind/pybind11.git pybind11
          # cd pybind11
          # cmake -S . -B build
          # cmake --build build 
          # sudo cmake --install build
        
          

      - name: Install Meson 
        run: pip install meson 
      - name: Configure project
        run: |
          mkdir builddir
          meson setup builddir/ --buildtype=release
      - name: Build project 
        run : meson compile -C builddir
      - name: Run unit tests
        run: |
          meson test -C builddir
