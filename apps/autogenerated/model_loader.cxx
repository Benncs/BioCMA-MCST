// NOLINTBEGIN
#include <mc/mcinit.hpp>
#include <string_view>
#include <unordered_map> // IWYU pragma: keep

/* ---------------------------------------------------------
 *                  BIOCMA_MC ST
 *
 * This file has been autogenerated by Meson during project
 * configuration.
 *
 * Be careful when modifying values.
 * ---------------------------------------------------------
 */

// clang-format off
@INCLUDES@

//TODO: remove include of model_user.hpp when compiling with cuda 

#ifdef USE_PYTHON_MODULE
#  include <pymodule/import_py.hpp>
#endif 
namespace AutoGenerated
{
  std::unique_ptr<MC::MonteCarloUnit> wrap_init_model_selector(
      const int i_model,
      uint64_t number_particle,
      std::span<double> liq_volume,
      const NeighborsView<HostSpace>& liquid_neighbors,double& total_mass) noexcept
  {
    switch (i_model)
    {
      @SWITCH_BODY@

      #ifdef USE_PYTHON_MODULE
      case -1:
      {
        return MC::init<PythonWrap::PimpModel>(
             number_particle, liq_volume, liquid_neighbors);
      }
      #endif 

      default:
      {
        return MC::init<DefaultModel>(
            number_particle, liq_volume, liquid_neighbors,total_mass);
      }
    }
  }

  int get_model_index_from_name(std::string_view model_name) noexcept
  {
    #ifdef USE_PYTHON_MODULE
    if(model_name=="dynamic"){return -1;}
    #endif

    @MODEL_INDEX_MAP@

    auto it = map.find(model_name);
    if (it != map.end())
    {
      return it->second;
    }
    std::cerr << "Model not found, using DefaultModel instead" << std::endl;
    return -2;
  }

  std::vector<std::string> get_model_list() noexcept
  {
    return {};
  }
} // namespace AutoGenerated
// clang-format on
// NOLINTEND
