#ifndef __CORE__PROBE_HPP__
#define __CORE__PROBE_HPP__

#include "biocma_cst_config.hpp"
#include "cmt_common/macro_constructor_assignment.hpp"
#include <Kokkos_Core.hpp>
#include <Kokkos_Core_fwd.hpp>
#include <Kokkos_Macros.hpp>
#include <common/kokkos_vector.hpp>
#include <cstdint>
#include <decl/Kokkos_Declare_OPENMP.hpp>
#include <initializer_list>
#include <optional>
#include <string>
#include <string_view>
#include <traits/Kokkos_IterationPatternTrait.hpp>

namespace Simulation
{

  class Probes
  {
  public:
    static constexpr uint64_t buffer_size = AutoGenerated::probe_buffer_size;
    
    void clear();

    void set(double val)const;

    [[nodiscard]] bool need_export() const;

    [[nodiscard]] double* raw_get()const;

  private:
    using SubViewProbeType = Kokkos::Subview<
        Kokkos::View<double ***, Kokkos::LayoutRight, ComputeSpace>,
        decltype(Kokkos::ALL),
        decltype(Kokkos::ALL),
        size_t>;

    size_t n_p = 0;
    size_t n_t = 0;
    size_t n_s = 0;
    uint64_t get_counter = 0;
    Probes(std::string_view _label, uint64_t n_step, uint64_t n_compartments);
    Kokkos::View<double ***, Kokkos::LayoutRight, ComputeSpace> probes;
    Kokkos::View<double ***, Kokkos::LayoutRight, ComputeSpace> host;
    Kokkos::View<std::string *, HostSpace> labels;

    Kokkos::View<uint64_t , Kokkos::SharedSpace> internal_counter;

    Kokkos::View<double[Probes::buffer_size], Kokkos::LayoutRight, ComputeSpace>
        buffer;

  public:
    using SubViewTimeType = Kokkos::Subview<
        Kokkos::View<double ***, Kokkos::LayoutRight, ComputeSpace>,
        decltype(Kokkos::ALL),
        size_t,
        decltype(Kokkos::ALL)>;
    DEFAULT_COPY_MOVE_AC(Probes)
    ~Probes() = default;
    Probes(size_t initial_n_particle, size_t n_t_flush);

    Probes(size_t initial_n_particle,
           size_t n_t_flush,
           std::span<std::string> _labels);


    Probes(size_t initial_n_particle,
           size_t n_t_flush,
           std::initializer_list<std::string> _labels);

    [[deprecated]] void add_probe(std::string_view label);
    [[deprecated]]  [[nodiscard]] std::span<std::string> get_labels() const;

   [[deprecated]]   KOKKOS_FUNCTION std::optional<SubViewProbeType> get(std::string_view label);

    [[deprecated]]  SubViewTimeType get();

    [[deprecated]]  std::optional<std::array<size_t, 3>> get_raw(double **ptr);
  };
} // namespace Simulation

#endif
