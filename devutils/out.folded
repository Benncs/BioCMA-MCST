BioCMA-MCST_cli;[libopenblasp-r0.3.20.so] 69497236
BioCMA-MCST_cli;[unknown];[libevent_core-2.1.so.7.0.1];[unknown];epoll_wait;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_epoll_wait_[k];do_epoll_wait_[k];ep_poll_[k];schedule_hrtimeout_range_[k];schedule_hrtimeout_range_clock_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];__perf_event_task_sched_in_[k] 2015975
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0] 3752978049
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process 8155512
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process 1120501593
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;MC::double_unfiform 1403145337
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;MC::double_unfiform;MC::uniform_double_rand;double std::uniform_real_distribution<double>::operator;double std::uniform_real_distribution<double>::operator 34987798
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;MC::double_unfiform;MC::uniform_double_rand;double std::uniform_real_distribution<double>::operator;double std::uniform_real_distribution<double>::operator;std::__detail::_Adaptor<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>, double>::_Adaptor 811327895
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;MC::double_unfiform;MC::uniform_double_rand;double std::uniform_real_distribution<double>::operator;double std::uniform_real_distribution<double>::operator;std::__detail::_Adaptor<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>, double>::operator;double std::generate_canonical<double, 53ul, std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> > 178737114
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;MC::double_unfiform;MC::uniform_double_rand;double std::uniform_real_distribution<double>::operator;double std::uniform_real_distribution<double>::operator;std::__detail::_Adaptor<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>, double>::operator;double std::generate_canonical<double, 53ul, std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >;std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::operator 703632610
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;MC::double_unfiform;MC::uniform_double_rand;double std::uniform_real_distribution<double>::operator;double std::uniform_real_distribution<double>::operator;std::__detail::_Adaptor<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>, double>::operator;double std::generate_canonical<double, 53ul, std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >;std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::operator;std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::_M_gen_rand 2239831337
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;MC::double_unfiform;MC::uniform_double_rand;double std::uniform_real_distribution<double>::operator;double std::uniform_real_distribution<double>::operator;std::uniform_real_distribution<double>::param_type::a;asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];irqentry_exit_[k];irqentry_exit_to_user_mode_[k];exit_to_user_mode_prepare_[k];exit_to_user_mode_loop_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k] 3561731
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;MC::double_unfiform;MC::uniform_double_rand;std::uniform_real_distribution<double>::uniform_real_distribution;std::uniform_real_distribution<double>::param_type::param_type 344238689
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;contribution_simple_model 1221001003
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;contribution_simple_model;std::__shared_ptr_access<SimpleModel, ;_[i];std::__shared_ptr_access<SimpleModel,  28391848
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;contribution_simple_model;std::shared_ptr<SimpleModel>& std::any_cast<std::shared_ptr<SimpleModel>&>;std::shared_ptr<SimpleModel>* std::any_cast<std::shared_ptr<SimpleModel> >;void* std::__any_caster<std::shared_ptr<SimpleModel> > 26705059
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;contribution_simple_model;std::shared_ptr<SimpleModel>& std::any_cast<std::shared_ptr<SimpleModel>&>;std::shared_ptr<SimpleModel>* std::any_cast<std::shared_ptr<SimpleModel> >;void* std::__any_caster<std::shared_ptr<SimpleModel> >;std::any::_Manager_external<std::shared_ptr<SimpleModel> >::_S_access 25946810
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;std::__shared_ptr_access<SimpleModel, ;_[i] 24124306
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;std::function<void ;MC::Particles& std::forward<MC::Particles&> 21495594
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;std::function<void ;std::_Function_handler<void ;Simulation::pbf 29982106
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;std::function<void ;std::_Function_handler<void ;std::_Function_base::_Base_manager<Simulation::pbf 1073827607
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;std::function<void ;std::_Function_handler<void ;std::_Function_base::_Base_manager<Simulation::pbf;Simulation::pbf;std::_Any_data::_M_access 59985281
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;std::function<void ;std::_Function_handler<void ;std::enable_if<is_invocable_r_v<void, Simulation::pbf 26813794
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;std::function<void ;std::_Function_handler<void ;std::enable_if<is_invocable_r_v<void, Simulation::pbf;Simulation::pbf 34191587
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;std::function<void ;std::_Function_handler<void ;std::enable_if<is_invocable_r_v<void, Simulation::pbf;void std::__invoke_impl<void, Simulation::pbf 31321666
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;std::function<void ;std::_Function_handler<void ;std::enable_if<is_invocable_r_v<void, Simulation::pbf;void std::__invoke_impl<void, Simulation::pbf;MC::Particles& std::forward<MC::Particles&> 553331805
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;std::function<void ;std::_Function_handler<void ;std::enable_if<is_invocable_r_v<void, Simulation::pbf;void std::__invoke_impl<void, Simulation::pbf;Simulation::pbf 95120932
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;std::function<void ;std::_Function_handler<void ;std::enable_if<is_invocable_r_v<void, Simulation::pbf;void std::__invoke_impl<void, Simulation::pbf;Simulation::pbf;Eigen::SparseMatrix<double, 0, int>::coeff;Eigen::internal::CompressedStorage<double, int>::atInRange 825655233
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;std::function<void ;std::_Function_handler<void ;std::enable_if<is_invocable_r_v<void, Simulation::pbf;void std::__invoke_impl<void, Simulation::pbf;Simulation::pbf;Eigen::SparseMatrix<double, 0, int>::coeff;Eigen::internal::CompressedStorage<double, int>::atInRange;Eigen::internal::CompressedStorage<double, int>::searchLowerIndex;int* std::lower_bound<int*, long>;int* std::__lower_bound<int*, long, __gnu_cxx::__ops::_Iter_less_val> 158199593
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;std::function<void ;std::_Function_handler<void ;std::enable_if<is_invocable_r_v<void, Simulation::pbf;void std::__invoke_impl<void, Simulation::pbf;Simulation::pbf;Eigen::SparseMatrix<double, 0, int>::coeff;Eigen::internal::CompressedStorage<double, int>::atInRange;Eigen::internal::CompressedStorage<double, int>::searchLowerIndex;int* std::lower_bound<int*, long>;int* std::__lower_bound<int*, long, __gnu_cxx::__ops::_Iter_less_val>;bool __gnu_cxx::__ops::_Iter_less_val::operator 35518108
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;std::function<void ;std::_Function_handler<void ;std::enable_if<is_invocable_r_v<void, Simulation::pbf;void std::__invoke_impl<void, Simulation::pbf;Simulation::pbf;Eigen::SparseMatrix<double, 0, int>::coeff;Eigen::internal::CompressedStorage<double, int>::atInRange;Eigen::internal::CompressedStorage<double, int>::searchLowerIndex;int* std::lower_bound<int*, long>;int* std::__lower_bound<int*, long, __gnu_cxx::__ops::_Iter_less_val>;void std::__advance<int*, long> 25150094
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;std::function<void ;std::_Function_handler<void ;std::enable_if<is_invocable_r_v<void, Simulation::pbf;void std::__invoke_impl<void, Simulation::pbf;Simulation::pbf;Eigen::SparseMatrix<double, 0, int>::coeff;Eigen::internal::CompressedStorage<double, int>::atInRange;Eigen::internal::CompressedStorage<double, int>::searchLowerIndex;int* std::lower_bound<int*, long>;int* std::__lower_bound<int*, long, __gnu_cxx::__ops::_Iter_less_val>;void std::advance<int*, long> 1013913204
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;std::function<void ;std::_Function_handler<void ;std::enable_if<is_invocable_r_v<void, Simulation::pbf;void std::__invoke_impl<void, Simulation::pbf;Simulation::pbf;Eigen::SparseMatrix<double, 0, int>::coeff;Eigen::internal::CompressedStorage<double, int>::atInRange;Eigen::internal::CompressedStorage<double, int>::searchLowerIndex;int* std::lower_bound<int*, long>;int* std::__lower_bound<int*, long, __gnu_cxx::__ops::_Iter_less_val>;void std::advance<int*, long>;void std::__advance<int*, long> 2581553922
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;std::function<void ;std::_Function_handler<void ;std::enable_if<is_invocable_r_v<void, Simulation::pbf;void std::__invoke_impl<void, Simulation::pbf;Simulation::pbf;Eigen::SparseMatrix<double, 0, int>::coeff;Eigen::internal::CompressedStorage<double, int>::atInRange;Eigen::internal::CompressedStorage<double, int>::searchLowerIndex;std::iterator_traits<int*>::difference_type std::distance<int*>;std::iterator_traits<int*>::difference_type std::__distance<int*> 1223581635
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;std::function<void ;std::_Function_handler<void ;std::enable_if<is_invocable_r_v<void, Simulation::pbf;void std::__invoke_impl<void, Simulation::pbf;Simulation::pbf;MC::ReactorDomain::getNeighbors 50619459
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;std::function<void ;std::_Function_handler<void ;std::enable_if<is_invocable_r_v<void, Simulation::pbf;void std::__invoke_impl<void, Simulation::pbf;Simulation::pbf;asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];irqentry_exit_[k];irqentry_exit_to_user_mode_[k];exit_to_user_mode_prepare_[k];exit_to_user_mode_loop_[k];schedule_[k];__schedule_[k];raw_spin_rq_unlock_[k] 32162
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;std::function<void ;std::_Function_handler<void ;std::enable_if<is_invocable_r_v<void, Simulation::pbf;void std::__invoke_impl<void, Simulation::pbf;Simulation::pbf;asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];irqentry_exit_[k];irqentry_exit_to_user_mode_[k];exit_to_user_mode_prepare_[k];switch_fpu_return_[k];restore_fpregs_from_fpstate_[k] 7374006
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;std::function<void ;std::_Function_handler<void ;std::enable_if<is_invocable_r_v<void, Simulation::pbf;void std::__invoke_impl<void, Simulation::pbf;__ieee754_exp_fma 1001872569
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;std::shared_ptr<SimpleModel>& std::any_cast<std::shared_ptr<SimpleModel>&> 29521841
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;std::vector<std::vector<MC::Particles, std::allocator<MC::Particles> >, std::allocator<std::vector<MC::Particles, std::allocator<MC::Particles> > > >::at;std::vector<std::vector<MC::Particles, std::allocator<MC::Particles> >, std::allocator<std::vector<MC::Particles, std::allocator<MC::Particles> > > >::_M_range_check 28201913
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;std::vector<std::vector<MC::Particles, std::allocator<MC::Particles> >, std::allocator<std::vector<MC::Particles, std::allocator<MC::Particles> > > >::at;std::vector<std::vector<MC::Particles, std::allocator<MC::Particles> >, std::allocator<std::vector<MC::Particles, std::allocator<MC::Particles> > > >::operator[] 33337931
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model 212981004
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;SimpleModel::step 1125804279
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;SimpleModel::step;SimpleModel::Xi::operator* 72463355
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;SimpleModel::step;SimpleModel::Xi::operator+;SimpleModel::Xi::Xi 32147171
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;SimpleModel::step;std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::operator*;std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::get 1392321193
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;SimpleModel::step;std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::operator*;std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::get;std::__uniq_ptr_impl<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::_M_ptr 50800937
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;SimpleModel::step;std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::operator*;std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::get;std::__uniq_ptr_impl<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::_M_ptr;std::tuple_element<0ul, std::tuple<SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> > >::type const& std::get<0ul, SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> >;SimpleModel::Xi* const& std::__get_helper<0ul, SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> > 32774660
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;SimpleModel::step;std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::operator*;std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::get;std::__uniq_ptr_impl<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::_M_ptr;std::tuple_element<0ul, std::tuple<SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> > >::type const& std::get<0ul, SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> >;SimpleModel::Xi* const& std::__get_helper<0ul, SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> >;std::_Tuple_impl<0ul, SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> >::_M_head;std::_Head_base<0ul, SimpleModel::Xi*, false>::_M_head 38684342
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;double const& std::min<double> 24468775
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;std::__shared_ptr_access<SimpleModel, ;_[i] 67724106
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;std::__shared_ptr_access<SimpleModel, ;_[i];std::__shared_ptr_access<SimpleModel, ;std::__shared_ptr<SimpleModel,  1701880956
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;std::function<double  1801845604
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;std::shared_ptr<SimpleModel>& std::any_cast<std::shared_ptr<SimpleModel>&> 56141292
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::operator;_[i] 21751810
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::operator;_[i];std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::get 58901680
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::operator;_[i];std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::get;std::__uniq_ptr_impl<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::_M_ptr;std::tuple_element<0ul, std::tuple<SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> > >::type const& std::get<0ul, SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> >;SimpleModel::Xi* const& std::__get_helper<0ul, SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> > 23526402
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;update_xi_dot 52592880
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;update_xi_dot;std::__shared_ptr_access<SimpleModel,  38829731
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;update_xi_dot;std::__shared_ptr_access<SimpleModel, ;_[i] 24796755
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;update_xi_dot;std::__shared_ptr_access<SimpleModel, ;_[i];std::__shared_ptr_access<SimpleModel,  26045060
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;update_xi_dot;std::__shared_ptr_access<SimpleModel, ;_[i];std::__shared_ptr_access<SimpleModel, ;std::__shared_ptr<SimpleModel,  61684244
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;update_xi_dot;std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::operator;_[i] 39943098
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;update_xi_dot;std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::operator;_[i];std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::get 34921148
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;update_xi_dot;std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::operator;_[i];std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::get;std::__uniq_ptr_impl<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::_M_ptr 1025810097
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;update_xi_dot;std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::operator;_[i];std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::get;std::__uniq_ptr_impl<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::_M_ptr;SimpleModel::Xi* const& std::__get_helper<0ul, SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> > 24140954
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;update_xi_dot;std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::operator;_[i];std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::get;std::__uniq_ptr_impl<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::_M_ptr;std::tuple_element<0ul, std::tuple<SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> > >::type const& std::get<0ul, SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> > 33557530
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;update_xi_dot;std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::operator;_[i];std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::get;std::__uniq_ptr_impl<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::_M_ptr;std::tuple_element<0ul, std::tuple<SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> > >::type const& std::get<0ul, SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> >;SimpleModel::Xi* const& std::__get_helper<0ul, SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> > 1227298531
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;update_xi_dot;std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::operator;_[i];std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::get;std::__uniq_ptr_impl<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::_M_ptr;std::tuple_element<0ul, std::tuple<SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> > >::type const& std::get<0ul, SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> >;SimpleModel::Xi* const& std::__get_helper<0ul, SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> >;std::_Tuple_impl<0ul, SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> >::_M_head 70839403
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_glucose 52533955
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_glucose;naive_newton 29334966
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_glucose;naive_newton;naive_newton 53154342
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_glucose;naive_newton;naive_newton;std::_Function_handler<double  23820715
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_glucose;naive_newton;naive_newton;std::function<double  72034711
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_glucose;naive_newton;naive_newton;std::function<double ;std::_Function_base::_M_empty 1050281132
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_glucose;naive_newton;naive_newton;std::function<double ;std::_Function_handler<double  448648156
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_glucose;naive_newton;naive_newton;std::function<double ;std::_Function_handler<double ;std::enable_if<is_invocable_r_v<double, uptake_glucose 442972114
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_glucose;naive_newton;naive_newton;std::function<double ;std::_Function_handler<double ;std::enable_if<is_invocable_r_v<double, uptake_glucose;double std::__invoke_impl<double, uptake_glucose;uptake_glucose 1934187828
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_glucose;naive_newton;naive_newton;std::function<double ;std::_Function_handler<double ;std::enable_if<is_invocable_r_v<double, uptake_glucose;double std::__invoke_impl<double, uptake_glucose;uptake_glucose;phi_permease;std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::operator;_[i] 51365419
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_glucose;naive_newton;naive_newton;std::function<double ;std::_Function_handler<double ;std::enable_if<is_invocable_r_v<double, uptake_glucose;double std::__invoke_impl<double, uptake_glucose;uptake_glucose;phi_permease;std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::operator;_[i];std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::get 298204220
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_glucose;naive_newton;naive_newton;std::function<double ;std::_Function_handler<double ;std::enable_if<is_invocable_r_v<double, uptake_glucose;double std::__invoke_impl<double, uptake_glucose;uptake_glucose;phi_permease;std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::operator;_[i];std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::get;std::__uniq_ptr_impl<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::_M_ptr 1178162377
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_glucose;naive_newton;naive_newton;std::function<double ;std::_Function_handler<double ;std::enable_if<is_invocable_r_v<double, uptake_glucose;double std::__invoke_impl<double, uptake_glucose;uptake_glucose;phi_permease;std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::operator;_[i];std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::get;std::__uniq_ptr_impl<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::_M_ptr;std::tuple_element<0ul, std::tuple<SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> > >::type const& std::get<0ul, SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> >;SimpleModel::Xi* const& std::__get_helper<0ul, SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> >;std::_Tuple_impl<0ul, SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> >::_M_head;std::_Head_base<0ul, SimpleModel::Xi*, false>::_M_head 28125656
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_glucose;naive_newton;naive_newton;std::function<double ;std::_Function_handler<double ;std::enable_if<is_invocable_r_v<double, uptake_glucose;double std::__invoke_impl<double, uptake_glucose;uptake_glucose;phi_pts;std::__shared_ptr_access<SimpleModel, ;_[i];std::__shared_ptr_access<SimpleModel, ;std::__shared_ptr<SimpleModel,  1160583584
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_glucose;naive_newton;std::abs 773339638
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_glucose;naive_newton;std::function<double  1060296300
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_glucose;naive_newton;std::function<double ;std::_Function_handler<double  41000964
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_glucose;naive_newton;std::function<double ;std::_Function_handler<double ;std::_Function_base::_Base_manager<uptake_glucose 1093696511
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_glucose;naive_newton;std::function<double ;std::_Function_handler<double ;std::_Function_base::_Base_manager<uptake_glucose;uptake_glucose;std::_Any_data::_M_access 46640592
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_glucose;naive_newton;std::function<double ;std::_Function_handler<double ;std::enable_if<is_invocable_r_v<double, uptake_glucose;double std::__invoke_impl<double, uptake_glucose 37864750
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_glucose;naive_newton;std::function<double ;std::_Function_handler<double ;std::enable_if<is_invocable_r_v<double, uptake_glucose;double std::__invoke_impl<double, uptake_glucose;uptake_glucose 67821209
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_glucose;naive_newton;std::function<double ;std::_Function_handler<double ;std::enable_if<is_invocable_r_v<double, uptake_glucose;double std::__invoke_impl<double, uptake_glucose;uptake_glucose;phi_permease 28279634
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_glucose;naive_newton;std::function<double ;std::_Function_handler<double ;std::enable_if<is_invocable_r_v<double, uptake_glucose;double std::__invoke_impl<double, uptake_glucose;uptake_glucose;phi_permease;std::__shared_ptr_access<SimpleModel, ;_[i] 35061915
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_glucose;naive_newton;std::function<double ;std::_Function_handler<double ;std::enable_if<is_invocable_r_v<double, uptake_glucose;double std::__invoke_impl<double, uptake_glucose;uptake_glucose;phi_permease;std::__shared_ptr_access<SimpleModel, ;_[i];std::__shared_ptr_access<SimpleModel, ;std::__shared_ptr<SimpleModel,  24021275
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_glucose;naive_newton;std::function<double ;std::_Function_handler<double ;std::enable_if<is_invocable_r_v<double, uptake_glucose;double std::__invoke_impl<double, uptake_glucose;uptake_glucose;phi_permease;std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::operator;_[i];std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::get 67944156
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_glucose;naive_newton;std::function<double ;std::_Function_handler<double ;std::enable_if<is_invocable_r_v<double, uptake_glucose;double std::__invoke_impl<double, uptake_glucose;uptake_glucose;phi_permease;std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::operator;_[i];std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::get;std::__uniq_ptr_impl<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::_M_ptr 17744877
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_glucose;naive_newton;std::function<double ;std::_Function_handler<double ;std::enable_if<is_invocable_r_v<double, uptake_glucose;double std::__invoke_impl<double, uptake_glucose;uptake_glucose;phi_permease;std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::operator;_[i];std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::get;std::__uniq_ptr_impl<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::_M_ptr;asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];irqentry_exit_[k];irqentry_exit_to_user_mode_[k];exit_to_user_mode_prepare_[k];exit_to_user_mode_loop_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];__perf_event_task_sched_in_[k] 2718431
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_glucose;naive_newton;std::function<double ;std::_Function_handler<double ;std::enable_if<is_invocable_r_v<double, uptake_glucose;double std::__invoke_impl<double, uptake_glucose;uptake_glucose;phi_permease;std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::operator;_[i];std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::get;std::__uniq_ptr_impl<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::_M_ptr;std::tuple_element<0ul, std::tuple<SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> > >::type const& std::get<0ul, SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> >;SimpleModel::Xi* const& std::__get_helper<0ul, SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> > 1205801655
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_glucose;naive_newton;std::function<double ;std::_Function_handler<double ;std::enable_if<is_invocable_r_v<double, uptake_glucose;double std::__invoke_impl<double, uptake_glucose;uptake_glucose;phi_permease;std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::operator;_[i];std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::get;std::__uniq_ptr_impl<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::_M_ptr;std::tuple_element<0ul, std::tuple<SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> > >::type const& std::get<0ul, SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> >;SimpleModel::Xi* const& std::__get_helper<0ul, SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> >;std::_Tuple_impl<0ul, SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> >::_M_head;std::_Head_base<0ul, SimpleModel::Xi*, false>::_M_head 61786713
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_glucose;naive_newton;std::function<double ;std::_Function_handler<double ;std::enable_if<is_invocable_r_v<double, uptake_glucose;double std::__invoke_impl<double, uptake_glucose;uptake_glucose;phi_pts;std::__shared_ptr_access<SimpleModel, ;_[i];std::__shared_ptr_access<SimpleModel, ;asm_sysvec_reschedule_ipi_[k];sysvec_reschedule_ipi_[k];irqentry_exit_[k];irqentry_exit_to_user_mode_[k];exit_to_user_mode_prepare_[k];exit_to_user_mode_loop_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];__perf_event_task_sched_in_[k] 4032329
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_glucose;naive_newton;std::function<double ;std::_Function_handler<double ;std::enable_if<is_invocable_r_v<double, uptake_glucose;uptake_glucose 22713317
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_glucose;naive_newton;std::function<double ;std::enable_if<is_invocable_r_v<double, uptake_glucose 26494722
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_glucose;naive_newton;std::isnan 38348256
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_glucose;phi_permease 30248412
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_glucose;phi_permease;std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::operator;_[i];std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::get;std::__uniq_ptr_impl<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::_M_ptr;std::tuple_element<0ul, std::tuple<SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> > >::type const& std::get<0ul, SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> > 31338071
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_glucose;phi_permease;std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::operator;_[i];std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::get;std::__uniq_ptr_impl<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::_M_ptr;std::tuple_element<0ul, std::tuple<SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> > >::type const& std::get<0ul, SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> >;SimpleModel::Xi* const& std::__get_helper<0ul, SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> >;std::_Tuple_impl<0ul, SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> >::_M_head 23085954
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_glucose;phi_pts 54568678
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_glucose;phi_pts;std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::operator;_[i];std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::get 37424661
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_glucose;phi_pts;std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::operator;_[i];std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::get;std::__uniq_ptr_impl<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::_M_ptr 27899441
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_glucose;phi_pts;std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::operator;_[i];std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::get;std::__uniq_ptr_impl<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::_M_ptr;std::tuple_element<0ul, std::tuple<SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> > >::type const& std::get<0ul, SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> >;SimpleModel::Xi* const& std::__get_helper<0ul, SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> >;std::_Tuple_impl<0ul, SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> >::_M_head;std::_Head_base<0ul, SimpleModel::Xi*, false>::_M_head 728095955
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_glucose;std::function<double ;std::_Function_base::~_Function_base;std::_Function_handler<double ;std::_Function_base::_Base_manager<uptake_glucose;std::_Function_base::_Base_manager<uptake_glucose 22682674
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_glucose;std::isnan 644193675
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_o2;naive_newton 113377494
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_o2;naive_newton;double&& std::forward<double> 22337104
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_o2;naive_newton;naive_newton 428896772
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_o2;naive_newton;naive_newton;std::_Function_handler<double  29290213
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_o2;naive_newton;naive_newton;std::function<double  854667551
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_o2;naive_newton;naive_newton;std::function<double ;double&& std::forward<double> 28530098
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_o2;naive_newton;naive_newton;std::function<double ;std::_Function_base::_M_empty 27868448
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_o2;naive_newton;naive_newton;std::function<double ;std::_Function_handler<double  48425105
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_o2;naive_newton;naive_newton;std::function<double ;std::_Function_handler<double ;double&& std::forward<double> 557939465
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_o2;naive_newton;naive_newton;std::function<double ;std::_Function_handler<double ;std::_Function_base::_Base_manager<uptake_o2 27575643
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_o2;naive_newton;naive_newton;std::function<double ;std::_Function_handler<double ;std::enable_if<is_invocable_r_v<double, uptake_o2 22087874
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_o2;naive_newton;naive_newton;std::function<double ;std::_Function_handler<double ;std::enable_if<is_invocable_r_v<double, uptake_o2;double std::__invoke_impl<double, uptake_o2 29070363
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_o2;naive_newton;naive_newton;std::function<double ;std::_Function_handler<double ;std::enable_if<is_invocable_r_v<double, uptake_o2;double std::__invoke_impl<double, uptake_o2;uptake_o2 1898750144
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_o2;naive_newton;naive_newton;std::function<double ;std::_Function_handler<double ;std::enable_if<is_invocable_r_v<double, uptake_o2;double std::__invoke_impl<double, uptake_o2;uptake_o2;std::__shared_ptr_access<SimpleModel, ;_[i] 24309094
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_o2;naive_newton;naive_newton;std::function<double ;std::_Function_handler<double ;std::enable_if<is_invocable_r_v<double, uptake_o2;double std::__invoke_impl<double, uptake_o2;uptake_o2;std::__shared_ptr_access<SimpleModel, ;_[i];std::__shared_ptr_access<SimpleModel, ;std::__shared_ptr<SimpleModel,  57399790
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_o2;naive_newton;naive_newton;std::function<double ;std::_Function_handler<double ;std::enable_if<is_invocable_r_v<double, uptake_o2;double std::__invoke_impl<double, uptake_o2;uptake_o2;std::abs 75720224
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_o2;naive_newton;naive_newton;std::function<double ;std::_Function_handler<double ;std::enable_if<is_invocable_r_v<double, uptake_o2;double std::__invoke_impl<double, uptake_o2;uptake_o2;std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::operator;_[i];std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::get 20210198
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_o2;naive_newton;naive_newton;std::function<double ;std::_Function_handler<double ;std::enable_if<is_invocable_r_v<double, uptake_o2;double std::__invoke_impl<double, uptake_o2;uptake_o2;std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::operator;_[i];std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::get;std::__uniq_ptr_impl<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::_M_ptr 41083129
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_o2;naive_newton;naive_newton;std::function<double ;std::_Function_handler<double ;std::enable_if<is_invocable_r_v<double, uptake_o2;double std::__invoke_impl<double, uptake_o2;uptake_o2;std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::operator;_[i];std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::get;std::__uniq_ptr_impl<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::_M_ptr;std::tuple_element<0ul, std::tuple<SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> > >::type const& std::get<0ul, SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> > 27485822
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_o2;naive_newton;naive_newton;std::function<double ;std::_Function_handler<double ;std::enable_if<is_invocable_r_v<double, uptake_o2;double std::__invoke_impl<double, uptake_o2;uptake_o2;std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::operator;_[i];std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::get;std::__uniq_ptr_impl<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::_M_ptr;std::tuple_element<0ul, std::tuple<SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> > >::type const& std::get<0ul, SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> >;SimpleModel::Xi* const& std::__get_helper<0ul, SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> > 57018224
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_o2;naive_newton;naive_newton;std::function<double ;std::_Function_handler<double ;std::enable_if<is_invocable_r_v<double, uptake_o2;double std::__invoke_impl<double, uptake_o2;uptake_o2;std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::operator;_[i];std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::get;std::__uniq_ptr_impl<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::_M_ptr;std::tuple_element<0ul, std::tuple<SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> > >::type const& std::get<0ul, SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> >;SimpleModel::Xi* const& std::__get_helper<0ul, SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> >;std::_Tuple_impl<0ul, SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> >::_M_head 40658642
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_o2;naive_newton;naive_newton;std::function<double ;std::_Function_handler<double ;std::enable_if<is_invocable_r_v<double, uptake_o2;double std::__invoke_impl<double, uptake_o2;uptake_o2;std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::operator;_[i];std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::get;std::__uniq_ptr_impl<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::_M_ptr;std::tuple_element<0ul, std::tuple<SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> > >::type const& std::get<0ul, SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> >;SimpleModel::Xi* const& std::__get_helper<0ul, SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> >;std::_Tuple_impl<0ul, SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> >::_M_head;std::_Head_base<0ul, SimpleModel::Xi*, false>::_M_head 26002421
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_o2;naive_newton;naive_newton;std::function<double ;std::_Function_handler<double ;std::enable_if<is_invocable_r_v<double, uptake_o2;uptake_o2 31280298
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_o2;naive_newton;std::_Function_handler<double  922274906
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_o2;naive_newton;std::abs 57055771
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_o2;naive_newton;std::function<double  1089174818
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_o2;naive_newton;std::function<double ;std::_Function_handler<double  25271992
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_o2;naive_newton;std::function<double ;std::_Function_handler<double ;std::_Function_base::_Base_manager<uptake_o2;uptake_o2 26369546
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_o2;naive_newton;std::function<double ;std::_Function_handler<double ;std::_Function_base::_Base_manager<uptake_o2;uptake_o2;std::_Any_data::_M_access 23422678
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_o2;naive_newton;std::function<double ;std::_Function_handler<double ;std::enable_if<is_invocable_r_v<double, uptake_o2 1441996805
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_o2;naive_newton;std::function<double ;std::_Function_handler<double ;std::enable_if<is_invocable_r_v<double, uptake_o2;double std::__invoke_impl<double, uptake_o2;uptake_o2 2366468357
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_o2;naive_newton;std::function<double ;std::_Function_handler<double ;std::enable_if<is_invocable_r_v<double, uptake_o2;double std::__invoke_impl<double, uptake_o2;uptake_o2;std::__shared_ptr_access<SimpleModel, ;_[i];std::__shared_ptr_access<SimpleModel, ;std::__shared_ptr<SimpleModel,  36745396
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_o2;naive_newton;std::function<double ;std::_Function_handler<double ;std::enable_if<is_invocable_r_v<double, uptake_o2;double std::__invoke_impl<double, uptake_o2;uptake_o2;std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::get 21953829
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_o2;naive_newton;std::function<double ;std::_Function_handler<double ;std::enable_if<is_invocable_r_v<double, uptake_o2;double std::__invoke_impl<double, uptake_o2;uptake_o2;std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::operator;_[i];std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::get;std::__uniq_ptr_impl<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::_M_ptr 78269783
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_o2;naive_newton;std::function<double ;std::_Function_handler<double ;std::enable_if<is_invocable_r_v<double, uptake_o2;double std::__invoke_impl<double, uptake_o2;uptake_o2;std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::operator;_[i];std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::get;std::__uniq_ptr_impl<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::_M_ptr;std::tuple_element<0ul, std::tuple<SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> > >::type const& std::get<0ul, SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> >;SimpleModel::Xi* const& std::__get_helper<0ul, SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> >;std::_Tuple_impl<0ul, SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> >::_M_head 54081648
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_o2;naive_newton;std::function<double ;std::_Function_handler<double ;std::enable_if<is_invocable_r_v<double, uptake_o2;double std::__invoke_impl<double, uptake_o2;uptake_o2;std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::operator;_[i];std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::get;std::__uniq_ptr_impl<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::_M_ptr;std::tuple_element<0ul, std::tuple<SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> > >::type const& std::get<0ul, SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> >;SimpleModel::Xi* const& std::__get_helper<0ul, SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> >;std::_Tuple_impl<0ul, SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> >::_M_head;std::_Head_base<0ul, SimpleModel::Xi*, false>::_M_head 26787463
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_o2;naive_newton;std::function<double ;std::_Function_handler<double ;std::enable_if<is_invocable_r_v<double, uptake_o2;double&& std::forward<double> 24287746
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_o2;naive_newton;std::function<double ;std::_Function_handler<double ;std::enable_if<is_invocable_r_v<double, uptake_o2;uptake_o2 29149170
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_o2;naive_newton;std::isnan 51191546
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_o2;std::__shared_ptr_access<SimpleModel, ;_[i];std::__shared_ptr_access<SimpleModel, ;std::__shared_ptr<SimpleModel,  25114644
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_o2;std::function<double  67549174
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_o2;std::function<double ;std::_Function_base::~_Function_base;std::_Function_handler<double ;std::_Function_base::_Base_manager<uptake_o2 30667276
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_o2;std::function<double ;std::_Function_base::~_Function_base;std::_Function_handler<double ;std::_Function_base::_Base_manager<uptake_o2;std::_Function_base::_Base_manager<uptake_o2;uptake_o2 794835801
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_o2;std::function<double ;void std::_Function_base::_Base_manager<uptake_o2 24748193
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_o2;std::function<double ;void std::_Function_base::_Base_manager<uptake_o2;operator new 40827488
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_o2;std::function<double ;void std::_Function_base::_Base_manager<uptake_o2;void std::_Function_base::_Base_manager<uptake_o2;uptake_o2 32065215
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_o2;std::function<double ;void std::_Function_base::_Base_manager<uptake_o2;void std::_Function_base::_Base_manager<uptake_o2;uptake_o2;std::_Any_data::_M_access 27749656
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_o2;std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::operator;_[i];std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::get;std::__uniq_ptr_impl<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::_M_ptr 46913849
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_o2;std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::operator;_[i];std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::get;std::__uniq_ptr_impl<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::_M_ptr;std::tuple_element<0ul, std::tuple<SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> > >::type const& std::get<0ul, SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> >;SimpleModel::Xi* const& std::__get_helper<0ul, SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> > 23125809
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];asm_sysvec_reschedule_ipi_[k];sysvec_reschedule_ipi_[k];irqentry_exit_[k];irqentry_exit_to_user_mode_[k];exit_to_user_mode_prepare_[k];exit_to_user_mode_loop_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k] 4638231
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];asm_sysvec_reschedule_ipi_[k];sysvec_reschedule_ipi_[k];irqentry_exit_[k];irqentry_exit_to_user_mode_[k];exit_to_user_mode_prepare_[k];exit_to_user_mode_loop_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];_raw_spin_unlock_[k] 2565581
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_futex_[k];do_futex_[k];futex_wait_[k];futex_wait_queue_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k] 26843766
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_futex_[k];do_futex_[k];futex_wait_[k];futex_wait_queue_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];__perf_event_task_sched_in_[k] 27480689
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_futex_[k];do_futex_[k];futex_wait_[k];futex_wait_queue_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];__perf_event_task_sched_in_[k];perf_ctx_enable_[k] 2701596
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_futex_[k];do_futex_[k];futex_wait_[k];futex_wait_queue_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];__perf_event_task_sched_in_[k];perf_ctx_enable_[k];srso_safe_ret_[k] 2883035
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_futex_[k];do_futex_[k];futex_wait_[k];futex_wait_queue_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];__perf_event_task_sched_in_[k];perf_ctx_enable_[k];x86_pmu_enable_[k];amd_pmu_enable_all_[k] 1871253
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_futex_[k];do_futex_[k];futex_wait_[k];futex_wait_queue_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];__perf_event_task_sched_in_[k];perf_ctx_enable_[k];x86_pmu_enable_[k];amd_pmu_enable_all_[k];native_write_msr_[k] 4851140
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_futex_[k];do_futex_[k];futex_wait_[k];futex_wait_queue_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];__rcu_read_unlock_[k] 4148638
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_futex_[k];do_futex_[k];futex_wait_[k];futex_wait_queue_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];_raw_spin_unlock_[k] 27491646
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_futex_[k];do_futex_[k];futex_wait_[k];futex_wait_queue_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];raw_spin_rq_unlock_[k];_raw_spin_unlock_[k] 8652881
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_futex_[k];do_futex_[k];futex_wait_[k];futex_wait_queue_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];srso_safe_ret_[k] 4758888
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_futex_[k];do_futex_[k];futex_wait_[k];futex_wait_queue_[k];schedule_[k];__schedule_[k];raw_spin_rq_unlock_[k] 62574
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_futex_[k];do_futex_[k];futex_wait_[k];futex_wait_queue_[k];schedule_[k];__schedule_[k];srso_safe_ret_[k] 4320812
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_futex_[k];do_futex_[k];futex_wake_[k];wake_up_q_[k];try_to_wake_up_[k] 48371078
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_exit_to_user_mode_[k] 6677232
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_exit_to_user_mode_[k];exit_to_user_mode_prepare_[k];blkcg_maybe_throttle_current_[k] 5982743
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_exit_to_user_mode_[k];exit_to_user_mode_prepare_[k];exit_to_user_mode_loop_[k];__rseq_handle_notify_resume_[k];__put_user_8_[k] 6990832
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_exit_to_user_mode_[k];exit_to_user_mode_prepare_[k];exit_to_user_mode_loop_[k];__rseq_handle_notify_resume_[k];rseq_ip_fixup_[k];__get_user_8_[k] 28378315
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_exit_to_user_mode_[k];exit_to_user_mode_prepare_[k];exit_to_user_mode_loop_[k];__rseq_handle_notify_resume_[k];rseq_ip_fixup_[k];rseq_get_rseq_cs_[k] 2550192
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_exit_to_user_mode_[k];exit_to_user_mode_prepare_[k];exit_to_user_mode_loop_[k];__rseq_handle_notify_resume_[k];rseq_update_cpu_node_id_[k] 3080638
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_exit_to_user_mode_[k];exit_to_user_mode_prepare_[k];exit_to_user_mode_loop_[k];rseq_update_cpu_node_id_[k] 6805756
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_exit_to_user_mode_[k];exit_to_user_mode_prepare_[k];switch_fpu_return_[k];restore_fpregs_from_fpstate_[k] 3181608
BioCMA-MCST_cli;[unknown];[libopenblasp-r0.3.20.so] 22394642713
BioCMA-MCST_cli;[unknown];[libopenblasp-r0.3.20.so];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];scheduler_tick_[k];task_tick_fair_[k];update_load_avg_[k] 22409245
BioCMA-MCST_cli;[unknown];[libopenblasp-r0.3.20.so];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];irq_exit_rcu_[k];__irq_exit_rcu_[k];__do_softirq_[k];run_rebalance_domains_[k];rebalance_domains_[k];find_busiest_group_[k] 30643490
BioCMA-MCST_cli;[unknown];[unknown];[unknown];[unknown];[unknown];[unknown];[unknown];[unknown];_int_malloc 23522267
BioCMA-MCST_cli;[unknown];[unknown];int* std::__lower_bound<int*, long, __gnu_cxx::__ops::_Iter_less_val>;sync_regs_[k] 28591737
BioCMA-MCST_cli;[unknown];__GI___futex_abstimed_wait_cancelable64;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k] 27852093
BioCMA-MCST_cli;[unknown];__GI___futex_abstimed_wait_cancelable64;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_futex_[k];do_futex_[k];futex_wait_[k];futex_wait_queue_[k];schedule_[k];__schedule_[k] 7054522
BioCMA-MCST_cli;[unknown];__GI___futex_abstimed_wait_cancelable64;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_futex_[k];do_futex_[k];futex_wait_[k];futex_wait_queue_[k];schedule_[k];__schedule_[k];dequeue_task_[k];dequeue_task_fair_[k];dequeue_entity_[k];update_curr_[k] 30730152
BioCMA-MCST_cli;[unknown];__GI___futex_abstimed_wait_cancelable64;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_futex_[k];do_futex_[k];futex_wait_[k];futex_wait_queue_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k] 5290952
BioCMA-MCST_cli;[unknown];__GI___futex_abstimed_wait_cancelable64;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_futex_[k];do_futex_[k];futex_wait_[k];futex_wait_queue_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];__perf_event_task_sched_in_[k] 13699385
BioCMA-MCST_cli;[unknown];__GI___futex_abstimed_wait_cancelable64;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_futex_[k];do_futex_[k];futex_wait_[k];futex_wait_queue_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];__perf_event_task_sched_in_[k];perf_ctx_enable_[k] 27963
BioCMA-MCST_cli;[unknown];__GI___futex_abstimed_wait_cancelable64;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_futex_[k];do_futex_[k];futex_wait_[k];futex_wait_queue_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];__perf_event_task_sched_in_[k];perf_ctx_enable_[k];x86_pmu_enable_[k] 338134
BioCMA-MCST_cli;[unknown];__GI___futex_abstimed_wait_cancelable64;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_futex_[k];do_futex_[k];futex_wait_[k];futex_wait_queue_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];__perf_event_task_sched_in_[k];perf_ctx_enable_[k];x86_pmu_enable_[k];amd_pmu_enable_all_[k] 4565510
BioCMA-MCST_cli;[unknown];__GI___futex_abstimed_wait_cancelable64;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_futex_[k];do_futex_[k];futex_wait_[k];futex_wait_queue_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];__perf_event_task_sched_in_[k];perf_ctx_enable_[k];x86_pmu_enable_[k];amd_pmu_enable_all_[k];native_write_msr_[k] 2295691
BioCMA-MCST_cli;[unknown];__GI___futex_abstimed_wait_cancelable64;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_futex_[k];do_futex_[k];futex_wait_[k];futex_wait_queue_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];__rcu_read_unlock_[k] 2412246
BioCMA-MCST_cli;[unknown];__GI___futex_abstimed_wait_cancelable64;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_futex_[k];do_futex_[k];futex_wait_[k];futex_wait_queue_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];_raw_spin_unlock_[k] 7928379
BioCMA-MCST_cli;[unknown];__GI___futex_abstimed_wait_cancelable64;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_futex_[k];do_futex_[k];futex_wait_[k];futex_wait_queue_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];srso_safe_ret_[k] 1191469
BioCMA-MCST_cli;[unknown];__GI___futex_abstimed_wait_cancelable64;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_futex_[k];do_futex_[k];futex_wait_[k];futex_wait_queue_[k];schedule_[k];__schedule_[k];pick_next_task_[k];pick_next_task_fair_[k];newidle_balance_[k];load_balance_[k];find_busiest_group_[k] 28010421
BioCMA-MCST_cli;[unknown];__GI___futex_abstimed_wait_cancelable64;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_futex_[k];do_futex_[k];futex_wait_[k];futex_wait_queue_[k];schedule_[k];__schedule_[k];psi_task_switch_[k];psi_group_change_[k] 45856078
BioCMA-MCST_cli;[unknown];__GI___futex_abstimed_wait_cancelable64;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_futex_[k];do_futex_[k];futex_wait_[k];futex_wait_queue_[k];schedule_[k];__schedule_[k];raw_spin_rq_lock_nested_[k];_raw_spin_lock_[k];native_queued_spin_lock_slowpath_[k] 10095594
BioCMA-MCST_cli;[unknown];__GI___futex_abstimed_wait_cancelable64;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_futex_[k];do_futex_[k];futex_wait_[k];futex_wait_queue_[k];schedule_[k];__schedule_[k];raw_spin_rq_unlock_[k] 2744094
BioCMA-MCST_cli;[unknown];__GI___futex_abstimed_wait_cancelable64;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_futex_[k];do_futex_[k];futex_wait_[k];futex_wait_setup_[k];__get_user_nocheck_4_[k] 26078007
BioCMA-MCST_cli;[unknown];__GI___futex_abstimed_wait_cancelable64;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_futex_[k];do_futex_[k];futex_wait_[k];futex_wait_setup_[k];futex_q_lock_[k] 22155621
BioCMA-MCST_cli;[unknown];__GI___futex_abstimed_wait_cancelable64;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_exit_to_user_mode_[k];exit_to_user_mode_prepare_[k];exit_to_user_mode_loop_[k] 5791463
BioCMA-MCST_cli;[unknown];__GI___futex_abstimed_wait_cancelable64;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_exit_to_user_mode_[k];exit_to_user_mode_prepare_[k];exit_to_user_mode_loop_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];_raw_spin_unlock_[k] 3565184
BioCMA-MCST_cli;[unknown];__GI___pthread_disable_asynccancel 6616411
BioCMA-MCST_cli;[unknown];__brk;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_brk_[k];__do_sys_brk_[k];do_vmi_align_munmap_[k];unmap_region_[k];unmap_vmas_[k];unmap_single_vma_[k];unmap_page_range_[k];zap_pmd_range.isra.0_[k];zap_pte_range_[k];page_remove_rmap_[k];__rcu_read_unlock_[k] 30555273
BioCMA-MCST_cli;[unknown];__brk;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_brk_[k];__do_sys_brk_[k];do_vmi_align_munmap_[k];unmap_region_[k];unmap_vmas_[k];unmap_single_vma_[k];unmap_page_range_[k];zap_pmd_range.isra.0_[k];zap_pte_range_[k];tlb_flush_mmu_[k];tlb_batch_pages_flush_[k];free_swap_cache_[k] 31780501
BioCMA-MCST_cli;[unknown];__sched_yield 15439370952
BioCMA-MCST_cli;[unknown];__sched_yield;asm_common_interrupt_[k];common_interrupt_[k];__common_interrupt_[k];handle_edge_irq_[k];handle_irq_event_[k];__handle_irq_event_percpu_[k];amdgpu_irq_handler_[k];amdgpu_ih_process_[k];amdgpu_irq_dispatch_[k] 50027611
BioCMA-MCST_cli;[unknown];__sched_yield;asm_common_interrupt_[k];common_interrupt_[k];__common_interrupt_[k];handle_edge_irq_[k];handle_irq_event_[k];__handle_irq_event_percpu_[k];amdgpu_irq_handler_[k];amdgpu_ih_process_[k];amdgpu_irq_dispatch_[k];amdgpu_dm_irq_handler_[k];dm_pflip_high_irq_[k];drm_crtc_accurate_vblank_count_[k];drm_update_vblank_count_[k];__get_vblank_counter_[k];amdgpu_get_vblank_counter_kms_[k];amdgpu_display_get_crtc_scanoutpos_[k];dm_crtc_get_scanoutpos_[k];dc_stream_get_scanoutpos_[k];optc1_get_crtc_scanoutpos_[k];generic_reg_get2_[k];amdgpu_cgs_read_register_[k] 20418703
BioCMA-MCST_cli;[unknown];__sched_yield;asm_common_interrupt_[k];common_interrupt_[k];__common_interrupt_[k];handle_edge_irq_[k];handle_irq_event_[k];__handle_irq_event_percpu_[k];amdgpu_irq_handler_[k];amdgpu_ih_process_[k];amdgpu_irq_dispatch_[k];amdgpu_dm_irq_handler_[k];dm_pflip_high_irq_[k];drm_crtc_send_vblank_event_[k];send_vblank_event_[k];drm_send_event_timestamp_locked_[k];drm_send_event_helper_[k];complete_all_[k];wake_up_process_[k];try_to_wake_up_[k];ttwu_do_activate_[k] 28216591
BioCMA-MCST_cli;[unknown];__sched_yield;asm_common_interrupt_[k];common_interrupt_[k];__common_interrupt_[k];handle_edge_irq_[k];handle_irq_event_[k];__handle_irq_event_percpu_[k];amdgpu_irq_handler_[k];amdgpu_ih_process_[k];amdgpu_irq_dispatch_[k];gfx_v9_0_eop_irq_[k];amdgpu_fence_process_[k];dma_fence_signal_[k];dma_fence_signal_timestamp_locked_[k];drm_sched_job_done_cb_[k];drm_sched_job_done.isra.0_[k];__wake_up_[k];__wake_up_common_lock_[k];__wake_up_common_[k];autoremove_wake_function_[k];default_wake_function_[k];try_to_wake_up_[k];raw_spin_rq_lock_nested_[k];_raw_spin_lock_[k];native_queued_spin_lock_slowpath_[k] 23098517
BioCMA-MCST_cli;[unknown];__sched_yield;asm_common_interrupt_[k];common_interrupt_[k];irq_exit_rcu_[k];__irq_exit_rcu_[k];__do_softirq_[k];tasklet_hi_action_[k];tasklet_action_common.constprop.0_[k];usb_giveback_urb_bh_[k];__usb_hcd_giveback_urb_[k];hid_irq_in_[k];hid_get_report_[k] 20671540
BioCMA-MCST_cli;[unknown];__sched_yield;asm_common_interrupt_[k];common_interrupt_[k];irq_exit_rcu_[k];__irq_exit_rcu_[k];__do_softirq_[k];tasklet_hi_action_[k];tasklet_action_common.constprop.0_[k];usb_giveback_urb_bh_[k];__usb_hcd_giveback_urb_[k];hid_irq_in_[k];usb_submit_urb_[k];usb_hcd_submit_urb_[k];usb_hcd_map_urb_for_dma_[k] 20435867
BioCMA-MCST_cli;[unknown];__sched_yield;asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k] 23114803
BioCMA-MCST_cli;[unknown];__sched_yield;asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];hrtimer_wakeup_[k];wake_up_process_[k];try_to_wake_up_[k];ttwu_do_activate_[k];enqueue_task_[k];psi_task_change_[k] 18681226
BioCMA-MCST_cli;[unknown];__sched_yield;asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];account_process_tick_[k];account_user_time_[k];acct_account_cputime_[k] 20001192
BioCMA-MCST_cli;[unknown];__sched_yield;asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];scheduler_tick_[k];perf_event_task_tick_[k];perf_adjust_freq_unthr_context_[k] 22842000
BioCMA-MCST_cli;[unknown];__sched_yield;asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];scheduler_tick_[k];perf_event_task_tick_[k];perf_adjust_freq_unthr_context_[k];x86_pmu_disable_[k];amd_pmu_disable_all_[k];native_write_msr_[k] 21945132
BioCMA-MCST_cli;[unknown];__sched_yield;asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];scheduler_tick_[k];perf_event_task_tick_[k];perf_adjust_freq_unthr_context_[k];x86_pmu_disable_[k];amd_pmu_disable_all_[k];x86_pmu_disable_all_[k] 27794335
BioCMA-MCST_cli;[unknown];__sched_yield;asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];scheduler_tick_[k];task_tick_fair_[k];__calc_delta_[k] 23305276
BioCMA-MCST_cli;[unknown];__sched_yield;asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];scheduler_tick_[k];task_tick_fair_[k];update_load_avg_[k] 21562234
BioCMA-MCST_cli;[unknown];__sched_yield;asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];irq_exit_rcu_[k];__irq_exit_rcu_[k];__do_softirq_[k];run_timer_softirq_[k];__run_timers_[k];call_timer_fn_[k];delayed_work_timer_fn_[k];__queue_work_[k] 24828751
BioCMA-MCST_cli;[unknown];__sched_yield;asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];irqentry_exit_[k];irqentry_exit_to_user_mode_[k];exit_to_user_mode_prepare_[k];exit_to_user_mode_loop_[k];__rseq_handle_notify_resume_[k];rseq_ip_fixup_[k];__get_user_8_[k] 27555322
BioCMA-MCST_cli;[unknown];__sched_yield;asm_sysvec_irq_work_[k];sysvec_irq_work_[k];__sysvec_irq_work_[k];irq_work_run_[k];irq_work_run_list_[k];irq_work_single_[k];dma_fence_chain_irq_work_[k];dma_fence_signal_[k];dma_fence_signal_timestamp_locked_[k];dma_fence_default_wait_cb_[k];wake_up_state_[k];try_to_wake_up_[k];update_rq_clock_[k];sched_clock_cpu_[k] 6851006
BioCMA-MCST_cli;[unknown];__sched_yield;do_syscall_64_[k] 2767644086
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_[k] 20828969030
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k] 24428412997
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];__x64_sys_sched_yield_[k] 10013046374
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];__x64_sys_sched_yield_[k];asm_common_interrupt_[k];common_interrupt_[k];irq_exit_rcu_[k];__irq_exit_rcu_[k];__do_softirq_[k];tasklet_hi_action_[k];tasklet_action_common.constprop.0_[k];usb_giveback_urb_bh_[k];__usb_hcd_giveback_urb_[k];hid_irq_in_[k];hid_input_report_[k];hid_report_raw_event_[k];hidinput_report_event_[k];input_event_[k];input_handle_event_[k];input_event_dispose_[k];input_pass_values.part.0_[k];input_to_handler_[k];evdev_events_[k];evdev_pass_values_[k];__wake_up_[k];__wake_up_common_lock_[k];__wake_up_common_[k];ep_poll_callback_[k];__wake_up_[k];__wake_up_common_lock_[k];__wake_up_common_[k];ep_poll_callback_[k];__wake_up_[k];__wake_up_common_lock_[k];__wake_up_common_[k];ep_autoremove_wake_function_[k];default_wake_function_[k];try_to_wake_up_[k];ttwu_do_activate_[k];enqueue_task_[k];enqueue_task_fair_[k];enqueue_entity_[k] 23843216
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];__x64_sys_sched_yield_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];irq_exit_rcu_[k];__irq_exit_rcu_[k];__do_softirq_[k];rcu_core_si_[k];rcu_core_[k] 22170926
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];__x86_indirect_thunk_rax_[k] 562959295
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k] 22748883647
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k] 5330147895
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];__x86_indirect_thunk_rax_[k] 161260866
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];asm_common_interrupt_[k] 22299141
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];asm_sysvec_apic_timer_interrupt_[k] 26917517
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];asm_sysvec_reschedule_ipi_[k] 47963444
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k] 38863629986
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];__schedule_[k] 937255871
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];_raw_spin_lock_[k] 6261245992
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];_raw_spin_unlock_[k] 2882668882
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];asm_common_interrupt_[k];common_interrupt_[k];__common_interrupt_[k];handle_edge_irq_[k];handle_irq_event_[k];__handle_irq_event_percpu_[k];amdgpu_irq_handler_[k];amdgpu_ih_process_[k];amdgpu_irq_dispatch_[k];amdgpu_dm_irq_handler_[k];dm_pflip_high_irq_[k];drm_crtc_send_vblank_event_[k] 27203438
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];asm_common_interrupt_[k];common_interrupt_[k];__common_interrupt_[k];handle_edge_irq_[k];handle_irq_event_[k];__handle_irq_event_percpu_[k];amdgpu_irq_handler_[k];amdgpu_ih_process_[k];amdgpu_irq_dispatch_[k];amdgpu_dm_irq_handler_[k];dm_pflip_high_irq_[k];drm_crtc_send_vblank_event_[k];send_vblank_event_[k];drm_send_event_timestamp_locked_[k];complete_all_[k] 20205741
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];asm_common_interrupt_[k];common_interrupt_[k];__common_interrupt_[k];handle_edge_irq_[k];handle_irq_event_[k];__handle_irq_event_percpu_[k];amdgpu_irq_handler_[k];amdgpu_ih_process_[k];amdgpu_irq_dispatch_[k];amdgpu_dm_irq_handler_[k];dm_pflip_high_irq_[k];drm_crtc_send_vblank_event_[k];send_vblank_event_[k];drm_send_event_timestamp_locked_[k];drm_send_event_helper_[k];__wake_up_[k];__wake_up_common_lock_[k];__wake_up_common_[k];ep_poll_callback_[k];__wake_up_[k];__wake_up_common_lock_[k];__wake_up_common_[k];ep_autoremove_wake_function_[k];default_wake_function_[k];try_to_wake_up_[k];raw_spin_rq_lock_nested_[k];_raw_spin_lock_[k];native_queued_spin_lock_slowpath_[k] 8392727
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];asm_common_interrupt_[k];common_interrupt_[k];__common_interrupt_[k];handle_edge_irq_[k];handle_irq_event_[k];__handle_irq_event_percpu_[k];amdgpu_irq_handler_[k];amdgpu_ih_process_[k];amdgpu_irq_dispatch_[k];gfx_v9_0_eop_irq_[k];amdgpu_fence_process_[k];dma_fence_signal_[k];dma_fence_signal_timestamp_locked_[k];drm_sched_job_done_cb_[k];drm_sched_job_done.isra.0_[k];__wake_up_[k];__wake_up_common_lock_[k];__wake_up_common_[k];autoremove_wake_function_[k];default_wake_function_[k];try_to_wake_up_[k] 22301430
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];asm_common_interrupt_[k];common_interrupt_[k];__common_interrupt_[k];handle_edge_irq_[k];handle_irq_event_[k];__handle_irq_event_percpu_[k];nvme_irq_[k];nvme_poll_cq_[k] 21163600
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];_raw_spin_unlock_irqrestore_[k] 26809412
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k] 9897879
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];__remove_hrtimer_[k];timerqueue_del_[k] 23665004
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];hrtimer_wakeup_[k];wake_up_process_[k];try_to_wake_up_[k];ttwu_do_activate_[k];enqueue_task_[k];enqueue_task_fair_[k];update_load_avg_[k];cpufreq_this_cpu_can_update_[k] 20117144
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];scheduler_tick_[k];arch_scale_freq_tick_[k];native_read_msr_[k] 26706022
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];scheduler_tick_[k];perf_event_task_tick_[k];perf_adjust_freq_unthr_context_[k] 25728397
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];scheduler_tick_[k];task_tick_fair_[k];update_load_avg_[k];sugov_update_single_freq_[k];cpufreq_driver_fast_switch_[k];acpi_cpufreq_fast_switch_[k] 14730558
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];irq_exit_rcu_[k];__irq_exit_rcu_[k];__do_softirq_[k];rcu_core_si_[k];rcu_core_[k];rcu_do_batch_[k];drm_sched_fence_free_rcu_[k];kmem_cache_free_[k];__slab_free_[k] 11324847
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];irq_exit_rcu_[k];__irq_exit_rcu_[k];__do_softirq_[k];rcu_core_si_[k];rcu_core_[k];rcu_do_batch_[k];rcu_segcblist_extract_done_cbs_[k] 23189056
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];asm_sysvec_reschedule_ipi_[k];irqentry_enter_[k] 17325938
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];clear_buddies_[k] 112608122
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];raw_spin_rq_lock_nested_[k] 5299612929
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];raw_spin_rq_lock_nested_[k];_raw_spin_lock_[k];native_queued_spin_lock_slowpath_[k] 764580274
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];raw_spin_rq_unlock_[k] 244870230
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];raw_spin_rq_unlock_[k];_raw_spin_unlock_[k] 1047074835
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k] 9821327814
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k] 58275856809
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];__perf_event_task_sched_in_[k] 8312339
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];__perf_event_task_sched_out_[k] 40544962
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];_raw_spin_lock_[k] 6144799042
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];_raw_spin_unlock_[k] 2566720215
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];asm_common_interrupt_[k];common_interrupt_[k];__common_interrupt_[k];handle_edge_irq_[k];handle_irq_event_[k];__handle_irq_event_percpu_[k];amdgpu_irq_handler_[k];amdgpu_ih_process_[k];__wake_up_[k];__wake_up_common_lock_[k];__wake_up_common_[k] 21417373
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];asm_common_interrupt_[k];common_interrupt_[k];__common_interrupt_[k];handle_edge_irq_[k];handle_irq_event_[k];__handle_irq_event_percpu_[k];amdgpu_irq_handler_[k];amdgpu_ih_process_[k];amdgpu_irq_dispatch_[k];amdgpu_dm_irq_handler_[k];dm_crtc_high_irq_[k];amdgpu_dm_crtc_handle_vblank_[k];drm_crtc_handle_vblank_[k];drm_handle_vblank_[k];drm_crtc_get_last_vbltimestamp_[k] 27907038
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];asm_common_interrupt_[k];common_interrupt_[k];__common_interrupt_[k];handle_edge_irq_[k];handle_irq_event_[k];__handle_irq_event_percpu_[k];amdgpu_irq_handler_[k];amdgpu_ih_process_[k];amdgpu_irq_dispatch_[k];amdgpu_dm_irq_handler_[k];dm_crtc_high_irq_[k];amdgpu_dm_crtc_handle_vblank_[k];drm_crtc_handle_vblank_[k];drm_handle_vblank_[k];drm_update_vblank_count_[k];__get_vblank_counter_[k];amdgpu_get_vblank_counter_kms_[k];amdgpu_display_get_crtc_scanoutpos_[k];dm_crtc_get_scanoutpos_[k];dc_stream_get_scanoutpos_[k];optc1_get_crtc_scanoutpos_[k];generic_reg_get2_[k];dm_read_reg_func_[k];amdgpu_cgs_read_register_[k];amdgpu_device_rreg_[k] 19457773
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];asm_common_interrupt_[k];common_interrupt_[k];__common_interrupt_[k];handle_edge_irq_[k];handle_irq_event_[k];__handle_irq_event_percpu_[k];amdgpu_irq_handler_[k];amdgpu_ih_process_[k];amdgpu_irq_dispatch_[k];amdgpu_dm_irq_handler_[k];dm_crtc_high_irq_[k];amdgpu_dm_crtc_handle_vblank_[k];drm_crtc_handle_vblank_[k];drm_handle_vblank_[k];drm_update_vblank_count_[k];__get_vblank_counter_[k];amdgpu_get_vblank_counter_kms_[k];amdgpu_display_get_crtc_scanoutpos_[k];dm_crtc_get_scanoutpos_[k];dc_stream_get_scanoutpos_[k];optc1_get_crtc_scanoutpos_[k];optc1_get_position_[k];generic_reg_get_[k];dm_read_reg_func_[k];amdgpu_cgs_read_register_[k];amdgpu_device_rreg_[k] 21265122
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];asm_common_interrupt_[k];common_interrupt_[k];__common_interrupt_[k];handle_edge_irq_[k];handle_irq_event_[k];__handle_irq_event_percpu_[k];amdgpu_irq_handler_[k];amdgpu_ih_process_[k];amdgpu_irq_dispatch_[k];amdgpu_dm_irq_handler_[k];dm_crtc_high_irq_[k];amdgpu_dm_crtc_handle_vblank_[k];drm_crtc_handle_vblank_[k];drm_handle_vblank_[k];drm_update_vblank_count_[k];__get_vblank_counter_[k];amdgpu_get_vblank_counter_kms_[k];dm_vblank_get_counter_[k];dc_stream_get_vblank_counter_[k];optc1_get_vblank_counter_[k];generic_reg_get_[k];dm_read_reg_func_[k];amdgpu_cgs_read_register_[k];amdgpu_device_rreg_[k] 75536961
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];asm_common_interrupt_[k];common_interrupt_[k];__common_interrupt_[k];handle_edge_irq_[k];handle_irq_event_[k];__handle_irq_event_percpu_[k];amdgpu_irq_handler_[k];amdgpu_ih_process_[k];amdgpu_irq_dispatch_[k];amdgpu_dm_irq_handler_[k];dm_pflip_high_irq_[k];amdgpu_get_vblank_counter_kms_[k];amdgpu_display_get_crtc_scanoutpos_[k];dm_crtc_get_scanoutpos_[k];dc_stream_get_scanoutpos_[k];optc1_get_crtc_scanoutpos_[k];optc1_get_position_[k];generic_reg_get2_[k];dm_read_reg_func_[k];amdgpu_cgs_read_register_[k];amdgpu_device_rreg_[k] 23290461
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];asm_common_interrupt_[k];common_interrupt_[k];__common_interrupt_[k];handle_edge_irq_[k];handle_irq_event_[k];__handle_irq_event_percpu_[k];amdgpu_irq_handler_[k];amdgpu_ih_process_[k];amdgpu_irq_dispatch_[k];amdgpu_dm_irq_handler_[k];dm_pflip_high_irq_[k];drm_crtc_accurate_vblank_count_[k];drm_update_vblank_count_[k];__get_vblank_counter_[k];amdgpu_get_vblank_counter_kms_[k];amdgpu_display_get_crtc_scanoutpos_[k];dm_crtc_get_scanoutpos_[k];dc_stream_get_scanoutpos_[k];optc1_get_crtc_scanoutpos_[k];optc1_get_position_[k];generic_reg_get_[k];dm_read_reg_func_[k];amdgpu_cgs_read_register_[k];amdgpu_device_rreg_[k] 26532841
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];asm_common_interrupt_[k];common_interrupt_[k];__common_interrupt_[k];handle_edge_irq_[k];handle_irq_event_[k];__handle_irq_event_percpu_[k];amdgpu_irq_handler_[k];amdgpu_ih_process_[k];amdgpu_irq_dispatch_[k];amdgpu_dm_irq_handler_[k];dm_pflip_high_irq_[k];drm_crtc_send_vblank_event_[k];send_vblank_event_[k];drm_send_event_timestamp_locked_[k];drm_send_event_helper_[k];complete_all_[k];_raw_spin_lock_irqsave_[k];__raw_spin_lock_irqsave_[k] 21672863
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];asm_common_interrupt_[k];common_interrupt_[k];__common_interrupt_[k];handle_edge_irq_[k];handle_irq_event_[k];__handle_irq_event_percpu_[k];amdgpu_irq_handler_[k];amdgpu_ih_process_[k];amdgpu_irq_dispatch_[k];amdgpu_dm_irq_handler_[k];dm_pflip_high_irq_[k];drm_crtc_send_vblank_event_[k];send_vblank_event_[k];drm_send_event_timestamp_locked_[k];drm_send_event_helper_[k];complete_all_[k];wake_up_process_[k];try_to_wake_up_[k];ttwu_do_activate_[k];enqueue_task_[k];psi_task_change_[k];srso_safe_ret_[k] 28185289
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];asm_common_interrupt_[k];common_interrupt_[k];__common_interrupt_[k];handle_edge_irq_[k];handle_irq_event_[k];__handle_irq_event_percpu_[k];amdgpu_irq_handler_[k];amdgpu_ih_process_[k];amdgpu_irq_dispatch_[k];gfx_v9_0_eop_irq_[k];amdgpu_fence_process_[k];dma_fence_signal_[k];dma_fence_signal_timestamp_locked_[k];drm_sched_job_done_cb_[k];drm_sched_job_done.isra.0_[k];__wake_up_[k];__wake_up_common_lock_[k];__wake_up_common_[k];autoremove_wake_function_[k];default_wake_function_[k];try_to_wake_up_[k];ttwu_do_activate_[k];enqueue_task_[k];enqueue_task_rt_[k];dequeue_rt_stack_[k] 35905801
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];asm_common_interrupt_[k];common_interrupt_[k];__common_interrupt_[k];handle_edge_irq_[k];handle_irq_event_[k];__handle_irq_event_percpu_[k];amdgpu_irq_handler_[k];amdgpu_ih_process_[k];amdgpu_mm_wdoorbell_[k] 25523256
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];asm_common_interrupt_[k];common_interrupt_[k];__common_interrupt_[k];handle_edge_irq_[k];handle_irq_event_[k];__handle_irq_event_percpu_[k];nvme_irq_[k];nvme_pci_complete_batch_[k];blk_mq_end_request_batch_[k];bio_endio_[k];mpage_end_io_[k];__read_end_io_[k] 25013090
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];asm_common_interrupt_[k];common_interrupt_[k];__common_interrupt_[k];handle_edge_irq_[k];note_interrupt_[k] 21597959
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];asm_common_interrupt_[k];common_interrupt_[k];__common_interrupt_[k];handle_irq_event_[k] 22171475
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];asm_common_interrupt_[k];common_interrupt_[k];irq_exit_rcu_[k];__irq_exit_rcu_[k];__do_softirq_[k];tasklet_hi_action_[k];tasklet_action_common.constprop.0_[k];usb_giveback_urb_bh_[k];__usb_hcd_giveback_urb_[k];hid_irq_in_[k];hid_input_report_[k];hid_report_raw_event_[k];hidinput_report_event_[k];input_event_[k];input_handle_event_[k];input_event_dispose_[k];input_pass_values.part.0_[k];input_to_handler_[k];evdev_events_[k];evdev_pass_values_[k];__wake_up_[k];__wake_up_common_lock_[k];__wake_up_common_[k];ep_poll_callback_[k];__wake_up_[k];__wake_up_common_lock_[k];__wake_up_common_[k];ep_poll_callback_[k];__wake_up_[k];__wake_up_common_lock_[k];__wake_up_common_[k];ep_autoremove_wake_function_[k];default_wake_function_[k];try_to_wake_up_[k];ttwu_do_activate_[k];enqueue_task_[k];enqueue_task_fair_[k] 20950506
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];asm_common_interrupt_[k];common_interrupt_[k];irq_exit_rcu_[k];__irq_exit_rcu_[k];__do_softirq_[k];tasklet_hi_action_[k];tasklet_action_common.constprop.0_[k];usb_giveback_urb_bh_[k];__usb_hcd_giveback_urb_[k];hid_irq_in_[k];usb_submit_urb_[k];usb_hcd_submit_urb_[k];xhci_urb_enqueue_[k];xhci_queue_intr_tx_[k];xhci_queue_bulk_tx_[k];xhci_ring_ep_doorbell_[k] 45120355
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];asm_sysvec_apic_timer_interrupt_[k] 5966770
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k] 47151144
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_next_event_base_[k] 20430954
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];__remove_hrtimer_[k];rb_erase_[k] 18113975
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];hrtimer_wakeup_[k];wake_up_process_[k];try_to_wake_up_[k];ttwu_do_activate_[k];enqueue_task_[k];psi_task_change_[k];psi_group_change_[k] 21124330
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k] 21950836
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];ktime_get_[k] 20604251
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];calc_global_load_tick_[k] 20143715
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];invoke_rcu_core_[k] 23206917
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];sched_clock_tick_[k] 25208598
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];scheduler_tick_[k];perf_event_task_tick_[k];perf_adjust_freq_unthr_context_[k] 132607530
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];scheduler_tick_[k];perf_event_task_tick_[k];perf_adjust_freq_unthr_context_[k];x86_pmu_disable_[k];amd_pmu_disable_all_[k];amd_pmu_check_overflow_[k];__x86_indirect_thunk_rax_[k] 28890373
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];scheduler_tick_[k];perf_event_task_tick_[k];perf_adjust_freq_unthr_context_[k];x86_pmu_disable_[k];amd_pmu_disable_all_[k];native_write_msr_[k] 20350626
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];scheduler_tick_[k];perf_event_task_tick_[k];perf_adjust_freq_unthr_context_[k];x86_pmu_disable_[k];amd_pmu_disable_all_[k];x86_pmu_disable_all_[k];native_read_msr_[k] 21107916
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];scheduler_tick_[k];srso_safe_ret_[k] 19748045
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];scheduler_tick_[k];task_tick_fair_[k];hrtimer_active_[k] 23549613
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];scheduler_tick_[k];task_tick_fair_[k];update_curr_[k] 24751491
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];scheduler_tick_[k];task_tick_fair_[k];update_load_avg_[k] 77950360
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];scheduler_tick_[k];task_tick_fair_[k];update_load_avg_[k];sugov_update_single_freq_[k];cpufreq_driver_fast_switch_[k];acpi_cpufreq_fast_switch_[k];native_write_msr_[k] 6321145
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];update_rq_clock_[k] 21579682
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];timerqueue_del_[k] 21171209
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];ktime_get_update_offsets_now_[k] 20500168
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];read_tsc_[k] 21564507
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];srso_safe_ret_[k] 25899518
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];tick_program_event_[k];clockevents_program_event_[k];ktime_get_[k] 19621930
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];irq_exit_rcu_[k];__irq_exit_rcu_[k];__do_softirq_[k];rcu_core_si_[k];rcu_core_[k] 22533957
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];irq_exit_rcu_[k];__irq_exit_rcu_[k];__do_softirq_[k];rcu_core_si_[k];rcu_core_[k];rcu_accelerate_cbs_[k];rcu_segcblist_accelerate_[k] 19227344
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];irq_exit_rcu_[k];__irq_exit_rcu_[k];__do_softirq_[k];rcu_core_si_[k];rcu_core_[k];rcu_do_batch_[k];file_free_rcu_[k];kmem_cache_free_[k] 23823734
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];irq_exit_rcu_[k];__irq_exit_rcu_[k];__do_softirq_[k];rcu_core_si_[k];rcu_core_[k];rcu_do_batch_[k];file_free_rcu_[k];kmem_cache_free_[k];__slab_free_[k] 30152777
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];irq_exit_rcu_[k];__irq_exit_rcu_[k];__do_softirq_[k];rcu_core_si_[k];rcu_core_[k];rcu_do_batch_[k];file_free_rcu_[k];kmem_cache_free_[k];__slab_free_[k];slab_update_freelist.constprop.0.isra.0_[k] 19447067
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];irq_exit_rcu_[k];__irq_exit_rcu_[k];__do_softirq_[k];rcu_core_si_[k];rcu_core_[k];rcu_do_batch_[k];i_callback_[k];shmem_free_in_core_inode_[k];kmem_cache_free_[k] 21793717
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];irq_exit_rcu_[k];__irq_exit_rcu_[k];__do_softirq_[k];rcu_core_si_[k];rcu_core_[k];rcu_do_batch_[k];rcu_cblist_dequeue_[k] 25210641
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];irq_exit_rcu_[k];__irq_exit_rcu_[k];__do_softirq_[k];rcu_core_si_[k];rcu_core_[k];rcu_report_qs_rnp_[k];rcu_gp_kthread_wake_[k];swake_up_one_[k];wake_up_process_[k];try_to_wake_up_[k];ttwu_do_activate_[k];enqueue_task_[k];enqueue_task_fair_[k] 19549726
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];irq_exit_rcu_[k];__irq_exit_rcu_[k];__do_softirq_[k];run_rebalance_domains_[k];rebalance_domains_[k];load_balance_[k];_raw_spin_rq_lock_irqsave_[k];raw_spin_rq_lock_nested_[k];_raw_spin_lock_[k];native_queued_spin_lock_slowpath_[k] 12446914
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];irq_exit_rcu_[k];__irq_exit_rcu_[k];__do_softirq_[k];run_rebalance_domains_[k];update_blocked_averages_[k];__update_blocked_fair_[k] 42191122
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];irq_exit_rcu_[k];__irq_exit_rcu_[k];__do_softirq_[k];run_rebalance_domains_[k];update_blocked_averages_[k];__update_blocked_fair_[k];update_load_avg_[k] 27152986
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k] 300975682
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];__perf_event_task_sched_in_[k] 224350906
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];__perf_event_task_sched_in_[k];_raw_spin_unlock_[k] 13235895
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];__perf_event_task_sched_in_[k];perf_ctx_enable_[k] 31761191
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];__perf_event_task_sched_in_[k];perf_ctx_enable_[k];x86_pmu_enable_[k] 18471791
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];__perf_event_task_sched_in_[k];perf_ctx_enable_[k];x86_pmu_enable_[k];amd_pmu_enable_all_[k] 13098213
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];__perf_event_task_sched_in_[k];perf_ctx_enable_[k];x86_pmu_enable_[k];amd_pmu_enable_all_[k];native_write_msr_[k] 60011558
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];__perf_event_task_sched_in_[k];perf_ctx_enable_[k];x86_pmu_enable_[k];amd_pmu_enable_all_[k];x86_pmu_enable_event_[k] 22320210
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];__rcu_read_unlock_[k] 108097067
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];_raw_spin_unlock_[k] 47926795
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];asm_common_interrupt_[k];common_interrupt_[k];__common_interrupt_[k];handle_edge_irq_[k] 8864442
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];asm_common_interrupt_[k];common_interrupt_[k];__common_interrupt_[k];handle_edge_irq_[k];handle_irq_event_[k];__handle_irq_event_percpu_[k];amdgpu_irq_handler_[k];amdgpu_ih_process_[k];amdgpu_irq_dispatch_[k];amdgpu_dm_irq_handler_[k];dm_crtc_high_irq_[k];_raw_spin_lock_irqsave_[k];__raw_spin_lock_irqsave_[k] 7314478
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];asm_common_interrupt_[k];common_interrupt_[k];__common_interrupt_[k];handle_edge_irq_[k];handle_irq_event_[k];__handle_irq_event_percpu_[k];amdgpu_irq_handler_[k];amdgpu_ih_process_[k];amdgpu_irq_dispatch_[k];amdgpu_dm_irq_handler_[k];dm_crtc_high_irq_[k];amdgpu_dm_crtc_handle_vblank_[k];drm_crtc_handle_vblank_[k];drm_handle_vblank_[k];drm_update_vblank_count_[k];__get_vblank_counter_[k];amdgpu_get_vblank_counter_kms_[k];dm_vblank_get_counter_[k];dc_stream_get_vblank_counter_[k];optc1_get_vblank_counter_[k];generic_reg_get_[k];dm_read_reg_func_[k];amdgpu_cgs_read_register_[k];amdgpu_device_rreg_[k] 11591772
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];asm_common_interrupt_[k];common_interrupt_[k];__common_interrupt_[k];handle_edge_irq_[k];handle_irq_event_[k];__handle_irq_event_percpu_[k];amdgpu_irq_handler_[k];amdgpu_ih_process_[k];amdgpu_irq_dispatch_[k];amdgpu_dm_irq_handler_[k];dm_pflip_high_irq_[k];amdgpu_get_vblank_counter_kms_[k];dm_vblank_get_counter_[k];dc_stream_get_vblank_counter_[k];optc1_get_vblank_counter_[k];generic_reg_get_[k];dm_read_reg_func_[k];amdgpu_cgs_read_register_[k];amdgpu_device_rreg_[k] 9078690
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];asm_common_interrupt_[k];common_interrupt_[k];__common_interrupt_[k];handle_edge_irq_[k];handle_irq_event_[k];__handle_irq_event_percpu_[k];rtw_pci_interrupt_handler_[k];rtw_pci_write32_[k] 10957873
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];asm_common_interrupt_[k];common_interrupt_[k];__common_interrupt_[k];handle_edge_irq_[k];handle_irq_event_[k];__handle_irq_event_percpu_[k];xhci_msi_irq_[k];_raw_spin_lock_[k] 7373070
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];asm_common_interrupt_[k];common_interrupt_[k];__common_interrupt_[k];handle_edge_irq_[k];handle_irq_event_[k];__handle_irq_event_percpu_[k];xhci_msi_irq_[k];xhci_irq_[k];xhci_handle_event_[k];handle_tx_event_[k];process_bulk_intr_td.isra.0_[k];finish_td.isra.0_[k];xhci_td_cleanup.isra.0_[k];xhci_giveback_urb_in_irq.isra.0_[k];_raw_spin_lock_[k] 7906170
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];asm_common_interrupt_[k];common_interrupt_[k];__common_interrupt_[k];handle_irq_event_[k] 8866625
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];asm_common_interrupt_[k];common_interrupt_[k];irq_exit_rcu_[k];__irq_exit_rcu_[k];__do_softirq_[k];tasklet_hi_action_[k];tasklet_action_common.constprop.0_[k];usb_giveback_urb_bh_[k];__usb_hcd_giveback_urb_[k];hid_irq_in_[k];hid_input_report_[k];hid_report_raw_event_[k];hidinput_report_event_[k];input_event_[k];input_handle_event_[k];input_event_dispose_[k];input_pass_values.part.0_[k];input_to_handler_[k];evdev_events_[k];evdev_pass_values_[k];__wake_up_[k];__wake_up_common_lock_[k];ep_poll_callback_[k] 9959684
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];asm_common_interrupt_[k];common_interrupt_[k];irq_exit_rcu_[k];__irq_exit_rcu_[k];__do_softirq_[k];tasklet_hi_action_[k];tasklet_action_common.constprop.0_[k];usb_giveback_urb_bh_[k];__usb_hcd_giveback_urb_[k];hid_irq_in_[k];usb_submit_urb_[k];usb_hcd_submit_urb_[k];xhci_urb_enqueue_[k];xhci_queue_intr_tx_[k];xhci_queue_bulk_tx_[k];xhci_ring_ep_doorbell_[k] 7394835
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k] 41494224
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k] 9623973
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];enqueue_hrtimer_[k];timerqueue_add_[k] 9917188
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];hrtimer_wakeup_[k];wake_up_process_[k];try_to_wake_up_[k];ttwu_do_activate_[k];check_preempt_curr_[k];check_preempt_wakeup_[k] 15315614
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];hrtimer_wakeup_[k];wake_up_process_[k];try_to_wake_up_[k];ttwu_do_activate_[k];enqueue_task_[k];enqueue_task_fair_[k] 22108671
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];hrtimer_wakeup_[k];wake_up_process_[k];try_to_wake_up_[k];ttwu_do_activate_[k];enqueue_task_[k];enqueue_task_fair_[k];enqueue_entity_[k] 6861255
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];run_posix_cpu_timers_[k] 25804420
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];account_process_tick_[k];account_system_time_[k];account_system_index_time_[k] 8660627
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];rcu_sched_clock_irq_[k] 14966592
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];scheduler_tick_[k];_raw_spin_lock_[k] 8792239
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];scheduler_tick_[k];perf_event_task_tick_[k];perf_adjust_freq_unthr_context_[k] 54769278
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];scheduler_tick_[k];perf_event_task_tick_[k];perf_adjust_freq_unthr_context_[k];_raw_spin_unlock_[k] 10425619
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];scheduler_tick_[k];perf_event_task_tick_[k];perf_adjust_freq_unthr_context_[k];x86_pmu_disable_[k];amd_pmu_disable_all_[k];amd_pmu_check_overflow_[k];amd_pmu_test_overflow_topbit_[k];native_read_msr_[k] 7985281
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];scheduler_tick_[k];perf_event_task_tick_[k];perf_adjust_freq_unthr_context_[k];x86_pmu_disable_[k];amd_pmu_disable_all_[k];native_write_msr_[k] 13751271
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];scheduler_tick_[k];raw_spin_rq_unlock_[k];_raw_spin_unlock_[k] 11201551
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];scheduler_tick_[k];task_tick_fair_[k] 6851138
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];scheduler_tick_[k];task_tick_fair_[k];sugov_update_single_freq_[k] 7990300
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];scheduler_tick_[k];update_rq_clock_[k] 7530555
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];scheduler_tick_[k];update_rq_clock_[k];sched_clock_cpu_[k];sched_clock_[k];sched_clock_noinstr_[k];native_sched_clock_[k] 6844155
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];_raw_spin_lock_irq_[k] 12403384
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];irq_exit_rcu_[k];__irq_exit_rcu_[k];__do_softirq_[k];rcu_core_si_[k];rcu_core_[k];rcu_do_batch_[k];drm_sched_fence_free_rcu_[k];kmem_cache_free_[k];cache_from_obj_[k] 7465738
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];irq_exit_rcu_[k];__irq_exit_rcu_[k];__do_softirq_[k];rcu_core_si_[k];rcu_core_[k];rcu_do_batch_[k];file_free_rcu_[k];kmem_cache_free_[k] 17829815
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];irq_exit_rcu_[k];__irq_exit_rcu_[k];__do_softirq_[k];rcu_core_si_[k];rcu_core_[k];rcu_do_batch_[k];file_free_rcu_[k];kmem_cache_free_[k];obj_cgroup_uncharge_[k];refill_obj_stock_[k];drain_obj_stock_[k] 7256917
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];irq_exit_rcu_[k];__irq_exit_rcu_[k];__do_softirq_[k];run_rebalance_domains_[k];__msecs_to_jiffies_[k] 5342101
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];irq_exit_rcu_[k];__irq_exit_rcu_[k];__do_softirq_[k];run_rebalance_domains_[k];update_blocked_averages_[k];__update_blocked_fair_[k] 7334390
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];asm_sysvec_irq_work_[k];sysvec_irq_work_[k];__sysvec_irq_work_[k];irq_work_run_[k];irq_work_run_list_[k];irq_work_single_[k];dma_fence_chain_irq_work_[k];dma_fence_signal_[k];dma_fence_signal_timestamp_locked_[k];dma_fence_default_wait_cb_[k];wake_up_state_[k];try_to_wake_up_[k];ttwu_do_activate_[k];enqueue_task_[k];psi_task_change_[k];sched_clock_cpu_[k];sched_clock_[k] 10657706
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];raw_spin_rq_unlock_[k] 22118723
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];raw_spin_rq_unlock_[k];_raw_spin_unlock_[k] 43751463
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];srso_safe_ret_[k] 19405634
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k] 9921918354
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];check_cfs_rq_runtime_[k] 3815310922
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];pick_next_entity_[k] 5189372413
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];pick_next_task_fair_[k] 56220660287
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];pick_next_task_fair_[k];__calc_delta_[k] 1101936190
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];pick_next_task_fair_[k];__cgroup_account_cputime_[k] 86380055
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];pick_next_task_fair_[k];check_cfs_rq_runtime_[k] 74167683
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];pick_next_task_fair_[k];check_spread.isra.0_[k] 75323702
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];pick_next_task_fair_[k];clear_buddies_[k] 7355419
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];pick_next_task_fair_[k];cpuacct_charge_[k] 1608412571
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];pick_next_task_fair_[k];pick_next_entity_[k] 10827021140
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];pick_next_task_fair_[k];put_prev_entity_[k] 676064662
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];pick_next_task_fair_[k];put_prev_entity_[k];__update_load_avg_cfs_rq_[k] 26843746
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];pick_next_task_fair_[k];put_prev_entity_[k];__update_load_avg_se_[k] 28271855
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];pick_next_task_fair_[k];put_prev_entity_[k];srso_safe_ret_[k] 30381013
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];pick_next_task_fair_[k];put_prev_entity_[k];update_curr_[k] 101627457
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];pick_next_task_fair_[k];put_prev_entity_[k];update_load_avg_[k] 401999216
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];pick_next_task_fair_[k];put_prev_entity_[k];update_load_avg_[k];__update_load_avg_cfs_rq_[k] 126780700
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];pick_next_task_fair_[k];put_prev_entity_[k];update_load_avg_[k];__update_load_avg_se_[k] 263104314
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];pick_next_task_fair_[k];rb_erase_[k] 138605643
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];pick_next_task_fair_[k];rb_insert_color_[k] 94465065
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];pick_next_task_fair_[k];rb_next_[k] 102355354
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];pick_next_task_fair_[k];set_next_entity_[k] 625006081
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];pick_next_task_fair_[k];set_next_entity_[k];__update_load_avg_cfs_rq_[k] 42482461
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];pick_next_task_fair_[k];set_next_entity_[k];__update_load_avg_se_[k] 12676304
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];pick_next_task_fair_[k];set_next_entity_[k];clear_buddies_[k] 36176617
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];pick_next_task_fair_[k];set_next_entity_[k];srso_safe_ret_[k] 31985394
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];pick_next_task_fair_[k];set_next_entity_[k];update_load_avg_[k] 575679198
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];pick_next_task_fair_[k];set_next_entity_[k];update_load_avg_[k];__update_load_avg_cfs_rq_[k] 68779968
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];pick_next_task_fair_[k];set_next_entity_[k];update_load_avg_[k];__update_load_avg_se_[k] 168404737
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];pick_next_task_fair_[k];srso_return_thunk_[k] 132340751
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];pick_next_task_fair_[k];srso_safe_ret_[k] 4153362755
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];pick_next_task_fair_[k];update_curr_[k] 48049508450
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];pick_next_task_fair_[k];update_curr_[k];__calc_delta_[k] 8773631184
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];pick_next_task_fair_[k];update_curr_[k];__cgroup_account_cputime_[k] 8533360806
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];pick_next_task_fair_[k];update_curr_[k];__cgroup_account_cputime_[k];cgroup_rstat_updated_[k] 3025414829
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];pick_next_task_fair_[k];update_curr_[k];__cgroup_account_cputime_[k];cgroup_rstat_updated_[k];_raw_spin_lock_irqsave_[k];__raw_spin_lock_irqsave_[k];native_queued_spin_lock_slowpath_[k] 27724270
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];pick_next_task_fair_[k];update_curr_[k];cgroup_rstat_updated_[k] 631538469
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];pick_next_task_fair_[k];update_curr_[k];cpuacct_charge_[k] 6279383705
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];pick_next_task_fair_[k];update_curr_[k];srso_return_thunk_[k] 47625411
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];pick_next_task_fair_[k];update_curr_[k];srso_safe_ret_[k] 983672312
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];pick_next_task_fair_[k];update_curr_[k];update_min_vruntime_[k] 1830609303
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];pick_next_task_fair_[k];update_load_avg_[k] 143301499
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];pick_next_task_fair_[k];update_min_vruntime_[k] 5318456047
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];put_prev_entity_[k] 47783276
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];put_prev_task_balance_[k];put_prev_task_fair_[k];put_prev_entity_[k];update_load_avg_[k];sugov_update_single_freq_[k] 21109214
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];put_prev_task_balance_[k];put_prev_task_fair_[k];put_prev_entity_[k];update_load_avg_[k];sugov_update_single_freq_[k];get_next_freq.constprop.0_[k] 21949295
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];set_next_entity_[k] 11079616
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];srso_return_thunk_[k] 688000355
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];srso_safe_ret_[k] 10017420819
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];update_curr_[k] 946250348
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_fair_[k] 1076572238
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];prepare_task_switch_[k] 214876775
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];prepare_task_switch_[k];__perf_event_task_sched_out_[k] 20510090
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];prepare_task_switch_[k];__perf_event_task_sched_out_[k];__rcu_read_lock_[k] 45450126
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];prepare_task_switch_[k];__perf_event_task_sched_out_[k];__rcu_read_unlock_[k] 21752133
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];prepare_task_switch_[k];__perf_event_task_sched_out_[k];_raw_spin_lock_[k] 80957138
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];prepare_task_switch_[k];__perf_event_task_sched_out_[k];perf_ctx_disable_[k] 936480094
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];prepare_task_switch_[k];__perf_event_task_sched_out_[k];perf_event_context_sched_out_[k] 436235661
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];prepare_task_switch_[k];__perf_event_task_sched_out_[k];perf_event_context_sched_out_[k];perf_ctx_disable_[k] 505152759
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];prepare_task_switch_[k];__perf_event_task_sched_out_[k];perf_event_context_sched_out_[k];perf_ctx_disable_[k];amd_pmu_disable_all_[k] 12812216
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];prepare_task_switch_[k];__perf_event_task_sched_out_[k];perf_event_context_sched_out_[k];perf_ctx_disable_[k];x86_pmu_disable_[k];amd_brs_disable_all_[k] 57250151
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];prepare_task_switch_[k];__perf_event_task_sched_out_[k];perf_event_context_sched_out_[k];perf_ctx_disable_[k];x86_pmu_disable_[k];amd_pmu_check_overflow_[k] 81144170
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];prepare_task_switch_[k];__perf_event_task_sched_out_[k];perf_event_context_sched_out_[k];perf_ctx_disable_[k];x86_pmu_disable_[k];amd_pmu_disable_all_[k] 45811153
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];prepare_task_switch_[k];__perf_event_task_sched_out_[k];perf_event_context_sched_out_[k];perf_ctx_disable_[k];x86_pmu_disable_[k];amd_pmu_disable_all_[k];__x86_indirect_thunk_rax_[k] 40473563
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];prepare_task_switch_[k];__perf_event_task_sched_out_[k];perf_event_context_sched_out_[k];perf_ctx_disable_[k];x86_pmu_disable_[k];amd_pmu_disable_all_[k];__x86_indirect_thunk_rdx_[k] 84773178
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];prepare_task_switch_[k];__perf_event_task_sched_out_[k];perf_event_context_sched_out_[k];perf_ctx_disable_[k];x86_pmu_disable_[k];amd_pmu_disable_all_[k];amd_pmu_addr_offset_[k] 591362823
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];prepare_task_switch_[k];__perf_event_task_sched_out_[k];perf_event_context_sched_out_[k];perf_ctx_disable_[k];x86_pmu_disable_[k];amd_pmu_disable_all_[k];amd_pmu_check_overflow_[k] 107083217
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];prepare_task_switch_[k];__perf_event_task_sched_out_[k];perf_event_context_sched_out_[k];perf_ctx_disable_[k];x86_pmu_disable_[k];amd_pmu_disable_all_[k];amd_pmu_check_overflow_[k];amd_pmu_addr_offset_[k] 163203829
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];prepare_task_switch_[k];__perf_event_task_sched_out_[k];perf_event_context_sched_out_[k];perf_ctx_disable_[k];x86_pmu_disable_[k];amd_pmu_disable_all_[k];amd_pmu_check_overflow_[k];amd_pmu_test_overflow_topbit_[k] 115330516
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];prepare_task_switch_[k];__perf_event_task_sched_out_[k];perf_event_context_sched_out_[k];perf_ctx_disable_[k];x86_pmu_disable_[k];amd_pmu_disable_all_[k];amd_pmu_check_overflow_[k];amd_pmu_test_overflow_topbit_[k];native_read_msr_[k] 331058498
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];prepare_task_switch_[k];__perf_event_task_sched_out_[k];perf_event_context_sched_out_[k];perf_ctx_disable_[k];x86_pmu_disable_[k];amd_pmu_disable_all_[k];amd_pmu_check_overflow_[k];native_read_msr_[k] 15568813
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];prepare_task_switch_[k];__perf_event_task_sched_out_[k];perf_event_context_sched_out_[k];perf_ctx_disable_[k];x86_pmu_disable_[k];amd_pmu_disable_all_[k];amd_pmu_check_overflow_[k];srso_safe_ret_[k] 54285565
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];prepare_task_switch_[k];__perf_event_task_sched_out_[k];perf_event_context_sched_out_[k];perf_ctx_disable_[k];x86_pmu_disable_[k];amd_pmu_disable_all_[k];native_read_msr_[k] 85882720
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];prepare_task_switch_[k];__perf_event_task_sched_out_[k];perf_event_context_sched_out_[k];perf_ctx_disable_[k];x86_pmu_disable_[k];amd_pmu_disable_all_[k];native_write_msr_[k] 4463640199
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];prepare_task_switch_[k];__perf_event_task_sched_out_[k];perf_event_context_sched_out_[k];perf_ctx_disable_[k];x86_pmu_disable_[k];amd_pmu_disable_all_[k];srso_safe_ret_[k] 438500015
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];prepare_task_switch_[k];__perf_event_task_sched_out_[k];perf_event_context_sched_out_[k];perf_ctx_disable_[k];x86_pmu_disable_[k];amd_pmu_disable_all_[k];x86_pmu_disable_all_[k] 1409913092
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];prepare_task_switch_[k];__perf_event_task_sched_out_[k];perf_event_context_sched_out_[k];perf_ctx_disable_[k];x86_pmu_disable_[k];amd_pmu_disable_all_[k];x86_pmu_disable_all_[k];amd_pmu_addr_offset_[k] 125623538
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];prepare_task_switch_[k];__perf_event_task_sched_out_[k];perf_event_context_sched_out_[k];perf_ctx_disable_[k];x86_pmu_disable_[k];amd_pmu_disable_all_[k];x86_pmu_disable_all_[k];native_read_msr_[k] 2665691990
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];prepare_task_switch_[k];__perf_event_task_sched_out_[k];perf_event_context_sched_out_[k];perf_ctx_disable_[k];x86_pmu_disable_[k];srso_safe_ret_[k] 48091829
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];prepare_task_switch_[k];__perf_event_task_sched_out_[k];perf_event_context_sched_out_[k];perf_ctx_disable_[k];x86_pmu_disable_[k];x86_pmu_disable_all_[k] 203098313
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];prepare_task_switch_[k];__perf_event_task_sched_out_[k];perf_event_context_sched_out_[k];perf_pmu_nop_void_[k] 117526346
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];prepare_task_switch_[k];__perf_event_task_sched_out_[k];perf_event_context_sched_out_[k];x86_pmu_disable_[k] 162968128
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];prepare_task_switch_[k];__perf_event_task_sched_out_[k];srso_safe_ret_[k] 30674449
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];prepare_task_switch_[k];perf_event_context_sched_out_[k] 13849751
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];psi_flags_change_[k] 514139792
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];psi_task_switch_[k] 1449792880
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];psi_task_switch_[k];psi_flags_change_[k] 119883454
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];psi_task_switch_[k];psi_group_change_[k] 21532167
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];psi_task_switch_[k];sched_clock_[k] 85348929
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];psi_task_switch_[k];sched_clock_cpu_[k] 228671908
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];psi_task_switch_[k];sched_clock_cpu_[k];sched_clock_[k] 179506613
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];psi_task_switch_[k];sched_clock_cpu_[k];sched_clock_[k];native_sched_clock_[k] 30598295
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];psi_task_switch_[k];sched_clock_cpu_[k];sched_clock_[k];sched_clock_noinstr_[k];native_sched_clock_[k] 259557041
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];psi_task_switch_[k];sched_clock_cpu_[k];sched_clock_noinstr_[k] 43359707
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];psi_task_switch_[k];sched_clock_cpu_[k];srso_safe_ret_[k] 23366002
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];psi_task_switch_[k];srso_safe_ret_[k] 9101704
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];raw_spin_rq_lock_nested_[k] 7021116474
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];raw_spin_rq_lock_nested_[k];_raw_spin_lock_[k];native_queued_spin_lock_slowpath_[k] 107742829
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];raw_spin_rq_unlock_[k] 236959866
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];raw_spin_rq_unlock_[k];_raw_spin_unlock_[k] 1962595669
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];rcu_note_context_switch_[k] 6148721870
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];sched_clock_cpu_[k] 1094921509
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];srso_return_thunk_[k] 17308014
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];srso_safe_ret_[k] 4508995417
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];update_rq_clock_[k] 13657266595
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];update_rq_clock_[k];sched_clock_[k] 1188933168
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];update_rq_clock_[k];sched_clock_cpu_[k] 8227118613
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];update_rq_clock_[k];sched_clock_cpu_[k];sched_clock_[k] 7662945389
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];update_rq_clock_[k];sched_clock_cpu_[k];sched_clock_[k];native_sched_clock_[k] 2288877304
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];update_rq_clock_[k];sched_clock_cpu_[k];sched_clock_[k];sched_clock_noinstr_[k] 84511023
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];update_rq_clock_[k];sched_clock_cpu_[k];sched_clock_[k];sched_clock_noinstr_[k];native_sched_clock_[k] 21880408287
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];update_rq_clock_[k];sched_clock_cpu_[k];sched_clock_[k];srso_safe_ret_[k] 415327436
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];update_rq_clock_[k];sched_clock_cpu_[k];sched_clock_noinstr_[k] 2210700215
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];update_rq_clock_[k];sched_clock_cpu_[k];srso_safe_ret_[k] 1287408493
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];update_rq_clock_[k];srso_safe_ret_[k] 829127563
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];asm_common_interrupt_[k];common_interrupt_[k];__common_interrupt_[k];handle_edge_irq_[k];note_interrupt_[k] 22709159
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];asm_sysvec_apic_timer_interrupt_[k] 25114682
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];account_system_time_[k] 5555506
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];perf_event_task_tick_[k] 20227954
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];irq_exit_rcu_[k];__irq_exit_rcu_[k];__do_softirq_[k];asm_common_interrupt_[k];common_interrupt_[k];__common_interrupt_[k];handle_edge_irq_[k];handle_irq_event_[k];__handle_irq_event_percpu_[k];amdgpu_irq_handler_[k];amdgpu_ih_process_[k];amdgpu_irq_dispatch_[k];amdgpu_dm_irq_handler_[k];dm_crtc_high_irq_[k];amdgpu_dm_crtc_handle_vblank_[k];drm_crtc_handle_vblank_[k];drm_handle_vblank_[k];drm_handle_vblank_events_[k];send_vblank_event_[k];drm_send_event_timestamp_locked_[k];drm_send_event_helper_[k];__wake_up_[k];__wake_up_common_lock_[k];__wake_up_common_[k];ep_poll_callback_[k];__wake_up_[k];__wake_up_common_lock_[k];__wake_up_common_[k];ep_autoremove_wake_function_[k];default_wake_function_[k];try_to_wake_up_[k] 25538112
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];irq_exit_rcu_[k];__irq_exit_rcu_[k];__do_softirq_[k];run_rebalance_domains_[k];rebalance_domains_[k];load_balance_[k];find_busiest_group_[k];update_sd_lb_stats.constprop.0_[k];update_sg_lb_stats_[k] 21025068
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];error_entry_[k] 29864274
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];pick_next_task_[k] 1366763701
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];prepare_task_switch_[k] 33100955
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];psi_task_switch_[k] 10634795
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];raw_spin_rq_lock_nested_[k] 3593187363
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];raw_spin_rq_unlock_[k] 7105765056
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];rcu_note_context_switch_[k] 698559169
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];srso_return_thunk_[k] 18963845
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];srso_safe_ret_[k] 6566486088
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];update_rq_clock_[k] 3033683073
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];srso_safe_ret_[k] 2113899167
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];update_curr_[k] 192846406
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];update_rq_clock_[k] 88357708
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];yield_task_fair_[k] 4499470545
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];yield_task_fair_[k];clear_buddies_[k] 345639740
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];yield_task_fair_[k];cpuacct_charge_[k] 40277968
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];yield_task_fair_[k];sched_clock_cpu_[k] 81867015
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];yield_task_fair_[k];srso_safe_ret_[k] 244033659
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];yield_task_fair_[k];update_curr_[k] 1676361959
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];yield_task_fair_[k];update_curr_[k];__cgroup_account_cputime_[k] 519080410
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];yield_task_fair_[k];update_curr_[k];__cgroup_account_cputime_[k];cgroup_rstat_updated_[k] 158797448
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];yield_task_fair_[k];update_curr_[k];cgroup_rstat_updated_[k] 19881911
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];yield_task_fair_[k];update_curr_[k];cpuacct_charge_[k] 443128817
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];yield_task_fair_[k];update_curr_[k];srso_safe_ret_[k] 20255758
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];yield_task_fair_[k];update_curr_[k];update_min_vruntime_[k] 156961774
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];yield_task_fair_[k];update_min_vruntime_[k] 45697110
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];yield_task_fair_[k];update_rq_clock_[k] 863544870
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];yield_task_fair_[k];update_rq_clock_[k];sched_clock_[k] 59763331
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];yield_task_fair_[k];update_rq_clock_[k];sched_clock_cpu_[k] 1393731155
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];yield_task_fair_[k];update_rq_clock_[k];sched_clock_cpu_[k];sched_clock_[k] 350949311
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];yield_task_fair_[k];update_rq_clock_[k];sched_clock_cpu_[k];sched_clock_[k];native_sched_clock_[k] 45292041
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];yield_task_fair_[k];update_rq_clock_[k];sched_clock_cpu_[k];sched_clock_[k];sched_clock_noinstr_[k];native_sched_clock_[k] 2210997733
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];yield_task_fair_[k];update_rq_clock_[k];sched_clock_cpu_[k];sched_clock_[k];srso_safe_ret_[k] 13728671
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];yield_task_fair_[k];update_rq_clock_[k];sched_clock_cpu_[k];sched_clock_noinstr_[k] 140221174
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];yield_task_fair_[k];update_rq_clock_[k];sched_clock_cpu_[k];srso_safe_ret_[k] 78593885
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];yield_task_fair_[k];update_rq_clock_[k];srso_safe_ret_[k] 49825274
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];raw_spin_rq_lock_nested_[k] 1033051092
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];raw_spin_rq_unlock_[k] 7273703462
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];schedule_[k] 467972780
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];schedule_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];scheduler_tick_[k];perf_event_task_tick_[k];perf_adjust_freq_unthr_context_[k];x86_pmu_disable_[k];amd_pmu_disable_all_[k];amd_pmu_addr_offset_[k] 25893284
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];srso_return_thunk_[k] 207628613
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];srso_safe_ret_[k] 4990168183
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];yield_task_fair_[k] 8355998690
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];amd_clear_divider_[k] 3879478473
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];asm_common_interrupt_[k];common_interrupt_[k];__common_interrupt_[k];handle_edge_irq_[k];handle_irq_event_[k];__handle_irq_event_percpu_[k];amdgpu_irq_handler_[k];amdgpu_ih_process_[k];amdgpu_irq_dispatch_[k];amdgpu_dm_irq_handler_[k];dm_crtc_high_irq_[k];amdgpu_dm_crtc_handle_vblank_[k];drm_crtc_handle_vblank_[k];drm_handle_vblank_[k];drm_update_vblank_count_[k];__get_vblank_counter_[k];amdgpu_get_vblank_counter_kms_[k];dm_vblank_get_counter_[k];dc_stream_get_vblank_counter_[k];optc1_get_vblank_counter_[k];generic_reg_get_[k];dm_read_reg_func_[k];amdgpu_cgs_read_register_[k];amdgpu_device_rreg_[k] 22836792
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];asm_common_interrupt_[k];common_interrupt_[k];__common_interrupt_[k];handle_edge_irq_[k];handle_irq_event_[k];__handle_irq_event_percpu_[k];amdgpu_irq_handler_[k];amdgpu_ih_process_[k];amdgpu_irq_dispatch_[k];amdgpu_dm_irq_handler_[k];dm_crtc_high_irq_[k];amdgpu_dm_crtc_handle_vblank_[k];drm_crtc_handle_vblank_[k];drm_handle_vblank_[k];drm_update_vblank_count_[k];drm_crtc_get_last_vbltimestamp_[k];drm_crtc_vblank_helper_get_vblank_timestamp_[k];drm_crtc_vblank_helper_get_vblank_timestamp_internal_[k];amdgpu_crtc_get_scanout_position_[k];amdgpu_display_get_crtc_scanoutpos_[k];dm_crtc_get_scanoutpos_[k];dc_stream_get_scanoutpos_[k];optc1_get_crtc_scanoutpos_[k];optc1_get_position_[k];generic_reg_get2_[k];dm_read_reg_func_[k];amdgpu_cgs_read_register_[k];amdgpu_device_rreg_[k] 22226124
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];asm_sysvec_apic_timer_interrupt_[k] 21552272
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];__remove_hrtimer_[k];rb_next_[k] 22750053
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];srso_safe_ret_[k] 7440957
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];scheduler_tick_[k];perf_event_task_tick_[k];perf_adjust_freq_unthr_context_[k] 25920368
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];ktime_get_update_offsets_now_[k] 11625013
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];irq_exit_rcu_[k];__irq_exit_rcu_[k];__do_softirq_[k];run_rebalance_domains_[k];update_blocked_averages_[k];__update_blocked_fair_[k];__update_load_avg_cfs_rq_[k] 22685099
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];do_sched_yield_[k] 1706099697
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];exit_to_user_mode_prepare_[k] 1259930553
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];srso_return_thunk_[k] 76864636
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];srso_safe_ret_[k] 2592207863
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_enter_from_user_mode_[k] 3219979230
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_enter_from_user_mode_[k];asm_common_interrupt_[k];common_interrupt_[k];__common_interrupt_[k];handle_edge_irq_[k];handle_irq_event_[k];__handle_irq_event_percpu_[k];amdgpu_irq_handler_[k];amdgpu_ih_process_[k];amdgpu_irq_dispatch_[k];amdgpu_dm_irq_handler_[k];dm_pflip_high_irq_[k];drm_crtc_accurate_vblank_count_[k];drm_update_vblank_count_[k];drm_crtc_get_last_vbltimestamp_[k];drm_crtc_vblank_helper_get_vblank_timestamp_[k];drm_crtc_vblank_helper_get_vblank_timestamp_internal_[k];amdgpu_crtc_get_scanout_position_[k];amdgpu_display_get_crtc_scanoutpos_[k];dm_crtc_get_scanoutpos_[k];dc_stream_get_scanoutpos_[k];optc1_get_crtc_scanoutpos_[k];optc1_get_position_[k];generic_reg_get2_[k];dm_read_reg_func_[k];amdgpu_cgs_read_register_[k];amdgpu_device_rreg_[k] 21557963
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_enter_from_user_mode_[k];asm_common_interrupt_[k];common_interrupt_[k];__common_interrupt_[k];handle_edge_irq_[k];handle_irq_event_[k];__handle_irq_event_percpu_[k];amdgpu_irq_handler_[k];amdgpu_ih_process_[k];amdgpu_irq_dispatch_[k];gfx_v9_0_eop_irq_[k];amdgpu_fence_process_[k];dma_fence_signal_[k];dma_fence_signal_timestamp_locked_[k];drm_sched_job_done_cb_[k];drm_sched_job_done.isra.0_[k];__wake_up_[k];__wake_up_common_lock_[k];__wake_up_common_[k];autoremove_wake_function_[k];default_wake_function_[k];try_to_wake_up_[k];ttwu_do_activate_[k];enqueue_task_[k];enqueue_task_rt_[k] 23398228
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_enter_from_user_mode_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];__remove_hrtimer_[k];rb_erase_[k] 18460074
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_enter_from_user_mode_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];scheduler_tick_[k];perf_event_task_tick_[k];perf_adjust_freq_unthr_context_[k] 29330755
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_enter_from_user_mode_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];scheduler_tick_[k];task_tick_fair_[k];update_cfs_group_[k] 22871484
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_enter_from_user_mode_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k] 27558377
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_enter_from_user_mode_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];irq_exit_rcu_[k];__irq_exit_rcu_[k];__do_softirq_[k];rcu_core_si_[k];rcu_core_[k];rcu_do_batch_[k];file_free_rcu_[k];kmem_cache_free_[k];obj_cgroup_uncharge_[k];refill_obj_stock_[k];obj_cgroup_uncharge_pages_[k];memcg_account_kmem_[k];mod_memcg_state_[k];__mod_memcg_state_[k] 24352057
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_enter_from_user_mode_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];irq_exit_rcu_[k];__irq_exit_rcu_[k];__do_softirq_[k];rcu_core_si_[k];rcu_core_[k];rcu_report_qs_rnp_[k];rcu_gp_kthread_wake_[k];swake_up_one_[k];wake_up_process_[k];try_to_wake_up_[k];ttwu_do_activate_[k];enqueue_task_[k];enqueue_task_fair_[k];srso_safe_ret_[k] 21699912
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_enter_from_user_mode_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];irq_exit_rcu_[k];__irq_exit_rcu_[k];__do_softirq_[k];run_rebalance_domains_[k];update_blocked_averages_[k];__update_blocked_fair_[k] 24718495
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_enter_from_user_mode_[k];asm_sysvec_irq_work_[k];sysvec_irq_work_[k];__sysvec_irq_work_[k];irq_work_run_[k];irq_work_run_list_[k];irq_work_single_[k];dma_fence_chain_irq_work_[k];dma_fence_signal_[k];dma_fence_signal_timestamp_locked_[k];dma_fence_default_wait_cb_[k];wake_up_state_[k];try_to_wake_up_[k];kthread_is_per_cpu_[k] 25767538
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_exit_to_user_mode_[k] 9513494367
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_exit_to_user_mode_[k];exit_to_user_mode_loop_[k] 69297291
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_exit_to_user_mode_[k];exit_to_user_mode_prepare_[k] 23445138492
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_exit_to_user_mode_[k];exit_to_user_mode_prepare_[k];blkcg_maybe_throttle_current_[k] 190645564
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_exit_to_user_mode_[k];exit_to_user_mode_prepare_[k];exit_to_user_mode_loop_[k] 609891312
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_exit_to_user_mode_[k];exit_to_user_mode_prepare_[k];exit_to_user_mode_loop_[k];__rseq_handle_notify_resume_[k] 272642327
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_exit_to_user_mode_[k];exit_to_user_mode_prepare_[k];exit_to_user_mode_loop_[k];__rseq_handle_notify_resume_[k];__put_user_8_[k] 406829954
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_exit_to_user_mode_[k];exit_to_user_mode_prepare_[k];exit_to_user_mode_loop_[k];__rseq_handle_notify_resume_[k];rseq_ip_fixup_[k] 200097487
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_exit_to_user_mode_[k];exit_to_user_mode_prepare_[k];exit_to_user_mode_loop_[k];__rseq_handle_notify_resume_[k];rseq_ip_fixup_[k];__get_user_8_[k] 550278241
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_exit_to_user_mode_[k];exit_to_user_mode_prepare_[k];exit_to_user_mode_loop_[k];__rseq_handle_notify_resume_[k];rseq_ip_fixup_[k];rseq_get_rseq_cs_[k] 908011250
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_exit_to_user_mode_[k];exit_to_user_mode_prepare_[k];exit_to_user_mode_loop_[k];__rseq_handle_notify_resume_[k];rseq_ip_fixup_[k];srso_safe_ret_[k] 20369625
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_exit_to_user_mode_[k];exit_to_user_mode_prepare_[k];exit_to_user_mode_loop_[k];__rseq_handle_notify_resume_[k];rseq_update_cpu_node_id_[k] 1562943244
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_exit_to_user_mode_[k];exit_to_user_mode_prepare_[k];exit_to_user_mode_loop_[k];__rseq_handle_notify_resume_[k];srso_safe_ret_[k] 150123460
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_exit_to_user_mode_[k];exit_to_user_mode_prepare_[k];exit_to_user_mode_loop_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k] 9537335
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_exit_to_user_mode_[k];exit_to_user_mode_prepare_[k];exit_to_user_mode_loop_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];irq_exit_rcu_[k];__irq_exit_rcu_[k];__do_softirq_[k];run_rebalance_domains_[k];update_blocked_averages_[k];__update_blocked_fair_[k] 8946450
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_exit_to_user_mode_[k];exit_to_user_mode_prepare_[k];exit_to_user_mode_loop_[k];blkcg_maybe_throttle_current_[k] 77348163
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_exit_to_user_mode_[k];exit_to_user_mode_prepare_[k];exit_to_user_mode_loop_[k];mem_cgroup_handle_over_high_[k] 119420020
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_exit_to_user_mode_[k];exit_to_user_mode_prepare_[k];exit_to_user_mode_loop_[k];rseq_update_cpu_node_id_[k] 54305954
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_exit_to_user_mode_[k];exit_to_user_mode_prepare_[k];exit_to_user_mode_loop_[k];srso_safe_ret_[k] 20287682
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_exit_to_user_mode_[k];exit_to_user_mode_prepare_[k];fpregs_assert_state_consistent_[k] 987817366
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_exit_to_user_mode_[k];exit_to_user_mode_prepare_[k];mem_cgroup_handle_over_high_[k] 63879204
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_exit_to_user_mode_[k];exit_to_user_mode_prepare_[k];srso_safe_ret_[k] 78762625
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_exit_to_user_mode_[k];exit_to_user_mode_prepare_[k];switch_fpu_return_[k] 273694358
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_exit_to_user_mode_[k];exit_to_user_mode_prepare_[k];switch_fpu_return_[k];restore_fpregs_from_fpstate_[k] 1648975912
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_exit_to_user_mode_[k];exit_to_user_mode_prepare_[k];switch_fpu_return_[k];srso_safe_ret_[k] 6589243
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_exit_to_user_mode_[k];exit_to_user_mode_prepare_[k];switch_fpu_return_[k];xfd_validate_state_[k] 55093418
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_exit_to_user_mode_[k];fpregs_assert_state_consistent_[k] 2100449776
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_exit_to_user_mode_[k];srso_safe_ret_[k] 983213916
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_exit_to_user_mode_[k];switch_fpu_return_[k] 33129430
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];srso_return_thunk_[k] 224424537
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];srso_safe_ret_[k] 4172249530
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];srso_safe_ret_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k] 22997159
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];syscall_enter_from_user_mode_[k] 1748439378
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];syscall_exit_to_user_mode_[k] 1527189718
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_safe_stack_[k] 1825413051
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSRETQ_unsafe_stack_[k] 1443653339
BioCMA-MCST_cli;[unknown];__sched_yield;entry_untrain_ret_[k] 4124643389
BioCMA-MCST_cli;[unknown];__sched_yield;irq_enter_rcu_[k] 25268377
BioCMA-MCST_cli;[unknown];__sched_yield;irq_exit_rcu_[k] 20958606
BioCMA-MCST_cli;[unknown];__sched_yield;srso_safe_ret_[k] 17828869773
BioCMA-MCST_cli;[unknown];__sched_yield;syscall_return_via_sysret_[k] 8827037916
BioCMA-MCST_cli;[unknown];_int_free 29914718
BioCMA-MCST_cli;[unknown];dgemm_kernel_ZEN 391541885
BioCMA-MCST_cli;[unknown];dgemm_oncopy_ZEN 1217291385
BioCMA-MCST_cli;[unknown];sched_yield@plt 27579265
BioCMA-MCST_cli;__libc_start_call_main;main;exec;Simulation::SimulationUnit::~SimulationUnit;std::unique_ptr<MC::ParticlesContainer, std::default_delete<MC::ParticlesContainer> >::~unique_ptr;std::default_delete<MC::ParticlesContainer>::operator;MC::ParticlesContainer::~ParticlesContainer;MC::ParticlesList::~ParticlesList;std::vector<MC::Particles, std::allocator<MC::Particles> >::~vector;void std::_Destroy<MC::Particles*, MC::Particles>;void std::_Destroy<MC::Particles*>;void std::_Destroy_aux<false>::__destroy<MC::Particles*>;void std::_Destroy<MC::Particles>;void std::destroy_at<MC::Particles>;MC::Particles::~Particles;std::any::~any;std::any::reset;std::any::_Manager_external<std::shared_ptr<SimpleModel> >::_S_manage;std::shared_ptr<SimpleModel>::~shared_ptr;std::__shared_ptr<SimpleModel, ;std::__shared_count<;std::_Sp_counted_base<;std::_Sp_counted_ptr_inplace<SimpleModel, std::allocator<SimpleModel>, ;void std::allocator_traits<std::allocator<SimpleModel> >::destroy<SimpleModel>;void std::destroy_at<SimpleModel>;SimpleModel::~SimpleModel;std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::~unique_ptr;std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::get_deleter;std::__uniq_ptr_impl<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::_M_deleter;std::tuple_element<1ul, std::tuple<SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> > >::type& std::get<1ul, SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> >;std::default_delete<SimpleModel::Xi>& std::__get_helper<1ul, std::default_delete<SimpleModel::Xi>> 31301870
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::MatrixBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::operator+=<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::call_assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;void Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::add_assign_op<double, double>, 0>::assignPacket<16, 16, double __vector;double __vector 53205180
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::MatrixBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::operator+=<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::call_assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;void Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::add_assign_op<double, double>, 0>::assignPacket<16, 16, double __vector;void Eigen::internal::add_assign_op<double, double>::assignPacket<16, double __vector 27282881
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::MatrixBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::operator+=<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::call_assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;void Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::add_assign_op<double, double>, 0>::assignPacket<16, 16, double __vector;void Eigen::internal::add_assign_op<double, double>::assignPacket<16, double __vector;double __vector 112466382
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::operator 845468359
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Eigen::SparseMatrix<double, 0, int>::coeff 29070275
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP 2327415080
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::DenseBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false> >::operator/=;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >, Eigen::internal::div_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >, Eigen::internal::div_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >, Eigen::internal::div_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >, Eigen::internal::div_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> > >, Eigen::internal::div_assign_op<double, double>, 0>, 1, 0>::run;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> > >, Eigen::internal::div_assign_op<double, double>, 0>::size;Eigen::EigenBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false> >::size;Eigen::EigenBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false> >::rows;Eigen::EigenBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false> >::derived 29671360
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::DenseBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false> >::operator/=;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >, Eigen::internal::div_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >, Eigen::internal::div_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >, Eigen::internal::div_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >, Eigen::internal::div_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false> >::evaluator;Eigen::internal::block_evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false, true>::block_evaluator;Eigen::internal::BlockImpl_dense<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false, true>::outerStride 29819089
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::DenseBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::row;Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>::Block;Eigen::BlockImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false, true>::BlockImpl_dense;Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, 1>::MapBase;Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, 0>::MapBase;Eigen::internal::variable_if_dynamic<long, 1>::variable_if_dynamic 29506719
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::DenseBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::row;Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>::Block;Eigen::BlockImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false, true>::BlockImpl_dense;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::cols 29590077
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::operator 605656619
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::operator;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::coeffRef 870104295
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::operator;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::coeffRef;Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::derived 282134913
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::operator;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::coeffRef;Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::evaluator 168770374
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::operator;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::coeffRef;Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::evaluator;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 3>::outerStride 114106266
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::operator;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::coeffRef;Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::evaluator;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::data 25737967
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::operator;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::coeffRef;Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::evaluator;Eigen::internal::evaluator<Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::evaluator 445502943
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::operator;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::coeffRef;Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::evaluator;Eigen::internal::evaluator<Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::evaluator;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 3>::outerStride 293740272
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::operator;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::coeffRef;Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::evaluator;Eigen::internal::evaluator<Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::evaluator;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 3>::outerStride;Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::derived 254512491
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::operator;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::coeffRef;Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::evaluator;Eigen::internal::evaluator<Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::evaluator;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 3>::outerStride;Eigen::Matrix<double, -1, -1, 0, -1, -1>::outerStride 383348837
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::operator;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::coeffRef;Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::evaluator;Eigen::internal::evaluator<Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::evaluator;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 3>::outerStride;Eigen::Matrix<double, -1, -1, 0, -1, -1>::outerStride;Eigen::DenseBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::innerSize 398552969
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::operator;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::coeffRef;Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::evaluator;Eigen::internal::evaluator<Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::evaluator;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 3>::outerStride;Eigen::Matrix<double, -1, -1, 0, -1, -1>::outerStride;Eigen::DenseBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::innerSize;Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows 545351510
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::operator;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::coeffRef;Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::evaluator;Eigen::internal::evaluator<Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::evaluator;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 3>::outerStride;Eigen::Matrix<double, -1, -1, 0, -1, -1>::outerStride;Eigen::DenseBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::innerSize;Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows;Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::derived 362735884
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::operator;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::coeffRef;Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::evaluator;Eigen::internal::evaluator<Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::evaluator;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 3>::outerStride;Eigen::Matrix<double, -1, -1, 0, -1, -1>::outerStride;Eigen::DenseBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::innerSize;Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows 140214741
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::operator;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::coeffRef;Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::evaluator;Eigen::internal::evaluator<Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::evaluator;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 3>::outerStride;Eigen::Matrix<double, -1, -1, 0, -1, -1>::outerStride;Eigen::DenseBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::innerSize;Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows;Eigen::DenseStorage<double, -1, -1, -1, 0>::rows 422042560
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::operator;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::coeffRef;Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::evaluator;Eigen::internal::evaluator<Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::evaluator;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::data 53147053
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::operator;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::coeffRef;Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::evaluator;Eigen::internal::evaluator<Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::evaluator;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::data;Eigen::DenseStorage<double, -1, -1, -1, 0>::data 470256288
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::operator;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::coeffRef;Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::evaluator;Eigen::internal::evaluator<Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::evaluator;Eigen::internal::evaluator_base<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::evaluator_base 61728357
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::operator;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::coeffRef;Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::evaluator;Eigen::internal::evaluator<Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::evaluator;Eigen::internal::plainobjectbase_evaluator_data<double, -1>::plainobjectbase_evaluator_data 311911838
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::operator;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::coeffRef;Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::evaluator;Eigen::internal::evaluator_base<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::evaluator_base 169702926
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::operator;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::coeffRef;Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::evaluator;asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];scheduler_tick_[k];task_tick_fair_[k];hrtimer_active_[k] 29765061
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::operator;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::coeffRef;Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::~evaluator 254099123
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::operator;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::coeffRef;Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::~evaluator;Eigen::internal::evaluator<Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::~evaluator 382649364
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::operator;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::coeffRef;Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::~evaluator;Eigen::internal::evaluator<Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::~evaluator;Eigen::internal::evaluator_base<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::~evaluator_base 89922223
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::operator;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::coeffRef;Eigen::internal::evaluator<Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::coeffRef 828409441
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::operator;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::coeffRef;Eigen::internal::evaluator<Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::coeffRef;Eigen::internal::plainobjectbase_evaluator_data<double, -1>::outerStride 451936532
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::operator;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::coeffRef;Eigen::internal::evaluator<Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::~evaluator 32052911
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::operator;Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::cols 142332431
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::operator;Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::cols;Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::derived 373789823
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::operator;Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::cols;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::cols 622935565
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::operator;Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::cols;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::cols;Eigen::DenseStorage<double, -1, -1, -1, 0>::cols 591581538
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::operator;Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::derived 210076945
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::operator;Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows 30611456
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::operator;Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows;Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::derived 119757758
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::operator;Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows 88226765
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::operator;Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows;Eigen::DenseStorage<double, -1, -1, -1, 0>::rows 386925728
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::operator;Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::evaluator 140107362
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::operator;Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::~evaluator 149414539
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::operator;Eigen::internal::evaluator<Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::coeffRef 60124681
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::DenseStorage<double, -1, -1, -1, 0>::data 28951828
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::cols 114242442
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::cols;asm_common_interrupt_[k];common_interrupt_[k];__common_interrupt_[k];handle_edge_irq_[k];handle_irq_event_[k];__handle_irq_event_percpu_[k];amdgpu_irq_handler_[k];amdgpu_ih_process_[k];__wake_up_[k];__wake_up_common_lock_[k];__raw_spin_lock_irqsave_[k] 28126112
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows 29929860
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::coeff 28952409
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::SparseMatrix<double, 0, int>::coeff 1513422752
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::SparseMatrix<double, 0, int>::coeff;Eigen::SparseMatrix<double, 0, int>::cols 462988287
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::SparseMatrix<double, 0, int>::coeff;Eigen::SparseMatrix<double, 0, int>::rows 476440307
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::SparseMatrix<double, 0, int>::coeff;Eigen::internal::CompressedStorage<double, int>::atInRange 1922443111
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::SparseMatrix<double, 0, int>::coeff;Eigen::internal::CompressedStorage<double, int>::atInRange;Eigen::internal::CompressedStorage<double, int>::searchLowerIndex 336384324
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::SparseMatrix<double, 0, int>::coeff;Eigen::internal::CompressedStorage<double, int>::atInRange;Eigen::internal::CompressedStorage<double, int>::searchLowerIndex;__gnu_cxx::__ops::__iter_less_val 92565471
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::SparseMatrix<double, 0, int>::coeff;Eigen::internal::CompressedStorage<double, int>::atInRange;Eigen::internal::CompressedStorage<double, int>::searchLowerIndex;int* std::__lower_bound<int*, long, __gnu_cxx::__ops::_Iter_less_val> 21485951
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::SparseMatrix<double, 0, int>::coeff;Eigen::internal::CompressedStorage<double, int>::atInRange;Eigen::internal::CompressedStorage<double, int>::searchLowerIndex;int* std::lower_bound<int*, long> 257997097
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::SparseMatrix<double, 0, int>::coeff;Eigen::internal::CompressedStorage<double, int>::atInRange;Eigen::internal::CompressedStorage<double, int>::searchLowerIndex;int* std::lower_bound<int*, long>;__gnu_cxx::__ops::__iter_less_val 31637720
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::SparseMatrix<double, 0, int>::coeff;Eigen::internal::CompressedStorage<double, int>::atInRange;Eigen::internal::CompressedStorage<double, int>::searchLowerIndex;int* std::lower_bound<int*, long>;asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];scheduler_tick_[k];task_tick_fair_[k];update_curr_[k] 29239418
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::SparseMatrix<double, 0, int>::coeff;Eigen::internal::CompressedStorage<double, int>::atInRange;Eigen::internal::CompressedStorage<double, int>::searchLowerIndex;int* std::lower_bound<int*, long>;asm_sysvec_reschedule_ipi_[k];sysvec_reschedule_ipi_[k];irqentry_exit_[k];irqentry_exit_to_user_mode_[k];exit_to_user_mode_prepare_[k];exit_to_user_mode_loop_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];srso_safe_ret_[k] 2113560
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::SparseMatrix<double, 0, int>::coeff;Eigen::internal::CompressedStorage<double, int>::atInRange;Eigen::internal::CompressedStorage<double, int>::searchLowerIndex;int* std::lower_bound<int*, long>;bool __gnu_cxx::__ops::_Iter_less_val::operator 112668316
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::SparseMatrix<double, 0, int>::coeff;Eigen::internal::CompressedStorage<double, int>::atInRange;Eigen::internal::CompressedStorage<double, int>::searchLowerIndex;int* std::lower_bound<int*, long>;int* std::__lower_bound<int*, long, __gnu_cxx::__ops::_Iter_less_val> 2572451634
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::SparseMatrix<double, 0, int>::coeff;Eigen::internal::CompressedStorage<double, int>::atInRange;Eigen::internal::CompressedStorage<double, int>::searchLowerIndex;int* std::lower_bound<int*, long>;int* std::__lower_bound<int*, long, __gnu_cxx::__ops::_Iter_less_val>;asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];irqentry_exit_[k];irqentry_exit_to_user_mode_[k];exit_to_user_mode_prepare_[k];exit_to_user_mode_loop_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];_raw_spin_unlock_[k] 1887340
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::SparseMatrix<double, 0, int>::coeff;Eigen::internal::CompressedStorage<double, int>::atInRange;Eigen::internal::CompressedStorage<double, int>::searchLowerIndex;int* std::lower_bound<int*, long>;int* std::__lower_bound<int*, long, __gnu_cxx::__ops::_Iter_less_val>;bool __gnu_cxx::__ops::_Iter_less_val::operator 1096349008
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::SparseMatrix<double, 0, int>::coeff;Eigen::internal::CompressedStorage<double, int>::atInRange;Eigen::internal::CompressedStorage<double, int>::searchLowerIndex;int* std::lower_bound<int*, long>;int* std::__lower_bound<int*, long, __gnu_cxx::__ops::_Iter_less_val>;std::iterator_traits<int*>::difference_type std::distance<int*> 373896734
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::SparseMatrix<double, 0, int>::coeff;Eigen::internal::CompressedStorage<double, int>::atInRange;Eigen::internal::CompressedStorage<double, int>::searchLowerIndex;int* std::lower_bound<int*, long>;int* std::__lower_bound<int*, long, __gnu_cxx::__ops::_Iter_less_val>;std::iterator_traits<int*>::difference_type std::distance<int*>;std::iterator_traits<int*>::difference_type std::__distance<int*> 205225630
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::SparseMatrix<double, 0, int>::coeff;Eigen::internal::CompressedStorage<double, int>::atInRange;Eigen::internal::CompressedStorage<double, int>::searchLowerIndex;int* std::lower_bound<int*, long>;int* std::__lower_bound<int*, long, __gnu_cxx::__ops::_Iter_less_val>;std::iterator_traits<int*>::difference_type std::distance<int*>;std::iterator_traits<int*>::iterator_category std::__iterator_category<int*> 26160841
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::SparseMatrix<double, 0, int>::coeff;Eigen::internal::CompressedStorage<double, int>::atInRange;Eigen::internal::CompressedStorage<double, int>::searchLowerIndex;int* std::lower_bound<int*, long>;int* std::__lower_bound<int*, long, __gnu_cxx::__ops::_Iter_less_val>;std::iterator_traits<int*>::iterator_category std::__iterator_category<int*> 355680405
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::SparseMatrix<double, 0, int>::coeff;Eigen::internal::CompressedStorage<double, int>::atInRange;Eigen::internal::CompressedStorage<double, int>::searchLowerIndex;int* std::lower_bound<int*, long>;int* std::__lower_bound<int*, long, __gnu_cxx::__ops::_Iter_less_val>;void std::__advance<int*, long> 31048427
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::SparseMatrix<double, 0, int>::coeff;Eigen::internal::CompressedStorage<double, int>::atInRange;Eigen::internal::CompressedStorage<double, int>::searchLowerIndex;int* std::lower_bound<int*, long>;int* std::__lower_bound<int*, long, __gnu_cxx::__ops::_Iter_less_val>;void std::advance<int*, long> 1061109358
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::SparseMatrix<double, 0, int>::coeff;Eigen::internal::CompressedStorage<double, int>::atInRange;Eigen::internal::CompressedStorage<double, int>::searchLowerIndex;int* std::lower_bound<int*, long>;int* std::__lower_bound<int*, long, __gnu_cxx::__ops::_Iter_less_val>;void std::advance<int*, long>;std::iterator_traits<int*>::iterator_category std::__iterator_category<int*> 122069855
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::SparseMatrix<double, 0, int>::coeff;Eigen::internal::CompressedStorage<double, int>::atInRange;Eigen::internal::CompressedStorage<double, int>::searchLowerIndex;int* std::lower_bound<int*, long>;int* std::__lower_bound<int*, long, __gnu_cxx::__ops::_Iter_less_val>;void std::advance<int*, long>;void std::__advance<int*, long> 921537104
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::SparseMatrix<double, 0, int>::coeff;Eigen::internal::CompressedStorage<double, int>::atInRange;Eigen::internal::CompressedStorage<double, int>::searchLowerIndex;int* std::lower_bound<int*, long>;int* std::__lower_bound<int*, long, __gnu_cxx::__ops::_Iter_less_val>;void std::advance<int*, long>;void std::__advance<int*, long>;asm_common_interrupt_[k];common_interrupt_[k];__common_interrupt_[k];handle_edge_irq_[k];handle_irq_event_[k];__handle_irq_event_percpu_[k];amdgpu_irq_handler_[k];amdgpu_ih_process_[k];amdgpu_irq_dispatch_[k];amdgpu_dm_irq_handler_[k];dm_crtc_high_irq_[k];amdgpu_dm_crtc_handle_vblank_[k];drm_crtc_handle_vblank_[k];drm_handle_vblank_[k];drm_update_vblank_count_[k];__get_vblank_counter_[k];amdgpu_get_vblank_counter_kms_[k];dm_vblank_get_counter_[k];dc_stream_get_vblank_counter_[k];optc1_get_vblank_counter_[k] 29147128
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::SparseMatrix<double, 0, int>::coeff;Eigen::internal::CompressedStorage<double, int>::atInRange;Eigen::internal::CompressedStorage<double, int>::searchLowerIndex;int* std::lower_bound<int*, long>;void std::advance<int*, long> 61719143
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::SparseMatrix<double, 0, int>::coeff;Eigen::internal::CompressedStorage<double, int>::atInRange;Eigen::internal::CompressedStorage<double, int>::searchLowerIndex;int* std::lower_bound<int*, long>;void std::advance<int*, long>;asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];irqentry_exit_[k];irqentry_exit_to_user_mode_[k];exit_to_user_mode_prepare_[k];exit_to_user_mode_loop_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];__rcu_read_unlock_[k] 1283737
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::SparseMatrix<double, 0, int>::coeff;Eigen::internal::CompressedStorage<double, int>::atInRange;Eigen::internal::CompressedStorage<double, int>::searchLowerIndex;std::iterator_traits<int*>::difference_type std::distance<int*> 180209393
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::SparseMatrix<double, 0, int>::coeff;Eigen::internal::CompressedStorage<double, int>::atInRange;Eigen::internal::CompressedStorage<double, int>::searchLowerIndex;std::iterator_traits<int*>::difference_type std::distance<int*>;std::iterator_traits<int*>::difference_type std::__distance<int*> 377736615
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::SparseMatrix<double, 0, int>::coeff;Eigen::internal::CompressedStorage<double, int>::atInRange;Eigen::internal::CompressedStorage<double, int>::searchLowerIndex;std::iterator_traits<int*>::difference_type std::distance<int*>;std::iterator_traits<int*>::iterator_category std::__iterator_category<int*> 27097392
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::SparseMatrix<double, 0, int>::coeff;Eigen::internal::CompressedStorage<double, int>::atInRange;Eigen::internal::CompressedStorage<double, int>::searchLowerIndex;std::iterator_traits<int*>::iterator_category std::__iterator_category<int*> 172706994
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::SparseMatrix<double, 0, int>::coeff;Eigen::internal::CompressedStorage<double, int>::atInRange;int* std::lower_bound<int*, long> 283192023
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::SparseMatrix<double, 0, int>::coeff;Eigen::internal::CompressedStorage<double, int>::atInRange;std::iterator_traits<int*>::difference_type std::distance<int*> 26992870
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::SparseMatrix<double, 0, int>::coeff;Eigen::internal::CompressedStorage<double, int>::searchLowerIndex 122561877
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::SparseMatrix<double, 0, int>::coeff;asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_do_timer_[k];tick_do_update_jiffies64_[k];update_wall_time_[k];timekeeping_advance_[k];timekeeping_update_[k];update_vdso_data.constprop.0_[k] 32217322
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::SparseMatrix<double, 0, int>::cols 90870829
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;asm_common_interrupt_[k];common_interrupt_[k];__common_interrupt_[k];handle_edge_irq_[k];handle_irq_event_[k];__handle_irq_event_percpu_[k];amdgpu_irq_handler_[k];amdgpu_ih_process_[k];amdgpu_irq_dispatch_[k];gfx_v9_0_eop_irq_[k];amdgpu_fence_process_[k];dma_fence_signal_[k];dma_fence_signal_timestamp_locked_[k];drm_sched_job_done_cb_[k];drm_sched_job_done.isra.0_[k];__wake_up_[k];__wake_up_common_lock_[k];__wake_up_common_[k];autoremove_wake_function_[k];default_wake_function_[k];try_to_wake_up_[k];update_rq_clock_[k];sched_clock_cpu_[k];sched_clock_[k] 30366299
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];irqentry_exit_[k];irqentry_exit_to_user_mode_[k];exit_to_user_mode_prepare_[k];exit_to_user_mode_loop_[k];schedule_[k];__schedule_[k];psi_task_switch_[k];psi_group_change_[k] 30638930
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;std::vector<unsigned long, std::allocator<unsigned long> >::operator[] 29163103
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;std::vector<unsigned long, std::allocator<unsigned long> >::size 28231503
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> const> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> const> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> const> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> const>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> const>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> const>, Eigen::internal::assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> const> >, Eigen::internal::assign_op<double, double>, 0>, 4, 0>::run;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> const> >, Eigen::internal::assign_op<double, double>, 0>::assignCoeff 32660185
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> const> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> const> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> const> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> const>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> const>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> const>, Eigen::internal::assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> const> >, Eigen::internal::assign_op<double, double>, 0>, 4, 0>::run;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> const> >, Eigen::internal::assign_op<double, double>, 0>::assignCoeffByOuterInner;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> const> >, Eigen::internal::assign_op<double, double>, 0>::assignCoeff;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::coeff;Eigen::internal::product_evaluator<Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1>, 8, Eigen::DenseShape, Eigen::DiagonalShape, double, double>::coeff;Eigen::internal::evaluator_wrapper_base<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> > >::coeff;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::coeff 32105944
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> const> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> const> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> const> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> const>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> const>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> const>, Eigen::internal::assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> const> >, Eigen::internal::assign_op<double, double>, 0>, 4, 0>::run;void Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> const> >, Eigen::internal::assign_op<double, double>, 0>::assignPacketByOuterInner<16, 0, double __vector 27455191
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> const> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> const> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> const> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> const>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> const>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> const>, Eigen::internal::assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> const> >, Eigen::internal::assign_op<double, double>, 0>, 4, 0>::run;void Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> const> >, Eigen::internal::assign_op<double, double>, 0>::assignPacketByOuterInner<16, 0, double __vector;void Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> const> >, Eigen::internal::assign_op<double, double>, 0>::assignPacket<16, 0, double __vector;double __vector;double __vector;double __vector 65565169
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> const> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> const> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> const> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> const>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> const>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> const>, Eigen::internal::assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> const> >, Eigen::internal::assign_op<double, double>, 0>, 4, 0>::run;void Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> const> >, Eigen::internal::assign_op<double, double>, 0>::assignPacketByOuterInner<16, 0, double __vector;void Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> const> >, Eigen::internal::assign_op<double, double>, 0>::assignPacket<16, 0, double __vector;double __vector;double __vector;double __vector;double __vector;double __vector;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::func 30393185
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> const> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> const> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> const> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> const>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> const>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> const>, Eigen::internal::assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> const> >, Eigen::internal::assign_op<double, double>, 0>, 4, 0>::run;void Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> const> >, Eigen::internal::assign_op<double, double>, 0>::assignPacketByOuterInner<16, 0, double __vector;void Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> const> >, Eigen::internal::assign_op<double, double>, 0>::assignPacket<16, 0, double __vector;double __vector;double __vector;double __vector;double __vector;double __vector;double __vector;double __vector 32231517
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> const> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> const> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> const> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> const>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> const>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> const>, Eigen::internal::assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> const> >, Eigen::internal::assign_op<double, double>, 0>, 4, 0>::run;void Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> const> >, Eigen::internal::assign_op<double, double>, 0>::assignPacketByOuterInner<16, 0, double __vector;void Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> const> >, Eigen::internal::assign_op<double, double>, 0>::assignPacket<16, 0, double __vector;double __vector;double __vector;double __vector;double __vector;double __vector;double __vector;double __vector;double __vector;double __vector;double __vector;double __vector 26741465
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> const> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> const> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> const> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> const>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> const>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> const>, Eigen::internal::assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> const> >, Eigen::internal::assign_op<double, double>, 0>, 4, 0>::run;void Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> const> >, Eigen::internal::assign_op<double, double>, 0>::assignPacketByOuterInner<16, 0, double __vector;void Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> const> >, Eigen::internal::assign_op<double, double>, 0>::assignPacket<16, 0, double __vector;double __vector;double __vector;double __vector;double __vector;double __vector;double __vector;double __vector;double __vector;double __vector;double __vector;double __vector;double __vector 29264545
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1>, Eigen::internal::assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> >, Eigen::internal::assign_op<double, double>, 0>, 4, 0>::run 26535748
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1>, Eigen::internal::assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> >, Eigen::internal::assign_op<double, double>, 0>, 4, 0>::run;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> >, Eigen::internal::assign_op<double, double>, 0>::assignCoeffByOuterInner;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> >, Eigen::internal::assign_op<double, double>, 0>::assignCoeff;Eigen::internal::product_evaluator<Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1>, 8, Eigen::DenseShape, Eigen::DiagonalShape, double, double>::coeff;Eigen::internal::evaluator_wrapper_base<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> > >::coeff;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::coeff;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::coeff;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::coeff;double Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> >::coeff<long>;double Eigen::internal::nullary_wrapper<double, Eigen::internal::scalar_constant_op<double>, true, false, false>::operator;Eigen::internal::scalar_constant_op<double>::operator 28256932
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1>, Eigen::internal::assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> >, Eigen::internal::assign_op<double, double>, 0>, 4, 0>::run;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> >, Eigen::internal::assign_op<double, double>, 0>::assignCoeffByOuterInner;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> >, Eigen::internal::assign_op<double, double>, 0>::assignCoeff;Eigen::internal::product_evaluator<Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1>, 8, Eigen::DenseShape, Eigen::DiagonalShape, double, double>::coeff;Eigen::internal::evaluator_wrapper_base<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> > >::coeff;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::coeff;Eigen::internal::scalar_product_op<double, double>::operator 28832277
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1>, Eigen::internal::assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> >, Eigen::internal::assign_op<double, double>, 0>, 4, 0>::run;void Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> >, Eigen::internal::assign_op<double, double>, 0>::assignPacketByOuterInner<16, 0, double __vector;void Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> >, Eigen::internal::assign_op<double, double>, 0>::assignPacket<16, 0, double __vector;double __vector;double __vector;double __vector;double __vector;double __vector;double __vector;double __vector 50097749
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1>, Eigen::internal::assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> >, Eigen::internal::assign_op<double, double>, 0>, 4, 0>::run;void Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> >, Eigen::internal::assign_op<double, double>, 0>::assignPacketByOuterInner<16, 0, double __vector;void Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> >, Eigen::internal::assign_op<double, double>, 0>::assignPacket<16, 0, double __vector;double __vector;double __vector;double __vector;double __vector;double __vector;double __vector;double __vector;double __vector;double __vector 30773594
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1>, Eigen::internal::assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> >, Eigen::internal::assign_op<double, double>, 0>, 4, 0>::run;void Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> >, Eigen::internal::assign_op<double, double>, 0>::assignPacketByOuterInner<16, 0, double __vector;void Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> >, Eigen::internal::assign_op<double, double>, 0>::assignPacket<16, 0, double __vector;double __vector;double __vector;double __vector;double __vector;double __vector;double __vector;double __vector;double __vector;double __vector;double __vector;double __vector 27680801
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1>, Eigen::internal::assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> >, Eigen::internal::assign_op<double, double>, 0>, 4, 0>::run;void Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> >, Eigen::internal::assign_op<double, double>, 0>::assignPacketByOuterInner<16, 0, double __vector;void Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> >, Eigen::internal::assign_op<double, double>, 0>::assignPacket<16, 0, double __vector;void Eigen::internal::assign_op<double, double>::assignPacket<16, double __vector;void Eigen::internal::pstore<double, double __vector 27397780
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::Matrix<double, -1, -1, 0, -1, -1>::operator=<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0> >;void Eigen::internal::call_assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0> >;void Eigen::internal::call_assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0> >;void Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_init1<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::DenseShape, Eigen::DenseShape, 8>::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;Eigen::DenseBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::setZero;Eigen::DenseBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::setConstant;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::Matrix<double, -1, -1, 0, -1, -1>::operator=<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> > >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> > >;void Eigen::internal::call_assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> > >;void Eigen::internal::call_assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;double* std::fill_n<double*, long, double>;double* std::__fill_n_a<double*, long, double>;void std::__fill_a<double*, double>;__gnu_cxx::__enable_if<std::__is_scalar<double>::__value, void>::__type std::__fill_a1<double*, double> 30072236
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::MatrixBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const> >;void Eigen::internal::call_assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;void Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const> >, Eigen::internal::add_assign_op<double, double>, 0>::assignPacket<16, 16, double __vector;double __vector;double __vector;double __vector 31978531
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::MatrixBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const> >;void Eigen::internal::call_assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;void Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const> >, Eigen::internal::add_assign_op<double, double>, 0>::assignPacket<16, 16, double __vector;double __vector;double __vector;double __vector;double __vector 27301927
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::DiagonalWrapper<Eigen::CwiseUnaryOp<Eigen::internal::scalar_inverse_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> const> const> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::DiagonalWrapper<Eigen::CwiseUnaryOp<Eigen::internal::scalar_inverse_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> const> const> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::operator=<Eigen::DiagonalWrapper<Eigen::CwiseUnaryOp<Eigen::internal::scalar_inverse_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> const> const> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::MatrixBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::operator=<Eigen::DiagonalWrapper<Eigen::CwiseUnaryOp<Eigen::internal::scalar_inverse_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> const> const> >;void Eigen::internal::call_assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::DiagonalWrapper<Eigen::CwiseUnaryOp<Eigen::internal::scalar_inverse_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> const> const> >;void Eigen::internal::call_assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::DiagonalWrapper<Eigen::CwiseUnaryOp<Eigen::internal::scalar_inverse_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> const> const>, Eigen::internal::assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::DiagonalWrapper<Eigen::CwiseUnaryOp<Eigen::internal::scalar_inverse_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> const> const>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::DiagonalWrapper<Eigen::CwiseUnaryOp<Eigen::internal::scalar_inverse_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> const> const>, Eigen::internal::assign_op<double, double>, Eigen::internal::Diagonal2Dense, void>::run;Eigen::DenseBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::setZero;Eigen::DenseBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::setConstant;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::Matrix<double, -1, -1, 0, -1, -1>::operator=<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> > >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> > >;void Eigen::internal::call_assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> > >;void Eigen::internal::call_assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;double* std::fill_n<double*, long, double>;double* std::__fill_n_a<double*, long, double>;void std::__fill_a<double*, double>;__gnu_cxx::__enable_if<std::__is_scalar<double>::__value, void>::__type std::__fill_a1<double*, double> 1170376831
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;Eigen::DenseBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::setZero;Eigen::DenseBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::setConstant;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::Matrix<double, -1, -1, 0, -1, -1>::operator=<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> > >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> > >;void Eigen::internal::call_assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> > >;void Eigen::internal::call_assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;double* std::fill_n<double*, long, double>;double* std::__fill_n_a<double*, long, double>;void std::__fill_a<double*, double>;__gnu_cxx::__enable_if<std::__is_scalar<double>::__value, void>::__type std::__fill_a1<double*, double> 26672927
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0> >;void Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_init1<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::DenseShape, Eigen::DenseShape, 8>::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::DenseShape, Eigen::DenseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows;Eigen::DenseStorage<double, -1, -1, -1, 0>::rows 32156104
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0> >;void Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_init1<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::DenseShape, Eigen::DenseShape, 8>::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::DenseShape, Eigen::DenseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;Eigen::internal::level3_blocking<double, double>::level3_blocking 30596514
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> > 31629220
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type, double>, Eigen::internal::plain_constant_type<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type>::type const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> const Eigen::operator*<double> 204073577
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row 81340811
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::SparseCompressedBase<Eigen::SparseMatrix<double, 0, int> >::InnerIterator::index 56761614
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::SparseCompressedBase<Eigen::SparseMatrix<double, 0, int> >::InnerIterator::operator bool 76210850
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::SparseCompressedBase<Eigen::SparseMatrix<double, 0, int> >::InnerIterator::operator++ 729081009
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::SparseCompressedBase<Eigen::SparseMatrix<double, 0, int> >::InnerIterator::value 108963704
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow 3513774588
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block 58311210
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> > 2610448055
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;Eigen::EigenBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::derived 841236456
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;Eigen::EigenBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::derived 791181284
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];scheduler_tick_[k];perf_event_task_tick_[k];perf_adjust_freq_unthr_context_[k] 27558701
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];irqentry_exit_[k];irqentry_exit_to_user_mode_[k];exit_to_user_mode_prepare_[k];exit_to_user_mode_loop_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];_raw_spin_unlock_[k] 2212808
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> > 1605478039
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const>::CwiseNullaryOp;asm_sysvec_apic_timer_interrupt_[k] 25952874
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run 772892633
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> > 2577242191
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run 1609693662
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;Eigen::EigenBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::const_cast_derived 114006814
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run 165667645
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::evaluator 163980785
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::~evaluator 412773767
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::~evaluator;asm_sysvec_apic_timer_interrupt_[k] 28144459
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator 560086509
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::~evaluator 425780931
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::generic_dense_assignment_kernel 187062643
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_do_timer_[k];tick_do_update_jiffies64_[k];update_wall_time_[k];timekeeping_adjust.constprop.0_[k] 31266454
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];irqentry_exit_[k];irqentry_exit_to_user_mode_[k];exit_to_user_mode_prepare_[k];exit_to_user_mode_loop_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k] 2450359
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> > 4120747718
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::cols 88736333
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::rows 512727580
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::EigenBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::const_cast_derived 363141531
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::MapBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, 0>::cols 107579327
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::MapBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, 0>::rows 356356557
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::~binary_evaluator 155535135
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::block_evaluator 80113822
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::~block_evaluator 219316253
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run 2485352178
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;Eigen::EigenBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::size 27829247
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;Eigen::MapBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, 1>::data 27071168
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::assignCoeff 118330339
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::dstDataPtr 1029075979
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::dstDataPtr;Eigen::MapBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, 1>::data 1156559318
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::size 1224049750
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::size;Eigen::EigenBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::cols 170420797
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::size;Eigen::EigenBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::rows 105501784
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::size;Eigen::EigenBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::size 1132786685
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::size;Eigen::EigenBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::size;Eigen::EigenBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::cols 167295059
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::size;Eigen::EigenBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::size;Eigen::EigenBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::cols;Eigen::EigenBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::derived 876181729
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::size;Eigen::EigenBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::size;Eigen::EigenBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::cols;Eigen::MapBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, 0>::cols 591096356
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::size;Eigen::EigenBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::size;Eigen::EigenBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::cols;Eigen::MapBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, 0>::cols;Eigen::internal::variable_if_dynamic<long, -1>::value 1368767041
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::size;Eigen::EigenBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::size;Eigen::EigenBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::cols;Eigen::MapBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, 0>::cols;asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];scheduler_tick_[k];perf_event_task_tick_[k];perf_adjust_freq_unthr_context_[k] 27568264
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::size;Eigen::EigenBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::size;Eigen::EigenBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::derived 131825174
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::size;Eigen::EigenBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::size;Eigen::EigenBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::rows 571194602
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::size;Eigen::EigenBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::size;Eigen::EigenBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::rows;Eigen::EigenBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::derived 580959943
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::size;Eigen::EigenBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::size;Eigen::EigenBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::rows;Eigen::MapBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, 0>::rows 168555830
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::size;Eigen::EigenBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::size;Eigen::EigenBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::rows;Eigen::internal::variable_if_dynamic<long, 1>::value 157664248
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::size;Eigen::EigenBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::size;Eigen::EigenBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::rows;Eigen::internal::variable_if_dynamic<long, 1>::value;asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];scheduler_tick_[k];perf_event_task_tick_[k];perf_adjust_freq_unthr_context_[k] 29600159
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::size;Eigen::EigenBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::size;Eigen::MapBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, 0>::cols 86729164
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::size;Eigen::EigenBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::size;Eigen::MapBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, 0>::rows 194303559
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;asm_common_interrupt_[k] 30505592
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;double __vector 86107786
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;long Eigen::internal::first_aligned<16, double, long> 1656971056
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;long Eigen::internal::first_aligned<16, double, long>;asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];irqentry_exit_[k];irqentry_exit_to_user_mode_[k];exit_to_user_mode_prepare_[k];exit_to_user_mode_loop_[k];schedule_[k];__schedule_[k];prepare_task_switch_[k];__perf_event_task_sched_out_[k];perf_event_context_sched_out_[k];perf_ctx_disable_[k] 21304333
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;void Eigen::internal::add_assign_op<double, double>::assignPacket<16, double __vector 28771393
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;void Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::assignPacket<16, 0, double __vector 1094399454
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;void Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::assignPacket<16, 0, double __vector;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::func 83412853
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;void Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::assignPacket<16, 0, double __vector;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::coeffRef 865836271
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;void Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::assignPacket<16, 0, double __vector;Eigen::internal::variable_if_dynamic<long, 1>::value 81048070
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;void Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::assignPacket<16, 0, double __vector;double __vector 1477418412
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;void Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::assignPacket<16, 0, double __vector;double __vector;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::func 860285023
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;void Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::assignPacket<16, 0, double __vector;double __vector;double __vector 2767548281
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;void Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::assignPacket<16, 0, double __vector;double __vector;double __vector;asm_common_interrupt_[k];common_interrupt_[k];__common_interrupt_[k];handle_edge_irq_[k];handle_irq_event_[k];__handle_irq_event_percpu_[k];amdgpu_irq_handler_[k];amdgpu_ih_process_[k];amdgpu_irq_dispatch_[k];amdgpu_dm_irq_handler_[k];dm_crtc_high_irq_[k];amdgpu_dm_crtc_handle_vblank_[k];drm_crtc_handle_vblank_[k];drm_handle_vblank_[k];drm_update_vblank_count_[k];drm_crtc_get_last_vbltimestamp_[k];drm_crtc_vblank_helper_get_vblank_timestamp_[k];drm_crtc_vblank_helper_get_vblank_timestamp_internal_[k] 23509793
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;void Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::assignPacket<16, 0, double __vector;double __vector;double __vector;double __vector 3845149717
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;void Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::assignPacket<16, 0, double __vector;double __vector;double __vector;double __vector;double __vector 404344132
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;void Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::assignPacket<16, 0, double __vector;double __vector;double __vector;double __vector;double __vector;double __vector 1638451381
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;void Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::assignPacket<16, 0, double __vector;void Eigen::internal::add_assign_op<double, double>::assignPacket<16, double __vector 1410304780
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;void Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::assignPacket<16, 0, double __vector;void Eigen::internal::add_assign_op<double, double>::assignPacket<16, double __vector;double __vector 2717204306
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;void Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::assignPacket<16, 0, double __vector;void Eigen::internal::add_assign_op<double, double>::assignPacket<16, double __vector;double __vector;asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];scheduler_tick_[k];perf_event_task_tick_[k];perf_adjust_freq_unthr_context_[k] 26724014
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;void Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::assignPacket<16, 0, double __vector;void Eigen::internal::add_assign_op<double, double>::assignPacket<16, double __vector;void Eigen::internal::pstore<double, double __vector 1389387006
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;void Eigen::internal::unaligned_dense_assignment_loop<false>::run<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0> > 1093243062
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;void Eigen::internal::unaligned_dense_assignment_loop<false>::run<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0> >;Eigen::internal::add_assign_op<double, double>::assignCoeff 79098324
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;void Eigen::internal::unaligned_dense_assignment_loop<false>::run<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0> >;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::coeff 137508620
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;void Eigen::internal::unaligned_dense_assignment_loop<false>::run<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0> >;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::assignCoeff 1638660456
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;void Eigen::internal::unaligned_dense_assignment_loop<false>::run<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0> >;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::assignCoeff;Eigen::internal::add_assign_op<double, double>::assignCoeff 1241539912
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;void Eigen::internal::unaligned_dense_assignment_loop<false>::run<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0> >;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::assignCoeff;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::func 137551668
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;void Eigen::internal::unaligned_dense_assignment_loop<false>::run<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0> >;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::assignCoeff;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::coeff 2583303841
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;void Eigen::internal::unaligned_dense_assignment_loop<false>::run<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0> >;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::assignCoeff;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::coeff;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::func 604305139
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;void Eigen::internal::unaligned_dense_assignment_loop<false>::run<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0> >;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::assignCoeff;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::coeff;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::coeff 1774645221
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;void Eigen::internal::unaligned_dense_assignment_loop<false>::run<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0> >;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::assignCoeff;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::coeff;Eigen::internal::scalar_product_op<double, double>::operator 1099501627
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;void Eigen::internal::unaligned_dense_assignment_loop<false>::run<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0> >;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::assignCoeff;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::coeff;Eigen::internal::scalar_product_op<double, double>::operator;asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];scheduler_tick_[k];task_tick_fair_[k];update_curr_[k] 24670260
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;void Eigen::internal::unaligned_dense_assignment_loop<false>::run<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0> >;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::assignCoeff;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::coeff;Eigen::internal::variable_if_dynamic<long, 1>::value 24984007
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;void Eigen::internal::unaligned_dense_assignment_loop<false>::run<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0> >;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::assignCoeff;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::coeff;double Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> >::coeff<long> 696030408
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;void Eigen::internal::unaligned_dense_assignment_loop<false>::run<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0> >;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::assignCoeff;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::coeff;double Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> >::coeff<long>;double Eigen::internal::nullary_wrapper<double, Eigen::internal::scalar_constant_op<double>, true, false, false>::operator 915137223
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;void Eigen::internal::unaligned_dense_assignment_loop<false>::run<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0> >;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::assignCoeff;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::coeff;double Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> >::coeff<long>;double Eigen::internal::nullary_wrapper<double, Eigen::internal::scalar_constant_op<double>, true, false, false>::operator;Eigen::internal::scalar_constant_op<double>::operator 1148891229
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;void Eigen::internal::unaligned_dense_assignment_loop<false>::run<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0> >;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::assignCoeff;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::coeff;double Eigen::internal::nullary_wrapper<double, Eigen::internal::scalar_constant_op<double>, true, false, false>::operator 29420088
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;void Eigen::internal::unaligned_dense_assignment_loop<false>::run<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0> >;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::assignCoeff;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::coeff 50459365
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;void Eigen::internal::unaligned_dense_assignment_loop<false>::run<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0> >;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::assignCoeff;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::coeffRef 86960749
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;void Eigen::internal::unaligned_dense_assignment_loop<false>::run<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0> >;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::assignCoeff;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::coeffRef;Eigen::internal::variable_if_dynamic<long, 1>::value 82389572
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;void Eigen::internal::unaligned_dense_assignment_loop<false>::run<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0> >;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::assignCoeff;Eigen::internal::scalar_product_op<double, double>::operator 177327792
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;void Eigen::internal::unaligned_dense_assignment_loop<false>::run<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0> >;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::assignCoeff;double Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> >::coeff<long> 170669580
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;void Eigen::internal::unaligned_dense_assignment_loop<false>::run<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0> >;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::coeffRef 175198015
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::evaluator 740615122
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::block_evaluator 607863607
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::block_evaluator;Eigen::MapBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, 1>::data 187852344
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::block_evaluator;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::innerStride 296238142
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::block_evaluator;Eigen::internal::evaluator_base<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::evaluator_base 166499690
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator 2188828078
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::MapBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, 1>::data 1280842953
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::MapBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, 1>::data;asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];scheduler_tick_[k];perf_event_task_tick_[k];perf_adjust_freq_unthr_context_[k] 27345582
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::innerStride 193246219
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride 146426626
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::innerStride 670813177
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::innerStride;Eigen::Matrix<double, -1, -1, 0, -1, -1>::innerStride 104490797
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::innerStride;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::innerStride 842006504
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::innerStride;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::innerStride;Eigen::EigenBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::derived 587847521
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::innerStride;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::innerStride;Eigen::Matrix<double, -1, -1, 0, -1, -1>::innerStride 194344674
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::innerStride;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::innerStride;Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::nestedExpression 1020681535
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::innerStride;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::innerStride;Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::nestedExpression;asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];irqentry_exit_[k];irqentry_exit_to_user_mode_[k];exit_to_user_mode_prepare_[k];fpregs_assert_state_consistent_[k] 25464305
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::outerStride 504967838
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::outerStride;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride 575790337
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::outerStride;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride;Eigen::EigenBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::derived 671280604
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::outerStride;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride;Eigen::Matrix<double, -1, -1, 0, -1, -1>::outerStride 600343461
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::outerStride;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride;Eigen::Matrix<double, -1, -1, 0, -1, -1>::outerStride;Eigen::DenseBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::innerSize 735733890
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::outerStride;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride;Eigen::Matrix<double, -1, -1, 0, -1, -1>::outerStride;Eigen::DenseBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::innerSize;Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::derived 23658723
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::outerStride;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride;Eigen::Matrix<double, -1, -1, 0, -1, -1>::outerStride;Eigen::DenseBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::innerSize;Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows 724107113
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::outerStride;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride;Eigen::Matrix<double, -1, -1, 0, -1, -1>::outerStride;Eigen::DenseBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::innerSize;Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows;Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::derived 655414898
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::outerStride;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride;Eigen::Matrix<double, -1, -1, 0, -1, -1>::outerStride;Eigen::DenseBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::innerSize;Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows 677358412
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::outerStride;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride;Eigen::Matrix<double, -1, -1, 0, -1, -1>::outerStride;Eigen::DenseBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::innerSize;Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows;Eigen::DenseStorage<double, -1, -1, -1, 0>::rows 1094097984
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::outerStride;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride;Eigen::Matrix<double, -1, -1, 0, -1, -1>::outerStride;Eigen::DenseBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::innerSize;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows 27782133
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::outerStride;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride;Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::nestedExpression 1237853837
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::internal::evaluator_base<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::evaluator_base 83029799
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::internal::variable_if_dynamic<long, -1>::variable_if_dynamic 790422799
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::internal::variable_if_dynamic<long, 1>::variable_if_dynamic 640788839
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::block_evaluator;Eigen::internal::variable_if_dynamic<long, -1>::variable_if_dynamic 115048566
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::block_evaluator;Eigen::internal::variable_if_dynamic<long, 1>::variable_if_dynamic 200179868
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::block_evaluator;asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];__remove_hrtimer_[k];rb_next_[k] 28069735
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator 119077349
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::~evaluator 274987732
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::~evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::~block_evaluator 402217831
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::~evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::~block_evaluator;Eigen::internal::evaluator_base<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::~evaluator_base 195574378
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::~evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::~block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::~mapbase_evaluator 698377377
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::~evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::~block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::~mapbase_evaluator;Eigen::internal::evaluator_base<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::~evaluator_base 142157543
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::~evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::~mapbase_evaluator 220767119
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator 1341805267
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator 1866543022
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::functor 33228641
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::lhs 190636185
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::rhs 27860909
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data 1982957113
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::functor 821227418
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::lhs 474616030
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::rhs 630001573
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::evaluator 162806666
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::evaluator 920518076
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::block_evaluator 102585476
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::evaluator;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::evaluator 960818157
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::evaluator;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::block_evaluator 694316088
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::evaluator;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::block_evaluator;Eigen::MapBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, 0>::data 23100573
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::evaluator;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::block_evaluator;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::innerStride 262685512
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::evaluator;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::block_evaluator;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::outerStride 140534739
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::evaluator;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::block_evaluator;Eigen::internal::evaluator_base<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::evaluator_base 57256273
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::evaluator;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator 1894348350
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::evaluator;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::MapBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, 0>::data 958237980
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::evaluator;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::MapBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, 0>::data;asm_common_interrupt_[k];common_interrupt_[k];irq_exit_rcu_[k];__irq_exit_rcu_[k];tasklet_hi_action_[k] 28742195
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::evaluator;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::innerStride 225942236
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::evaluator;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride 88839144
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::evaluator;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::innerStride 320224278
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::evaluator;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::innerStride;Eigen::EigenBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::derived 28084487
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::evaluator;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::innerStride;Eigen::Matrix<double, -1, -1, 0, -1, -1>::innerStride 549368115
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::evaluator;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::innerStride;Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::nestedExpression 80563331
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::evaluator;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::innerStride;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::innerStride 808141769
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::evaluator;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::innerStride;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::innerStride;Eigen::EigenBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::derived 519695232
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::evaluator;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::innerStride;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::innerStride;Eigen::Matrix<double, -1, -1, 0, -1, -1>::innerStride 27519153
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::evaluator;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::innerStride;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::innerStride;Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::nestedExpression 1120567508
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::evaluator;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::outerStride 555342751
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::evaluator;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::outerStride;Eigen::EigenBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::derived 28504519
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::evaluator;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::outerStride;Eigen::Matrix<double, -1, -1, 0, -1, -1>::outerStride 58147535
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::evaluator;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::outerStride;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride 447370397
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::evaluator;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::outerStride;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride;Eigen::EigenBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::derived 670471096
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::evaluator;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::outerStride;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride;Eigen::Matrix<double, -1, -1, 0, -1, -1>::outerStride 554545208
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::evaluator;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::outerStride;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride;Eigen::Matrix<double, -1, -1, 0, -1, -1>::outerStride;Eigen::DenseBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::innerSize 819696007
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::evaluator;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::outerStride;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride;Eigen::Matrix<double, -1, -1, 0, -1, -1>::outerStride;Eigen::DenseBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::innerSize;Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows 893596817
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::evaluator;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::outerStride;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride;Eigen::Matrix<double, -1, -1, 0, -1, -1>::outerStride;Eigen::DenseBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::innerSize;Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows;Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::derived 457040797
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::evaluator;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::outerStride;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride;Eigen::Matrix<double, -1, -1, 0, -1, -1>::outerStride;Eigen::DenseBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::innerSize;Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows 530450238
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::evaluator;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::outerStride;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride;Eigen::Matrix<double, -1, -1, 0, -1, -1>::outerStride;Eigen::DenseBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::innerSize;Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows;Eigen::DenseStorage<double, -1, -1, -1, 0>::rows 825806941
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::evaluator;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::outerStride;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride;Eigen::Matrix<double, -1, -1, 0, -1, -1>::outerStride;Eigen::DenseBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::innerSize;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows 27184141
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::evaluator;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::outerStride;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride;Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::nestedExpression 925754124
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::evaluator;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::internal::evaluator_base<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::evaluator_base 62930047
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::evaluator;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::internal::variable_if_dynamic<long, -1>::variable_if_dynamic 602443626
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::evaluator;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::internal::variable_if_dynamic<long, 1>::variable_if_dynamic 952245717
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::evaluator;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::block_evaluator;Eigen::internal::variable_if_dynamic<long, -1>::variable_if_dynamic 473277843
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::evaluator;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::block_evaluator;Eigen::internal::variable_if_dynamic<long, 1>::variable_if_dynamic 397397933
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::evaluator;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator 30542370
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const>::evaluator 856599881
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const>::evaluator;Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const>::functor 57668543
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const>::evaluator;Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const>::functor;asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];scheduler_tick_[k];perf_event_task_tick_[k];perf_adjust_freq_unthr_context_[k] 29292407
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const>::evaluator;Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> >::evaluator 997251764
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const>::evaluator;Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> >::evaluator;Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const>::functor 606575284
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const>::evaluator;Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> >::evaluator;Eigen::internal::evaluator_base<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> >::evaluator_base 180946078
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const>::evaluator;Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> >::evaluator;Eigen::internal::scalar_constant_op<double>::scalar_constant_op 817805280
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const>::evaluator;Eigen::internal::evaluator_base<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> >::evaluator_base 350708013
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const>::evaluator;Eigen::internal::scalar_constant_op<double>::scalar_constant_op 86579389
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::evaluator 333013795
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const>::evaluator 197088854
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::evaluator_base<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator_base 275752676
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;asm_sysvec_apic_timer_interrupt_[k] 21977063
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::~evaluator 615249157
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::~evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::~Data 421863966
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::~evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::~binary_evaluator 1469225641
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::~evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::~binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::~Data 1272610375
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::~evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::~binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::~Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::~evaluator 222763180
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::~evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::~binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::~Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::~evaluator 762300089
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::~evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::~binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::~Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::~evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::~block_evaluator 194468884
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::~evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::~binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::~Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::~evaluator;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::~evaluator 562819341
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::~evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::~binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::~Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::~evaluator;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::~evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::~block_evaluator 807786554
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::~evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::~binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::~Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::~evaluator;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::~evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::~block_evaluator;Eigen::internal::evaluator_base<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::~evaluator_base 27037696
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::~evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::~binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::~Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::~evaluator;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::~evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::~block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::~mapbase_evaluator 798459369
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::~evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::~binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::~Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::~evaluator;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::~evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::~block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::~mapbase_evaluator;Eigen::internal::evaluator_base<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::~evaluator_base 45042695
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::~evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::~binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::~Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::~evaluator;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::~evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::~mapbase_evaluator 22571343
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::~evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::~binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::~Data;Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> >::~evaluator 193594251
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::~evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::~binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::~Data;Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const>::~evaluator 790771314
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::~evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::~binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::~Data;Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const>::~evaluator;Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> >::~evaluator 551201396
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::~evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::~binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::~Data;Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const>::~evaluator;Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> >::~evaluator;Eigen::internal::evaluator_base<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> >::~evaluator_base 171762907
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::~evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::~binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::~Data;Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const>::~evaluator;Eigen::internal::evaluator_base<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> >::~evaluator_base 164920603
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::~evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::~binary_evaluator;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::~evaluator 306810268
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::~evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::~binary_evaluator;Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const>::~evaluator 337131441
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::~evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::~binary_evaluator;Eigen::internal::evaluator_base<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::~evaluator_base 82294962
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::~evaluator;Eigen::internal::evaluator_base<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::~evaluator_base 389879505
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::dstDataPtr 53936628
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::generic_dense_assignment_kernel 1305273099
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::size 112534723
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;asm_common_interrupt_[k];common_interrupt_[k];__common_interrupt_[k];handle_edge_irq_[k];handle_irq_event_[k];__handle_irq_event_percpu_[k];amdgpu_irq_handler_[k];amdgpu_ih_process_[k];amdgpu_irq_dispatch_[k];amdgpu_dm_irq_handler_[k];dm_pflip_high_irq_[k];drm_crtc_accurate_vblank_count_[k];drm_update_vblank_count_[k];__get_vblank_counter_[k];amdgpu_get_vblank_counter_kms_[k];amdgpu_display_get_crtc_scanoutpos_[k];dm_crtc_get_scanoutpos_[k];dc_stream_get_scanoutpos_[k];optc1_get_crtc_scanoutpos_[k];optc1_get_position_[k];generic_reg_get2_[k];dm_read_reg_func_[k];amdgpu_cgs_read_register_[k];amdgpu_device_rreg_[k] 25949997
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;long Eigen::internal::first_aligned<16, double, long> 55288632
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::assignPacket<16, 0, double __vector 157804750
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::resize_if_allowed<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> > 1744558720
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::resize_if_allowed<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::cols 412186716
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::resize_if_allowed<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::cols;Eigen::MapBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, 0>::cols 648009616
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::resize_if_allowed<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::cols;Eigen::MapBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, 0>::cols;Eigen::internal::variable_if_dynamic<long, -1>::value 1286096889
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::resize_if_allowed<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::cols;Eigen::internal::variable_if_dynamic<long, -1>::value 50921335
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::resize_if_allowed<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::rows 820483295
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::resize_if_allowed<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::rows;Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const>::rows 106954659
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::resize_if_allowed<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::rows;Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const>::rows;Eigen::internal::variable_if_dynamic<long, 1>::value 27776315
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::resize_if_allowed<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::rows;Eigen::internal::variable_if_dynamic<long, 1>::value 565741524
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::resize_if_allowed<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const>::rows 273611573
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::resize_if_allowed<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::MapBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, 0>::cols 26581404
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::resize_if_allowed<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::MapBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, 0>::cols 705295419
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::resize_if_allowed<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::MapBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, 0>::cols;Eigen::internal::variable_if_dynamic<long, -1>::value 1251758093
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::resize_if_allowed<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::MapBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, 0>::rows 76591462
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::resize_if_allowed<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::MapBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, 0>::rows;Eigen::internal::variable_if_dynamic<long, 1>::value 27288618
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::resize_if_allowed<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::variable_if_dynamic<long, -1>::value 86716780
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::resize_if_allowed<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::variable_if_dynamic<long, 1>::value 437094768
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::resize_if_allowed<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;asm_common_interrupt_[k];common_interrupt_[k];__common_interrupt_[k];handle_edge_irq_[k];handle_irq_event_[k];__handle_irq_event_percpu_[k];amdgpu_irq_handler_[k];amdgpu_ih_process_[k];amdgpu_irq_dispatch_[k];amdgpu_dm_irq_handler_[k];dm_crtc_high_irq_[k];amdgpu_dm_crtc_handle_vblank_[k];drm_crtc_handle_vblank_[k];drm_handle_vblank_[k];drm_update_vblank_count_[k];__get_vblank_counter_[k];amdgpu_get_vblank_counter_kms_[k];dm_vblank_get_counter_[k];dc_stream_get_vblank_counter_[k];optc1_get_vblank_counter_[k];generic_reg_get_[k];dm_read_reg_func_[k];amdgpu_cgs_read_register_[k];amdgpu_device_rreg_[k] 22601519
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::unaligned_dense_assignment_loop<false>::run<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0> > 161155646
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::check_for_aliasing<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> > 165779122
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::resize_if_allowed<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> > 237193674
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> > 171283465
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> > 434506808
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];scheduler_tick_[k];perf_event_task_tick_[k];perf_adjust_freq_unthr_context_[k] 29528339
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type, double>, Eigen::internal::plain_constant_type<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type>::type const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> const Eigen::operator*<double> 1065392289
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type, double>, Eigen::internal::plain_constant_type<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type>::type const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> const Eigen::operator*<double>;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::CwiseBinaryOp 3216360095
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type, double>, Eigen::internal::plain_constant_type<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type>::type const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> const Eigen::operator*<double>;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::CwiseBinaryOp;Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const, Eigen::Dense>::CwiseBinaryOpImpl 792308182
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type, double>, Eigen::internal::plain_constant_type<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type>::type const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> const Eigen::operator*<double>;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::CwiseBinaryOp;Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const, Eigen::Dense>::CwiseBinaryOpImpl;Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::DenseBase 79437555
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type, double>, Eigen::internal::plain_constant_type<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type>::type const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> const Eigen::operator*<double>;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::CwiseBinaryOp;Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const, Eigen::Dense>::CwiseBinaryOpImpl;Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::MatrixBase 643408900
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type, double>, Eigen::internal::plain_constant_type<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type>::type const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> const Eigen::operator*<double>;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::CwiseBinaryOp;Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const, Eigen::Dense>::CwiseBinaryOpImpl;Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::MatrixBase;Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::DenseBase 83317334
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type, double>, Eigen::internal::plain_constant_type<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type>::type const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> const Eigen::operator*<double>;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::CwiseBinaryOp;Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const>::CwiseNullaryOp 1234351967
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type, double>, Eigen::internal::plain_constant_type<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type>::type const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> const Eigen::operator*<double>;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::CwiseBinaryOp;Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const>::CwiseNullaryOp;Eigen::internal::scalar_constant_op<double>::scalar_constant_op 696842263
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type, double>, Eigen::internal::plain_constant_type<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type>::type const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> const Eigen::operator*<double>;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::CwiseBinaryOp;Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const>::cols 1018510521
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type, double>, Eigen::internal::plain_constant_type<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type>::type const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> const Eigen::operator*<double>;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::CwiseBinaryOp;Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const>::cols;Eigen::internal::variable_if_dynamic<long, -1>::value 927442083
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type, double>, Eigen::internal::plain_constant_type<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type>::type const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> const Eigen::operator*<double>;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::CwiseBinaryOp;Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const>::cols;Eigen::internal::variable_if_dynamic<long, -1>::value;asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_do_timer_[k];tick_do_update_jiffies64_[k];calc_global_load_[k] 26806672
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type, double>, Eigen::internal::plain_constant_type<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type>::type const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> const Eigen::operator*<double>;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::CwiseBinaryOp;Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const>::rows 168926051
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type, double>, Eigen::internal::plain_constant_type<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type>::type const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> const Eigen::operator*<double>;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::CwiseBinaryOp;Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const>::rows;Eigen::internal::variable_if_dynamic<long, 1>::value 87115610
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type, double>, Eigen::internal::plain_constant_type<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type>::type const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> const Eigen::operator*<double>;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::CwiseBinaryOp;Eigen::MapBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, 0>::cols 391681516
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type, double>, Eigen::internal::plain_constant_type<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type>::type const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> const Eigen::operator*<double>;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::CwiseBinaryOp;Eigen::MapBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, 0>::cols;Eigen::internal::variable_if_dynamic<long, -1>::value 1333911918
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type, double>, Eigen::internal::plain_constant_type<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type>::type const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> const Eigen::operator*<double>;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::CwiseBinaryOp;Eigen::MapBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, 0>::cols;asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];scheduler_tick_[k];task_tick_fair_[k] 26038301
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type, double>, Eigen::internal::plain_constant_type<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type>::type const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> const Eigen::operator*<double>;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::CwiseBinaryOp;Eigen::MapBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, 0>::rows 175103466
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type, double>, Eigen::internal::plain_constant_type<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type>::type const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> const Eigen::operator*<double>;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::CwiseBinaryOp;Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::MatrixBase 188428337
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type, double>, Eigen::internal::plain_constant_type<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type>::type const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> const Eigen::operator*<double>;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::CwiseBinaryOp;Eigen::internal::scalar_constant_op<double>::scalar_constant_op 115017041
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type, double>, Eigen::internal::plain_constant_type<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type>::type const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> const Eigen::operator*<double>;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::CwiseBinaryOp;Eigen::internal::variable_if_dynamic<long, 1>::value 748334203
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type, double>, Eigen::internal::plain_constant_type<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type>::type const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> const Eigen::operator*<double>;Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const, Eigen::Dense>::CwiseBinaryOpImpl 280882051
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type, double>, Eigen::internal::plain_constant_type<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type>::type const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> const Eigen::operator*<double>;Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const>::CwiseNullaryOp 2039249137
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type, double>, Eigen::internal::plain_constant_type<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type>::type const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> const Eigen::operator*<double>;Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const>::CwiseNullaryOp;Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> >::DenseBase 84306791
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type, double>, Eigen::internal::plain_constant_type<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type>::type const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> const Eigen::operator*<double>;Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const>::CwiseNullaryOp;Eigen::MatrixBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> >::MatrixBase 692755669
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type, double>, Eigen::internal::plain_constant_type<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type>::type const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> const Eigen::operator*<double>;Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const>::CwiseNullaryOp;Eigen::MatrixBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> >::MatrixBase;Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> >::DenseBase 80561960
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type, double>, Eigen::internal::plain_constant_type<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type>::type const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> const Eigen::operator*<double>;Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const>::CwiseNullaryOp;Eigen::internal::scalar_constant_op<double>::scalar_constant_op 852342413
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type, double>, Eigen::internal::plain_constant_type<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type>::type const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> const Eigen::operator*<double>;Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const>::CwiseNullaryOp;Eigen::internal::variable_if_dynamic<long, -1>::variable_if_dynamic 517755855
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type, double>, Eigen::internal::plain_constant_type<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type>::type const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> const Eigen::operator*<double>;Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const>::CwiseNullaryOp;Eigen::internal::variable_if_dynamic<long, -1>::variable_if_dynamic;asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];scheduler_tick_[k];perf_event_task_tick_[k];perf_adjust_freq_unthr_context_[k];x86_pmu_disable_[k];amd_pmu_disable_all_[k];native_write_msr_[k] 27881938
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type, double>, Eigen::internal::plain_constant_type<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type>::type const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> const Eigen::operator*<double>;Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const>::CwiseNullaryOp;Eigen::internal::variable_if_dynamic<long, 1>::variable_if_dynamic 766311408
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type, double>, Eigen::internal::plain_constant_type<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type>::type const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> const Eigen::operator*<double>;Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const>::cols 27702902
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type, double>, Eigen::internal::plain_constant_type<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type>::type const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> const Eigen::operator*<double>;Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const>::rows 361913809
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type, double>, Eigen::internal::plain_constant_type<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type>::type const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> const Eigen::operator*<double>;Eigen::EigenBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::derived 1447470113
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type, double>, Eigen::internal::plain_constant_type<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type>::type const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> const Eigen::operator*<double>;Eigen::MapBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, 0>::cols 863780104
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type, double>, Eigen::internal::plain_constant_type<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type>::type const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> const Eigen::operator*<double>;Eigen::MapBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, 0>::cols;Eigen::internal::variable_if_dynamic<long, -1>::value 1326756371
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type, double>, Eigen::internal::plain_constant_type<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type>::type const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> const Eigen::operator*<double>;Eigen::MapBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, 0>::rows 530207566
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type, double>, Eigen::internal::plain_constant_type<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type>::type const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> const Eigen::operator*<double>;Eigen::MapBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, 0>::rows;Eigen::internal::variable_if_dynamic<long, 1>::value 184554338
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type, double>, Eigen::internal::plain_constant_type<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type>::type const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> const Eigen::operator*<double>;Eigen::MatrixBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> >::MatrixBase 176912856
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type, double>, Eigen::internal::plain_constant_type<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type>::type const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> const Eigen::operator*<double>;Eigen::internal::scalar_constant_op<double>::scalar_constant_op 788230247
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type, double>, Eigen::internal::plain_constant_type<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type>::type const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> const Eigen::operator*<double>;Eigen::internal::variable_if_dynamic<long, -1>::value 48666031
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type, double>, Eigen::internal::plain_constant_type<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type>::type const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> const Eigen::operator*<double>;Eigen::internal::variable_if_dynamic<long, -1>::variable_if_dynamic 74836628
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type, double>, Eigen::internal::plain_constant_type<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type>::type const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> const Eigen::operator*<double>;Eigen::internal::variable_if_dynamic<long, 1>::value 222813180
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type, double>, Eigen::internal::plain_constant_type<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type>::type const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> const Eigen::operator*<double>;Eigen::internal::variable_if_dynamic<long, 1>::variable_if_dynamic 111790468
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::CwiseBinaryOp 354294249
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const>::CwiseNullaryOp 384864608
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row 641784061
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block 1211619531
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl 941558121
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::MapBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, 0>::MapBase 25949305
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::data 160871045
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride 188203451
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense 3049207302
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::EigenBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::derived 60432852
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::MapBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, 0>::MapBase 1659105411
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::MapBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, 0>::MapBase;Eigen::DenseBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::DenseBase 148477139
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::MapBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, 0>::MapBase;Eigen::DenseBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::DenseBase;asm_common_interrupt_[k];common_interrupt_[k];__common_interrupt_[k];handle_edge_irq_[k];handle_irq_event_[k];__handle_irq_event_percpu_[k];amdgpu_irq_handler_[k];amdgpu_ih_process_[k];amdgpu_irq_dispatch_[k];gfx_v9_0_eop_irq_[k];amdgpu_fence_process_[k];dma_fence_signal_[k];dma_fence_signal_timestamp_locked_[k];drm_sched_job_done_cb_[k];drm_sched_job_done.isra.0_[k];__wake_up_[k];__wake_up_common_lock_[k];__wake_up_common_[k];autoremove_wake_function_[k];default_wake_function_[k];try_to_wake_up_[k];ttwu_do_activate_[k];enqueue_task_[k];psi_task_change_[k];psi_group_change_[k] 29793403
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::MapBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, 0>::MapBase;Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::MatrixBase 223316894
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::MapBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, 0>::MapBase;Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::MatrixBase;Eigen::DenseBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::DenseBase 54434728
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::MapBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, 0>::MapBase;Eigen::internal::variable_if_dynamic<long, -1>::variable_if_dynamic 1089932357
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::MapBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, 0>::MapBase;Eigen::internal::variable_if_dynamic<long, 1>::variable_if_dynamic 395449643
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::MapBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, 0>::MapBase;void Eigen::MapBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, 0>::checkSanity<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> > 1349678276
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::Matrix<double, -1, -1, 0, -1, -1>::outerStride 114568863
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::MatrixBase 259116428
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::data 31547640
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows 29187514
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::cols 944892286
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::cols;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows 726441069
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::cols;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows;Eigen::DenseStorage<double, -1, -1, -1, 0>::rows 824601105
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::nestedExpression 56481217
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::data 472404077
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::data;Eigen::DenseStorage<double, -1, -1, -1, 0>::data 30620292
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::data;Eigen::EigenBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::derived 806259567
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::data;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::data 743788176
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::data;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::data;Eigen::DenseStorage<double, -1, -1, -1, 0>::data 1405468473
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::data;Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::nestedExpression 992031426
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride 459088833
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride;Eigen::DenseBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::innerSize 27403833
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride;Eigen::EigenBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::derived 593183214
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride;Eigen::Matrix<double, -1, -1, 0, -1, -1>::outerStride 1075454723
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride;Eigen::Matrix<double, -1, -1, 0, -1, -1>::outerStride;Eigen::DenseBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::innerSize 639913965
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride;Eigen::Matrix<double, -1, -1, 0, -1, -1>::outerStride;Eigen::DenseBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::innerSize;Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows 639430743
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride;Eigen::Matrix<double, -1, -1, 0, -1, -1>::outerStride;Eigen::DenseBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::innerSize;Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows;Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::derived 736374753
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride;Eigen::Matrix<double, -1, -1, 0, -1, -1>::outerStride;Eigen::DenseBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::innerSize;Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows 602455445
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride;Eigen::Matrix<double, -1, -1, 0, -1, -1>::outerStride;Eigen::DenseBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::innerSize;Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows;Eigen::DenseStorage<double, -1, -1, -1, 0>::rows 1044639596
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride;Eigen::Matrix<double, -1, -1, 0, -1, -1>::outerStride;Eigen::DenseBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::innerSize;Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows;asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];rcu_sched_clock_irq_[k] 31344563
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride;Eigen::Matrix<double, -1, -1, 0, -1, -1>::outerStride;Eigen::DenseBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::innerSize;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows 26286038
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride;Eigen::Matrix<double, -1, -1, 0, -1, -1>::outerStride;Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows 27417315
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride;Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::nestedExpression 977991128
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::init 195478204
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::init;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride 581065549
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::init;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride;Eigen::EigenBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::derived 497923627
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::init;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride;Eigen::Matrix<double, -1, -1, 0, -1, -1>::outerStride 658577865
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::init;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride;Eigen::Matrix<double, -1, -1, 0, -1, -1>::outerStride;Eigen::DenseBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::innerSize 1006603047
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::init;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride;Eigen::Matrix<double, -1, -1, 0, -1, -1>::outerStride;Eigen::DenseBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::innerSize;Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows 704522524
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::init;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride;Eigen::Matrix<double, -1, -1, 0, -1, -1>::outerStride;Eigen::DenseBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::innerSize;Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows;Eigen::DenseStorage<double, -1, -1, -1, 0>::rows;asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_do_timer_[k];tick_do_update_jiffies64_[k];update_wall_time_[k];timekeeping_advance_[k];timekeeping_update_[k];update_vsyscall_[k];update_vdso_data.constprop.0_[k] 26560244
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::init;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride;Eigen::Matrix<double, -1, -1, 0, -1, -1>::outerStride;Eigen::DenseBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::innerSize;Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows;Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::derived 847803967
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::init;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride;Eigen::Matrix<double, -1, -1, 0, -1, -1>::outerStride;Eigen::DenseBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::innerSize;Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows 594102081
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::init;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride;Eigen::Matrix<double, -1, -1, 0, -1, -1>::outerStride;Eigen::DenseBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::innerSize;Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows;Eigen::DenseStorage<double, -1, -1, -1, 0>::rows 839158683
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::init;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride;Eigen::Matrix<double, -1, -1, 0, -1, -1>::outerStride;Eigen::DenseBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::innerSize;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows 53102351
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::init;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride;Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::nestedExpression 1243056713
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::internal::variable_if_dynamic<long, -1>::variable_if_dynamic 1674011637
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::internal::variable_if_dynamic<long, 1>::variable_if_dynamic 173729255
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;void Eigen::MapBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, 0>::checkSanity<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> > 52186560
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::init 49802592
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::variable_if_dynamic<long, -1>::variable_if_dynamic 216665977
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::cols 102826591
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows 695444261
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows;Eigen::DenseStorage<double, -1, -1, -1, 0>::cols 53219797
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::cols 338672374
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::cols;Eigen::DenseStorage<double, -1, -1, -1, 0>::cols 890723107
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::cols;Eigen::DenseStorage<double, -1, -1, -1, 0>::cols;asm_common_interrupt_[k];common_interrupt_[k];__common_interrupt_[k];handle_edge_irq_[k];handle_irq_event_[k];__handle_irq_event_percpu_[k];amdgpu_irq_handler_[k];amdgpu_ih_process_[k];amdgpu_irq_dispatch_[k];amdgpu_dm_irq_handler_[k];dm_pflip_high_irq_[k];drm_crtc_accurate_vblank_count_[k];drm_update_vblank_count_[k];drm_crtc_get_last_vbltimestamp_[k];drm_crtc_vblank_helper_get_vblank_timestamp_[k];drm_crtc_vblank_helper_get_vblank_timestamp_internal_[k];amdgpu_crtc_get_scanout_position_[k];amdgpu_display_get_crtc_scanoutpos_[k];dm_crtc_get_scanoutpos_[k];dc_stream_get_scanoutpos_[k];optc1_get_crtc_scanoutpos_[k];optc1_get_position_[k];generic_reg_get_[k];dm_read_reg_func_[k];amdgpu_cgs_read_register_[k];amdgpu_device_rreg_[k] 25937034
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense 29272605
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::data 21376228
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::BlockImpl_dense 57714237
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::BlockImpl_dense;Eigen::MapBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, 1>::MapBase;Eigen::MapBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, 0>::MapBase;Eigen::internal::variable_if_dynamic<long, 1>::variable_if_dynamic 27888881
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::BlockImpl_dense;Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::cols;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows 22806241
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::BlockImpl_dense;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::data;Eigen::EigenBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::derived 31344159
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::BlockImpl_dense;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::data;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::data 25968163
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::variable_if_dynamic<long, -1>::variable_if_dynamic 28760911
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl 597621323
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::EigenBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::derived 440457794
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows 134483026
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::EigenBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::derived 245780371
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::EigenBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::derived 841307999
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::EigenBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::derived 80762899
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::EigenBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::derived 27822663
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::MapBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, 0>::cols 108725818
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::MapBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, 0>::rows 227466330
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::SparseCompressedBase<Eigen::SparseMatrix<double, 0, int> >::InnerIterator::index 1432916237
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::SparseCompressedBase<Eigen::SparseMatrix<double, 0, int> >::InnerIterator::index;asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];scheduler_tick_[k];perf_event_task_tick_[k];perf_adjust_freq_unthr_context_[k] 29415430
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::SparseCompressedBase<Eigen::SparseMatrix<double, 0, int> >::InnerIterator::operator bool 501962238
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::SparseCompressedBase<Eigen::SparseMatrix<double, 0, int> >::InnerIterator::operator bool;asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];scheduler_tick_[k];perf_event_task_tick_[k];perf_adjust_freq_unthr_context_[k];x86_pmu_disable_[k];amd_pmu_disable_all_[k];x86_pmu_disable_all_[k] 25294924
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::SparseCompressedBase<Eigen::SparseMatrix<double, 0, int> >::InnerIterator::operator++ 1242221024
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::SparseCompressedBase<Eigen::SparseMatrix<double, 0, int> >::InnerIterator::value 736239565
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::internal::scalar_constant_op<double>::scalar_constant_op 142340232
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::internal::unary_evaluator<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::internal::IteratorBased, double>::InnerIterator::InnerIterator;Eigen::SparseCompressedBase<Eigen::SparseMatrix<double, 0, int> >::InnerIterator::InnerIterator 29819917
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::internal::unary_evaluator<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::internal::IteratorBased, double>::InnerIterator::InnerIterator;Eigen::SparseCompressedBase<Eigen::SparseMatrix<double, 0, int> >::InnerIterator::InnerIterator;Eigen::SparseCompressedBase<Eigen::SparseMatrix<double, 0, int> >::isCompressed;Eigen::SparseCompressedBase<Eigen::SparseMatrix<double, 0, int> >::innerNonZeroPtr;Eigen::SparseMatrixBase<Eigen::SparseMatrix<double, 0, int> >::derived 27961415
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::internal::unary_evaluator<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::internal::IteratorBased, double>::InnerIterator::InnerIterator;Eigen::SparseCompressedBase<Eigen::SparseMatrix<double, 0, int> >::InnerIterator::InnerIterator;Eigen::SparseCompressedBase<Eigen::SparseMatrix<double, 0, int> >::valuePtr;Eigen::SparseMatrix<double, 0, int>::valuePtr;Eigen::internal::CompressedStorage<double, int>::valuePtr 31512182
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> > 658977816
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];scheduler_tick_[k];perf_event_task_tick_[k];perf_adjust_freq_unthr_context_[k] 28531504
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;mock_transfer 50351314
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;[unknown];[unknown];[unknown];GOMP_parallel;Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process 53516150
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;[unknown];[unknown];[unknown];GOMP_parallel;Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;MC::double_unfiform;MC::uniform_double_rand;double std::uniform_real_distribution<double>::operator;double std::uniform_real_distribution<double>::operator;std::__detail::_Adaptor<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>, double>::operator 25198735
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;[unknown];[unknown];[unknown];GOMP_parallel;Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;MC::double_unfiform;MC::uniform_double_rand;double std::uniform_real_distribution<double>::operator;double std::uniform_real_distribution<double>::operator;std::__detail::_Adaptor<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>, double>::operator;double std::generate_canonical<double, 53ul, std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> > 58533953
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;[unknown];[unknown];[unknown];GOMP_parallel;Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;MC::double_unfiform;MC::uniform_double_rand;double std::uniform_real_distribution<double>::operator;double std::uniform_real_distribution<double>::operator;std::__detail::_Adaptor<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>, double>::operator;double std::generate_canonical<double, 53ul, std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >;std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::operator 25571100
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;[unknown];[unknown];[unknown];GOMP_parallel;Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;contribution_simple_model 57520864
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;[unknown];[unknown];[unknown];GOMP_parallel;Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;contribution_simple_model;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::coeffRef;Eigen::DenseStorage<double, -1, -1, -1, 0>::rows 28985945
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;[unknown];[unknown];[unknown];GOMP_parallel;Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;contribution_simple_model;double const& std::max<double> 28436350
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;[unknown];[unknown];[unknown];GOMP_parallel;Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;double&& std::forward<double> 28822508
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;[unknown];[unknown];[unknown];GOMP_parallel;Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;std::function<void ;double&& std::forward<double> 29319206
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;[unknown];[unknown];[unknown];GOMP_parallel;Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;std::function<void ;std::_Function_handler<void ;double&& std::forward<double> 22482901
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;[unknown];[unknown];[unknown];GOMP_parallel;Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;std::function<void ;std::_Function_handler<void ;std::enable_if<is_invocable_r_v<void, Simulation::pbf;void std::__invoke_impl<void, Simulation::pbf;Simulation::pbf 27502337
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;[unknown];[unknown];[unknown];GOMP_parallel;Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;std::function<void ;std::_Function_handler<void ;std::enable_if<is_invocable_r_v<void, Simulation::pbf;void std::__invoke_impl<void, Simulation::pbf;Simulation::pbf;Eigen::SparseMatrix<double, 0, int>::coeff;Eigen::internal::CompressedStorage<double, int>::atInRange 29822418
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;[unknown];[unknown];[unknown];GOMP_parallel;Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;std::function<void ;std::_Function_handler<void ;std::enable_if<is_invocable_r_v<void, Simulation::pbf;void std::__invoke_impl<void, Simulation::pbf;Simulation::pbf;Eigen::SparseMatrix<double, 0, int>::coeff;Eigen::internal::CompressedStorage<double, int>::atInRange;Eigen::internal::CompressedStorage<double, int>::searchLowerIndex;int* std::lower_bound<int*, long>;int* std::__lower_bound<int*, long, __gnu_cxx::__ops::_Iter_less_val> 134207977
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;[unknown];[unknown];[unknown];GOMP_parallel;Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;std::function<void ;std::_Function_handler<void ;std::enable_if<is_invocable_r_v<void, Simulation::pbf;void std::__invoke_impl<void, Simulation::pbf;Simulation::pbf;Eigen::SparseMatrix<double, 0, int>::coeff;Eigen::internal::CompressedStorage<double, int>::atInRange;Eigen::internal::CompressedStorage<double, int>::searchLowerIndex;int* std::lower_bound<int*, long>;int* std::__lower_bound<int*, long, __gnu_cxx::__ops::_Iter_less_val>;bool __gnu_cxx::__ops::_Iter_less_val::operator 84369768
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;[unknown];[unknown];[unknown];GOMP_parallel;Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;std::function<void ;std::_Function_handler<void ;std::enable_if<is_invocable_r_v<void, Simulation::pbf;void std::__invoke_impl<void, Simulation::pbf;Simulation::pbf;Eigen::SparseMatrix<double, 0, int>::coeff;Eigen::internal::CompressedStorage<double, int>::atInRange;Eigen::internal::CompressedStorage<double, int>::searchLowerIndex;int* std::lower_bound<int*, long>;int* std::__lower_bound<int*, long, __gnu_cxx::__ops::_Iter_less_val>;std::iterator_traits<int*>::difference_type std::distance<int*> 27435224
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;[unknown];[unknown];[unknown];GOMP_parallel;Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;std::function<void ;std::_Function_handler<void ;std::enable_if<is_invocable_r_v<void, Simulation::pbf;void std::__invoke_impl<void, Simulation::pbf;Simulation::pbf;Eigen::SparseMatrix<double, 0, int>::coeff;Eigen::internal::CompressedStorage<double, int>::atInRange;Eigen::internal::CompressedStorage<double, int>::searchLowerIndex;int* std::lower_bound<int*, long>;int* std::__lower_bound<int*, long, __gnu_cxx::__ops::_Iter_less_val>;void std::advance<int*, long>;void std::__advance<int*, long> 31692619
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;[unknown];[unknown];[unknown];GOMP_parallel;Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;std::function<void ;std::_Function_handler<void ;std::enable_if<is_invocable_r_v<void, Simulation::pbf;void std::__invoke_impl<void, Simulation::pbf;Simulation::pbf;Eigen::SparseMatrix<double, 0, int>::coeff;Eigen::internal::CompressedStorage<double, int>::atInRange;Eigen::internal::CompressedStorage<double, int>::searchLowerIndex;std::iterator_traits<int*>::iterator_category std::__iterator_category<int*> 27886911
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;[unknown];[unknown];[unknown];GOMP_parallel;Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;std::function<void ;std::_Function_handler<void ;std::enable_if<is_invocable_r_v<void, Simulation::pbf;void std::__invoke_impl<void, Simulation::pbf;Simulation::pbf;std::vector<unsigned long, std::allocator<unsigned long> >::size 560124725
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;[unknown];[unknown];[unknown];GOMP_parallel;Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;std::function<void ;std::_Function_handler<void ;std::enable_if<is_invocable_r_v<void, Simulation::pbf;void std::__invoke_impl<void, Simulation::pbf;double&& std::forward<double> 27146971
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;[unknown];[unknown];[unknown];GOMP_parallel;Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;std::vector<Eigen::Matrix<double, -1, -1, 0, -1, -1>, std::allocator<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::operator[] 25203611
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;[unknown];[unknown];[unknown];GOMP_parallel;Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model 27790209
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;[unknown];[unknown];[unknown];GOMP_parallel;Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;SimpleModel::step;SimpleModel::Xi::operator*;SimpleModel::Xi::Xi 26995143
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;[unknown];[unknown];[unknown];GOMP_parallel;Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;SimpleModel::step;std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::operator*;std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::get 55785513
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;[unknown];[unknown];[unknown];GOMP_parallel;Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;SimpleModel::step;std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::operator*;std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::get;std::__uniq_ptr_impl<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::_M_ptr;std::tuple_element<0ul, std::tuple<SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> > >::type const& std::get<0ul, SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> >;SimpleModel::Xi* const& std::__get_helper<0ul, SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> >;std::_Tuple_impl<0ul, SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> >::_M_head;std::_Head_base<0ul, SimpleModel::Xi*, false>::_M_head 25324153
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;[unknown];[unknown];[unknown];GOMP_parallel;Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;std::__shared_ptr_access<SimpleModel, ;_[i];std::__shared_ptr_access<SimpleModel,  30285101
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;[unknown];[unknown];[unknown];GOMP_parallel;Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::get 29693782
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;[unknown];[unknown];[unknown];GOMP_parallel;Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::operator;_[i] 29402733
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;[unknown];[unknown];[unknown];GOMP_parallel;Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::operator;_[i];std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::get;std::__uniq_ptr_impl<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::_M_ptr;std::tuple_element<0ul, std::tuple<SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> > >::type const& std::get<0ul, SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> >;SimpleModel::Xi* const& std::__get_helper<0ul, SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> > 29191469
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;[unknown];[unknown];[unknown];GOMP_parallel;Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;update_xi_dot 25896233
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;[unknown];[unknown];[unknown];GOMP_parallel;Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;update_xi_dot;std::__shared_ptr_access<SimpleModel, ;_[i];std::__shared_ptr_access<SimpleModel, ;std::__shared_ptr<SimpleModel,  26813891
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;[unknown];[unknown];[unknown];GOMP_parallel;Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;update_xi_dot;std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::operator;_[i];std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::get;std::__uniq_ptr_impl<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::_M_ptr;std::tuple_element<0ul, std::tuple<SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> > >::type const& std::get<0ul, SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> >;SimpleModel::Xi* const& std::__get_helper<0ul, SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> > 27096174
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;[unknown];[unknown];[unknown];GOMP_parallel;Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;update_xi_dot;std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::operator;_[i];std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::get;std::__uniq_ptr_impl<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::_M_ptr;std::tuple_element<0ul, std::tuple<SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> > >::type const& std::get<0ul, SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> >;SimpleModel::Xi* const& std::__get_helper<0ul, SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> >;std::_Tuple_impl<0ul, SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> >::_M_head 23582329
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;[unknown];[unknown];[unknown];GOMP_parallel;Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;update_xi_dot;std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::operator;_[i];std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::get;std::__uniq_ptr_impl<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::_M_ptr;std::tuple_element<0ul, std::tuple<SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> > >::type const& std::get<0ul, SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> >;SimpleModel::Xi* const& std::__get_helper<0ul, SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> >;std::_Tuple_impl<0ul, SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> >::_M_head;std::_Head_base<0ul, SimpleModel::Xi*, false>::_M_head 30022099
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;[unknown];[unknown];[unknown];GOMP_parallel;Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_glucose 24870222
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;[unknown];[unknown];[unknown];GOMP_parallel;Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_glucose;naive_newton 84841771
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;[unknown];[unknown];[unknown];GOMP_parallel;Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_glucose;naive_newton;naive_newton;std::function<double ;std::_Function_handler<double ;std::enable_if<is_invocable_r_v<double, uptake_glucose;double std::__invoke_impl<double, uptake_glucose;double&& std::forward<double> 28104764
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;[unknown];[unknown];[unknown];GOMP_parallel;Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_glucose;naive_newton;naive_newton;std::function<double ;std::_Function_handler<double ;std::enable_if<is_invocable_r_v<double, uptake_glucose;double std::__invoke_impl<double, uptake_glucose;uptake_glucose 57256564
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;[unknown];[unknown];[unknown];GOMP_parallel;Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_glucose;naive_newton;naive_newton;std::function<double ;std::_Function_handler<double ;std::enable_if<is_invocable_r_v<double, uptake_glucose;double std::__invoke_impl<double, uptake_glucose;uptake_glucose;phi_permease 24349322
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;[unknown];[unknown];[unknown];GOMP_parallel;Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_glucose;naive_newton;naive_newton;std::function<double ;std::_Function_handler<double ;std::enable_if<is_invocable_r_v<double, uptake_glucose;double std::__invoke_impl<double, uptake_glucose;uptake_glucose;phi_permease;std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::operator;_[i] 30213904
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;[unknown];[unknown];[unknown];GOMP_parallel;Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_glucose;naive_newton;naive_newton;std::function<double ;std::_Function_handler<double ;std::enable_if<is_invocable_r_v<double, uptake_glucose;double std::__invoke_impl<double, uptake_glucose;uptake_glucose;phi_permease;std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::operator;_[i];std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::get 27086853
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;[unknown];[unknown];[unknown];GOMP_parallel;Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_glucose;naive_newton;naive_newton;std::function<double ;std::_Function_handler<double ;std::enable_if<is_invocable_r_v<double, uptake_glucose;double std::__invoke_impl<double, uptake_glucose;uptake_glucose;phi_permease;std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::operator;_[i];std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::get;std::__uniq_ptr_impl<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::_M_ptr 29759679
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;[unknown];[unknown];[unknown];GOMP_parallel;Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_glucose;naive_newton;naive_newton;std::function<double ;std::_Function_handler<double ;std::enable_if<is_invocable_r_v<double, uptake_glucose;double std::__invoke_impl<double, uptake_glucose;uptake_glucose;phi_permease;std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::operator;_[i];std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::get;std::__uniq_ptr_impl<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::_M_ptr;std::tuple_element<0ul, std::tuple<SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> > >::type const& std::get<0ul, SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> > 30680347
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;[unknown];[unknown];[unknown];GOMP_parallel;Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_glucose;naive_newton;naive_newton;std::function<double ;std::_Function_handler<double ;std::enable_if<is_invocable_r_v<double, uptake_glucose;double std::__invoke_impl<double, uptake_glucose;uptake_glucose;phi_permease;std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::operator;_[i];std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::get;std::__uniq_ptr_impl<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::_M_ptr;std::tuple_element<0ul, std::tuple<SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> > >::type const& std::get<0ul, SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> >;SimpleModel::Xi* const& std::__get_helper<0ul, SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> >;std::_Tuple_impl<0ul, SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> >::_M_head;std::_Head_base<0ul, SimpleModel::Xi*, false>::_M_head 29326426
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;[unknown];[unknown];[unknown];GOMP_parallel;Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_glucose;naive_newton;naive_newton;std::function<double ;std::_Function_handler<double ;std::enable_if<is_invocable_r_v<double, uptake_glucose;double std::__invoke_impl<double, uptake_glucose;uptake_glucose;phi_pts 476886655
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;[unknown];[unknown];[unknown];GOMP_parallel;Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_glucose;naive_newton;naive_newton;std::function<double ;std::_Function_handler<double ;std::enable_if<is_invocable_r_v<double, uptake_glucose;double std::__invoke_impl<double, uptake_glucose;uptake_glucose;std::abs 29359642
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;[unknown];[unknown];[unknown];GOMP_parallel;Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_glucose;naive_newton;std::_Function_handler<double  22885588
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;[unknown];[unknown];[unknown];GOMP_parallel;Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_glucose;naive_newton;std::function<double  59166229
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;[unknown];[unknown];[unknown];GOMP_parallel;Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_glucose;naive_newton;std::function<double ;std::_Function_handler<double ;double&& std::forward<double> 28200168
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;[unknown];[unknown];[unknown];GOMP_parallel;Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_glucose;naive_newton;std::function<double ;std::_Function_handler<double ;std::enable_if<is_invocable_r_v<double, uptake_glucose;double std::__invoke_impl<double, uptake_glucose;uptake_glucose;phi_permease;std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::operator;_[i];std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::get;std::__uniq_ptr_impl<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::_M_ptr 28055616
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;[unknown];[unknown];[unknown];GOMP_parallel;Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_glucose;naive_newton;std::function<double ;std::_Function_handler<double ;std::enable_if<is_invocable_r_v<double, uptake_glucose;double std::__invoke_impl<double, uptake_glucose;uptake_glucose;phi_permease;std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::operator;_[i];std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::get;std::__uniq_ptr_impl<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::_M_ptr;std::tuple_element<0ul, std::tuple<SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> > >::type const& std::get<0ul, SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> >;SimpleModel::Xi* const& std::__get_helper<0ul, SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> > 32178692
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;[unknown];[unknown];[unknown];GOMP_parallel;Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_glucose;naive_newton;std::function<double ;std::_Function_handler<double ;std::enable_if<is_invocable_r_v<double, uptake_glucose;double std::__invoke_impl<double, uptake_glucose;uptake_glucose;phi_pts 30051610
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;[unknown];[unknown];[unknown];GOMP_parallel;Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_glucose;std::_Function_base::_Function_base 25151382
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;[unknown];[unknown];[unknown];GOMP_parallel;Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_o2 20354866
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;[unknown];[unknown];[unknown];GOMP_parallel;Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_o2;naive_newton 32303041
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;[unknown];[unknown];[unknown];GOMP_parallel;Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_o2;naive_newton;naive_newton;std::_Function_handler<double  25857693
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;[unknown];[unknown];[unknown];GOMP_parallel;Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_o2;naive_newton;naive_newton;std::function<double ;std::_Function_handler<double ;std::enable_if<is_invocable_r_v<double, uptake_o2;double std::__invoke_impl<double, uptake_o2;uptake_o2 60000733
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;[unknown];[unknown];[unknown];GOMP_parallel;Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_o2;naive_newton;naive_newton;std::function<double ;std::_Function_handler<double ;std::enable_if<is_invocable_r_v<double, uptake_o2;double std::__invoke_impl<double, uptake_o2;uptake_o2;std::__shared_ptr_access<SimpleModel, ;_[i];std::__shared_ptr_access<SimpleModel, ;std::__shared_ptr<SimpleModel,  29830514
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;[unknown];[unknown];[unknown];GOMP_parallel;Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_o2;naive_newton;naive_newton;std::function<double ;std::_Function_handler<double ;std::enable_if<is_invocable_r_v<double, uptake_o2;double std::__invoke_impl<double, uptake_o2;uptake_o2;std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::operator;_[i] 29545245
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;[unknown];[unknown];[unknown];GOMP_parallel;Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_o2;naive_newton;naive_newton;std::function<double ;std::_Function_handler<double ;std::enable_if<is_invocable_r_v<double, uptake_o2;double std::__invoke_impl<double, uptake_o2;uptake_o2;std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::operator;_[i];std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::get;std::__uniq_ptr_impl<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::_M_ptr;std::tuple_element<0ul, std::tuple<SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> > >::type const& std::get<0ul, SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> >;SimpleModel::Xi* const& std::__get_helper<0ul, SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> >;std::_Tuple_impl<0ul, SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> >::_M_head 24091399
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;[unknown];[unknown];[unknown];GOMP_parallel;Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_o2;naive_newton;std::abs 28947518
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;[unknown];[unknown];[unknown];GOMP_parallel;Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_o2;naive_newton;std::function<double ;std::_Function_base::_M_empty 27353130
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;[unknown];[unknown];[unknown];GOMP_parallel;Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_o2;naive_newton;std::function<double ;std::_Function_handler<double  25681059
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;[unknown];[unknown];[unknown];GOMP_parallel;Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_o2;naive_newton;std::function<double ;std::_Function_handler<double ;std::enable_if<is_invocable_r_v<double, uptake_o2;double std::__invoke_impl<double, uptake_o2 24331039
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;[unknown];[unknown];[unknown];GOMP_parallel;Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_o2;naive_newton;std::function<double ;std::_Function_handler<double ;std::enable_if<is_invocable_r_v<double, uptake_o2;double std::__invoke_impl<double, uptake_o2;uptake_o2;std::abs 25324248
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;[unknown];[unknown];[unknown];GOMP_parallel;Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_o2;naive_newton;std::function<double ;std::_Function_handler<double ;std::enable_if<is_invocable_r_v<double, uptake_o2;double std::__invoke_impl<double, uptake_o2;uptake_o2;std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::operator;_[i];std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::get 27072752
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;[unknown];[unknown];[unknown];GOMP_parallel;Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_o2;naive_newton;std::function<double ;std::_Function_handler<double ;std::enable_if<is_invocable_r_v<double, uptake_o2;double std::__invoke_impl<double, uptake_o2;uptake_o2;std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::operator;_[i];std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::get;std::__uniq_ptr_impl<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::_M_ptr;std::tuple_element<0ul, std::tuple<SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> > >::type const& std::get<0ul, SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> >;SimpleModel::Xi* const& std::__get_helper<0ul, SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> > 28157483
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;[unknown];[unknown];[unknown];GOMP_parallel;Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_o2;std::function<double ;std::_Function_base::~_Function_base;std::_Function_handler<double ;std::_Function_base::_Base_manager<uptake_o2 28842139
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;[unknown];[unknown];[unknown];GOMP_parallel;Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_o2;std::function<double ;std::_Function_base::~_Function_base;std::_Function_handler<double ;std::_Function_base::_Base_manager<uptake_o2;std::_Function_base::_Base_manager<uptake_o2;uptake_o2;std::_Any_data::_M_access 27920532
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;[unknown];[unknown];[unknown];GOMP_parallel;Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_o2;std::function<double ;void std::_Function_base::_Base_manager<uptake_o2;operator new 29725089
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;[unknown];[unknown];[unknown];GOMP_parallel;Simulation::SimulationUnit::cycle_process;auto Simulation::SimulationUnit::cycle_process;update_simple_model;uptake_o2;std::function<double ;void std::_Function_base::_Base_manager<uptake_o2;void std::_Function_base::_Base_manager<uptake_o2;uptake_o2 28966550
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;[unknown];[unknown];[unknown];GOMP_parallel;[libgomp.so.1.0.0];entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_futex_[k];do_futex_[k];futex_wake_[k];wake_q_add_safe_[k] 29439623
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;[unknown];[unknown];[unknown];GOMP_parallel;[libgomp.so.1.0.0];entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_futex_[k];do_futex_[k];futex_wake_[k];wake_up_q_[k];try_to_wake_up_[k];_raw_spin_lock_irqsave_[k];__raw_spin_lock_irqsave_[k] 29233656
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;[unknown];[unknown];[unknown];GOMP_parallel;[libgomp.so.1.0.0];entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_exit_to_user_mode_[k];exit_to_user_mode_prepare_[k];exit_to_user_mode_loop_[k];schedule_[k];__schedule_[k];asm_sysvec_call_function_single_[k] 2883093
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;[unknown];[unknown];[unknown];GOMP_parallel;[libgomp.so.1.0.0];entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_exit_to_user_mode_[k];exit_to_user_mode_prepare_[k];exit_to_user_mode_loop_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];__perf_event_task_sched_in_[k] 3567297
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;[unknown];[unknown];[unknown];GOMP_parallel;[libgomp.so.1.0.0];entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_exit_to_user_mode_[k];exit_to_user_mode_prepare_[k];exit_to_user_mode_loop_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];_raw_spin_unlock_[k] 15625
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;[unknown];[unknown];[unknown];GOMP_parallel;[libgomp.so.1.0.0];entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_exit_to_user_mode_[k];exit_to_user_mode_prepare_[k];exit_to_user_mode_loop_[k];schedule_[k];__schedule_[k];prepare_task_switch_[k];__perf_event_task_sched_out_[k];perf_event_context_sched_out_[k];perf_ctx_disable_[k];x86_pmu_disable_[k];amd_pmu_disable_all_[k];native_write_msr_[k] 28405169
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;[unknown];[unknown];[unknown];GOMP_parallel;__gnu_cxx::__normal_iterator<MC::Particles*, std::vector<MC::Particles, std::allocator<MC::Particles> > >::operator+= 27412216
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;sync_step;Eigen::DenseBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::setZero;Eigen::DenseBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::setConstant;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::Matrix<double, -1, -1, 0, -1, -1>::operator=<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> > >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> > >;void Eigen::internal::call_assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> > >;void Eigen::internal::call_assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;double* std::fill_n<double*, long, double>;double* std::__fill_n_a<double*, long, double>;void std::__fill_a<double*, double>;__gnu_cxx::__enable_if<std::__is_scalar<double>::__value, void>::__type std::__fill_a1<double*, double> 25902790
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;sync_step;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::MatrixBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::operator+=<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> > >;void Eigen::internal::call_assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;void Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::add_assign_op<double, double>, 0>::assignPacket<16, 0, double __vector;double __vector;double __vector 26868352
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;sync_step;Eigen::Matrix<double, -1, -1, 0, -1, -1>::operator=;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::call_assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::call_assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::internal::assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::internal::assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::assign_op<double, double>, 0>, 3, 0>::run;void Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::assign_op<double, double>, 0>::assignPacket<16, 16, double __vector;void Eigen::internal::assign_op<double, double>::assignPacket<16, double __vector;void Eigen::internal::pstore<double, double __vector 29588180
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;update_flow;MC::ReactorDomain::setLiquidNeighbors;std::vector<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > >::operator=;std::vector<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > >::_M_move_assign;std::vector<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > >::~vector;void std::_Destroy<std::vector<unsigned long, std::allocator<unsigned long> >*, std::vector<unsigned long, std::allocator<unsigned long> > >;void std::_Destroy<std::vector<unsigned long, std::allocator<unsigned long> >*>;void std::_Destroy_aux<false>::__destroy<std::vector<unsigned long, std::allocator<unsigned long> >*>;void std::destroy_at<std::vector<unsigned long, std::allocator<unsigned long> > > 32463627
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;update_flow;Simulation::MatFlow::MatFlow;Eigen::SparseMatrix<double, 0, int>::operator=;Eigen::internal::CompressedStorage<double, int>::operator=;void Eigen::internal::smart_copy<double>;__memmove_avx_unaligned_erms 255668573
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;update_flow;Simulation::MatFlow::MatFlow;Eigen::SparseMatrix<double, 0, int>::operator=;Eigen::internal::CompressedStorage<double, int>::operator=;void Eigen::internal::smart_copy<int>;__memmove_avx_unaligned_erms 371465372
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;update_flow;std::vector<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > >::vector;std::vector<unsigned long, std::allocator<unsigned long> >* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<std::vector<unsigned long, std::allocator<unsigned long> > const*, std::vector<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > > >, std::vector<unsigned long, std::allocator<unsigned long> >*, std::vector<unsigned long, std::allocator<unsigned long> > >;std::vector<unsigned long, std::allocator<unsigned long> >* std::uninitialized_copy<__gnu_cxx::__normal_iterator<std::vector<unsigned long, std::allocator<unsigned long> > const*, std::vector<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > > >, std::vector<unsigned long, std::allocator<unsigned long> >*>;std::vector<unsigned long, std::allocator<unsigned long> >* std::__addressof<std::vector<unsigned long, std::allocator<unsigned long> > > 31059967
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;update_flow;std::vector<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > >::vector;std::vector<unsigned long, std::allocator<unsigned long> >* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<std::vector<unsigned long, std::allocator<unsigned long> > const*, std::vector<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > > >, std::vector<unsigned long, std::allocator<unsigned long> >*, std::vector<unsigned long, std::allocator<unsigned long> > >;std::vector<unsigned long, std::allocator<unsigned long> >* std::uninitialized_copy<__gnu_cxx::__normal_iterator<std::vector<unsigned long, std::allocator<unsigned long> > const*, std::vector<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > > >, std::vector<unsigned long, std::allocator<unsigned long> >*>;std::vector<unsigned long, std::allocator<unsigned long> >* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<std::vector<unsigned long, std::allocator<unsigned long> > const*, std::vector<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > > >, std::vector<unsigned long, std::allocator<unsigned long> >*>;void std::_Construct<std::vector<unsigned long, std::allocator<unsigned long> >, std::vector<unsigned long, std::allocator<unsigned long> > const&>;std::vector<unsigned long, std::allocator<unsigned long> >::vector;std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_M_get_Tp_allocator 64036117
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;update_flow;std::vector<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > >::vector;std::vector<unsigned long, std::allocator<unsigned long> >* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<std::vector<unsigned long, std::allocator<unsigned long> > const*, std::vector<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > > >, std::vector<unsigned long, std::allocator<unsigned long> >*, std::vector<unsigned long, std::allocator<unsigned long> > >;std::vector<unsigned long, std::allocator<unsigned long> >* std::uninitialized_copy<__gnu_cxx::__normal_iterator<std::vector<unsigned long, std::allocator<unsigned long> > const*, std::vector<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > > >, std::vector<unsigned long, std::allocator<unsigned long> >*>;std::vector<unsigned long, std::allocator<unsigned long> >* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<std::vector<unsigned long, std::allocator<unsigned long> > const*, std::vector<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > > >, std::vector<unsigned long, std::allocator<unsigned long> >*>;void std::_Construct<std::vector<unsigned long, std::allocator<unsigned long> >, std::vector<unsigned long, std::allocator<unsigned long> > const&>;std::vector<unsigned long, std::allocator<unsigned long> >::vector;std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_Vector_base;std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_M_create_storage;std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_M_allocate;__gnu_cxx::new_allocator<unsigned long>::allocate 30435764
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;update_flow;std::vector<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > >::vector;std::vector<unsigned long, std::allocator<unsigned long> >* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<std::vector<unsigned long, std::allocator<unsigned long> > const*, std::vector<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > > >, std::vector<unsigned long, std::allocator<unsigned long> >*, std::vector<unsigned long, std::allocator<unsigned long> > >;std::vector<unsigned long, std::allocator<unsigned long> >* std::uninitialized_copy<__gnu_cxx::__normal_iterator<std::vector<unsigned long, std::allocator<unsigned long> > const*, std::vector<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > > >, std::vector<unsigned long, std::allocator<unsigned long> >*>;std::vector<unsigned long, std::allocator<unsigned long> >* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<std::vector<unsigned long, std::allocator<unsigned long> > const*, std::vector<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > > >, std::vector<unsigned long, std::allocator<unsigned long> >*>;void std::_Construct<std::vector<unsigned long, std::allocator<unsigned long> >, std::vector<unsigned long, std::allocator<unsigned long> > const&>;std::vector<unsigned long, std::allocator<unsigned long> >::vector;unsigned long* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<unsigned long const*, std::vector<unsigned long, std::allocator<unsigned long> > >, unsigned long*, unsigned long>;unsigned long* std::uninitialized_copy<__gnu_cxx::__normal_iterator<unsigned long const*, std::vector<unsigned long, std::allocator<unsigned long> > >, unsigned long*>;unsigned long* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<unsigned long const*, std::vector<unsigned long, std::allocator<unsigned long> > >, unsigned long*>;unsigned long* std::copy<__gnu_cxx::__normal_iterator<unsigned long const*, std::vector<unsigned long, std::allocator<unsigned long> > >, unsigned long*>;unsigned long* std::__copy_move_a<false, __gnu_cxx::__normal_iterator<unsigned long const*, std::vector<unsigned long, std::allocator<unsigned long> > >, unsigned long*>;unsigned long* std::__copy_move_a1<false, unsigned long const*, unsigned long*>;unsigned long* std::__copy_move_a2<false, unsigned long const*, unsigned long*>;__memmove_avx_unaligned_erms 31668928
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;sync_prepare_next 31659238
BioCMA-MCST_cli;__poll;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_poll_[k];do_sys_poll_[k] 7281453
BioCMA-MCST_cli;__poll;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_poll_[k];do_sys_poll_[k];do_poll.constprop.0_[k];schedule_hrtimeout_range_[k];schedule_hrtimeout_range_clock_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k] 29961
BioCMA-MCST_cli;__sched_yield 161090933
BioCMA-MCST_cli;__sched_yield;asm_sysvec_apic_timer_interrupt_[k] 32534321
BioCMA-MCST_cli;__sched_yield;asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];irq_exit_rcu_[k];__irq_exit_rcu_[k];__do_softirq_[k];rcu_core_si_[k];rcu_core_[k] 19432569
BioCMA-MCST_cli;__sched_yield;entry_SYSCALL_64_[k] 116382658
BioCMA-MCST_cli;__sched_yield;entry_SYSCALL_64_after_hwframe_[k] 62589383
BioCMA-MCST_cli;__sched_yield;entry_SYSCALL_64_after_hwframe_[k];__x64_sys_sched_yield_[k] 82906047
BioCMA-MCST_cli;__sched_yield;entry_SYSCALL_64_after_hwframe_[k];__x86_indirect_thunk_rax_[k] 30184758
BioCMA-MCST_cli;__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k] 106789828
BioCMA-MCST_cli;__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k] 91995126
BioCMA-MCST_cli;__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k] 167573801
BioCMA-MCST_cli;__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];_raw_spin_lock_[k] 87171201
BioCMA-MCST_cli;__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k] 33071327
BioCMA-MCST_cli;__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k] 248939402
BioCMA-MCST_cli;__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];_raw_spin_lock_[k] 31134973
BioCMA-MCST_cli;__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];check_cfs_rq_runtime_[k] 26144516
BioCMA-MCST_cli;__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];pick_next_task_fair_[k] 342051598
BioCMA-MCST_cli;__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];pick_next_task_fair_[k];cpuacct_charge_[k] 31753876
BioCMA-MCST_cli;__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];pick_next_task_fair_[k];pick_next_entity_[k] 28365201
BioCMA-MCST_cli;__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];pick_next_task_fair_[k];set_next_entity_[k];update_load_avg_[k];__update_load_avg_se_[k] 27895588
BioCMA-MCST_cli;__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];pick_next_task_fair_[k];srso_safe_ret_[k] 27055411
BioCMA-MCST_cli;__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];pick_next_task_fair_[k];update_curr_[k] 384486096
BioCMA-MCST_cli;__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];pick_next_task_fair_[k];update_curr_[k];__calc_delta_[k] 55728996
BioCMA-MCST_cli;__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];pick_next_task_fair_[k];update_curr_[k];__cgroup_account_cputime_[k] 31315640
BioCMA-MCST_cli;__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];pick_next_task_fair_[k];update_curr_[k];__cgroup_account_cputime_[k];cgroup_rstat_updated_[k] 33092165
BioCMA-MCST_cli;__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];pick_next_task_fair_[k];update_curr_[k];cpuacct_charge_[k] 29717013
BioCMA-MCST_cli;__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];srso_safe_ret_[k] 28311365
BioCMA-MCST_cli;__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_fair_[k] 32158478
BioCMA-MCST_cli;__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];prepare_task_switch_[k];__perf_event_task_sched_out_[k];perf_event_context_sched_out_[k];perf_ctx_disable_[k];x86_pmu_disable_[k];amd_pmu_disable_all_[k];srso_safe_ret_[k] 19069936
BioCMA-MCST_cli;__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];raw_spin_rq_lock_nested_[k] 21239770
BioCMA-MCST_cli;__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];rcu_note_context_switch_[k] 62238938
BioCMA-MCST_cli;__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];update_rq_clock_[k];sched_clock_cpu_[k] 54908043
BioCMA-MCST_cli;__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];update_rq_clock_[k];sched_clock_cpu_[k];sched_clock_[k];sched_clock_noinstr_[k];native_sched_clock_[k] 91701991
BioCMA-MCST_cli;__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];raw_spin_rq_lock_nested_[k] 26167838
BioCMA-MCST_cli;__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];raw_spin_rq_unlock_[k] 33514244
BioCMA-MCST_cli;__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];srso_safe_ret_[k] 31844959
BioCMA-MCST_cli;__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];update_rq_clock_[k] 32509056
BioCMA-MCST_cli;__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];yield_task_fair_[k] 28507018
BioCMA-MCST_cli;__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];yield_task_fair_[k];update_rq_clock_[k];sched_clock_cpu_[k];sched_clock_[k];sched_clock_noinstr_[k];native_sched_clock_[k] 80781505
BioCMA-MCST_cli;__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];raw_spin_rq_unlock_[k] 92452290
BioCMA-MCST_cli;__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];srso_safe_ret_[k] 60691067
BioCMA-MCST_cli;__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];do_sched_yield_[k] 88260886
BioCMA-MCST_cli;__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_enter_from_user_mode_[k] 58310470
BioCMA-MCST_cli;__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_exit_to_user_mode_[k] 32167724
BioCMA-MCST_cli;__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_exit_to_user_mode_[k];exit_to_user_mode_prepare_[k] 106890441
BioCMA-MCST_cli;__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_exit_to_user_mode_[k];srso_safe_ret_[k] 28133513
BioCMA-MCST_cli;__sched_yield;entry_SYSCALL_64_after_hwframe_[k];syscall_enter_from_user_mode_[k] 59254590
BioCMA-MCST_cli;__sched_yield;entry_SYSCALL_64_safe_stack_[k] 64100925
BioCMA-MCST_cli;__sched_yield;entry_untrain_ret_[k] 80586071
BioCMA-MCST_cli;__sched_yield;srso_safe_ret_[k] 242911990
BioCMA-MCST_cli;__sched_yield;syscall_return_via_sysret_[k] 32301009
BioCMA-MCST_cli;_int_malloc 26715994
BioCMA-MCST_cli;cfree@GLIBC_2.2.5 29652361
BioCMA-MCST_cli;dgemm_itcopy_ZEN 11948729
BioCMA-MCST_cli;dgemm_kernel_ZEN 474340502
BioCMA-MCST_cli;exec_blas_async_wait 28173515
BioCMA-MCST_cli;malloc 96625461
BioCMA-MCST_cli;malloc_consolidate 31521840
BioCMA-MCST_cli;pthread_cond_signal@@GLIBC_2.3.2;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_futex_[k];do_futex_[k];futex_wake_[k];wake_up_q_[k];try_to_wake_up_[k];select_task_rq_fair_[k];select_idle_sibling_[k];select_idle_cpu_[k];select_idle_core_[k] 31166181
