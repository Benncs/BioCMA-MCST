BioCMA-MCST_cli;[libopenblasp-r0.3.20.so] 89279358
BioCMA-MCST_cli;[unknown];Eigen::internal::evaluator<Eigen::SparseCompressedBase<Eigen::SparseMatrix<double, 0, int> > >::evaluator;Eigen::internal::evaluator<Eigen::SparseMatrix<double, 0, int> const>::evaluator;[unknown];Eigen::DenseStorage<double, -1, -1, -1, 0>::rows;asm_sysvec_apic_timer_interrupt_[k] 31245268
BioCMA-MCST_cli;[unknown];Eigen::internal::evaluator<Eigen::SparseCompressedBase<Eigen::SparseMatrix<double, 0, int> > >::evaluator;Eigen::internal::evaluator<Eigen::SparseMatrix<double, 0, int> const>::evaluator;[unknown];[unknown];Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::evaluator;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;double __vector;asm_sysvec_apic_timer_interrupt_[k] 32746222
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0] 26213047334
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_futex_[k] 5814655
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_futex_[k];do_futex_[k];futex_wait_[k];futex_wait_queue_[k];schedule_[k] 53062
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_futex_[k];do_futex_[k];futex_wait_[k];futex_wait_queue_[k];schedule_[k];__schedule_[k] 205754
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_futex_[k];do_futex_[k];futex_wait_[k];futex_wait_queue_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k] 25856400
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_futex_[k];do_futex_[k];futex_wait_[k];futex_wait_queue_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];__perf_event_task_sched_in_[k] 4162417
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_futex_[k];do_futex_[k];futex_wait_[k];futex_wait_queue_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];__perf_event_task_sched_in_[k];perf_ctx_enable_[k];x86_pmu_enable_[k] 2323537
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_futex_[k];do_futex_[k];futex_wait_[k];futex_wait_queue_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];__perf_event_task_sched_in_[k];perf_ctx_enable_[k];x86_pmu_enable_[k];amd_pmu_enable_all_[k];native_write_msr_[k] 3963134
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_futex_[k];do_futex_[k];futex_wait_[k];futex_wait_queue_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];__perf_event_task_sched_in_[k];perf_ctx_enable_[k];x86_pmu_enable_[k];amd_pmu_enable_all_[k];x86_pmu_enable_event_[k] 3796016
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_futex_[k];do_futex_[k];futex_wait_[k];futex_wait_queue_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];__rcu_read_unlock_[k] 21432225
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_futex_[k];do_futex_[k];futex_wait_[k];futex_wait_queue_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];_raw_spin_unlock_[k] 8560893
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_futex_[k];do_futex_[k];futex_wait_[k];futex_wait_queue_[k];schedule_[k];__schedule_[k];raw_spin_rq_unlock_[k] 4835129
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_futex_[k];do_futex_[k];futex_wait_[k];futex_wait_queue_[k];schedule_[k];srso_safe_ret_[k] 2493051
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_futex_[k];srso_safe_ret_[k] 5771910
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_exit_to_user_mode_[k];exit_to_user_mode_loop_[k] 6180515
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_exit_to_user_mode_[k];exit_to_user_mode_prepare_[k];exit_to_user_mode_loop_[k];__rseq_handle_notify_resume_[k];__put_user_8_[k] 6004580
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_exit_to_user_mode_[k];exit_to_user_mode_prepare_[k];exit_to_user_mode_loop_[k];__rseq_handle_notify_resume_[k];rseq_ip_fixup_[k] 6117636
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_exit_to_user_mode_[k];exit_to_user_mode_prepare_[k];exit_to_user_mode_loop_[k];__rseq_handle_notify_resume_[k];rseq_ip_fixup_[k];__get_user_8_[k] 12066084
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_exit_to_user_mode_[k];exit_to_user_mode_prepare_[k];switch_fpu_return_[k] 7749233
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_exit_to_user_mode_[k];exit_to_user_mode_prepare_[k];switch_fpu_return_[k];restore_fpregs_from_fpstate_[k] 6304838
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];void Simulation::SimulationUnit::execute_process_knrl<Simulation::SimulationUnit::cycle_process 6733874
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];void Simulation::SimulationUnit::execute_process_knrl<Simulation::SimulationUnit::cycle_process;MC::ParticlesList::begin;std::vector<MC::Particles, std::allocator<MC::Particles> >::begin 6970802
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];void Simulation::SimulationUnit::execute_process_knrl<Simulation::SimulationUnit::cycle_process;void Simulation::SimulationUnit::cycle_process;Simulation::p_kernel;contribution_simple_model;std::shared_ptr<SimpleModel>& std::any_cast<std::shared_ptr<SimpleModel>&> 1233395674
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];void Simulation::SimulationUnit::execute_process_knrl<Simulation::SimulationUnit::cycle_process;void Simulation::SimulationUnit::cycle_process;Simulation::p_kernel;std::function<void ;std::_Function_handler<void ;std::enable_if<is_invocable_r_v<void, Simulation::pbf;void std::__invoke_impl<void, Simulation::pbf;Simulation::pbf 10136591
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];void Simulation::SimulationUnit::execute_process_knrl<Simulation::SimulationUnit::cycle_process;void Simulation::SimulationUnit::cycle_process;Simulation::p_kernel;std::function<void ;std::_Function_handler<void ;std::enable_if<is_invocable_r_v<void, Simulation::pbf;void std::__invoke_impl<void, Simulation::pbf;Simulation::pbf;Eigen::SparseMatrix<double, 0, int>::coeff;Eigen::internal::CompressedStorage<double, int>::atInRange 597052741
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];void Simulation::SimulationUnit::execute_process_knrl<Simulation::SimulationUnit::cycle_process;void Simulation::SimulationUnit::cycle_process;Simulation::p_kernel;std::function<void ;std::_Function_handler<void ;std::enable_if<is_invocable_r_v<void, Simulation::pbf;void std::__invoke_impl<void, Simulation::pbf;Simulation::pbf;Eigen::SparseMatrix<double, 0, int>::coeff;Eigen::internal::CompressedStorage<double, int>::atInRange;Eigen::internal::CompressedStorage<double, int>::searchLowerIndex;int* std::lower_bound<int*, long>;int* std::__lower_bound<int*, long, __gnu_cxx::__ops::_Iter_less_val> 554462726
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];void Simulation::SimulationUnit::execute_process_knrl<Simulation::SimulationUnit::cycle_process;void Simulation::SimulationUnit::cycle_process;Simulation::p_kernel;std::function<void ;std::_Function_handler<void ;std::enable_if<is_invocable_r_v<void, Simulation::pbf;void std::__invoke_impl<void, Simulation::pbf;Simulation::pbf;Eigen::SparseMatrix<double, 0, int>::coeff;Eigen::internal::CompressedStorage<double, int>::atInRange;Eigen::internal::CompressedStorage<double, int>::searchLowerIndex;int* std::lower_bound<int*, long>;int* std::__lower_bound<int*, long, __gnu_cxx::__ops::_Iter_less_val>;void std::advance<int*, long>;void std::__advance<int*, long> 954547207
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];void Simulation::SimulationUnit::execute_process_knrl<Simulation::SimulationUnit::cycle_process;void Simulation::SimulationUnit::cycle_process;Simulation::p_kernel;update_simple_model;SimpleModel::step;SimpleModel::Xi::operator+ 1143407990
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];void Simulation::SimulationUnit::execute_process_knrl<Simulation::SimulationUnit::cycle_process;void Simulation::SimulationUnit::cycle_process;Simulation::p_kernel;update_simple_model;SimpleModel::step;std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::operator*;std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::get;std::__uniq_ptr_impl<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::_M_ptr 1374857762
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];void Simulation::SimulationUnit::execute_process_knrl<Simulation::SimulationUnit::cycle_process;void Simulation::SimulationUnit::cycle_process;Simulation::p_kernel;update_simple_model;SimpleModel::step;std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::operator*;std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::get;std::__uniq_ptr_impl<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::_M_ptr;std::tuple_element<0ul, std::tuple<SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> > >::type const& std::get<0ul, SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> >;SimpleModel::Xi* const& std::__get_helper<0ul, SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> > 1084740571
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];void Simulation::SimulationUnit::execute_process_knrl<Simulation::SimulationUnit::cycle_process;void Simulation::SimulationUnit::cycle_process;Simulation::p_kernel;update_simple_model;std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::operator;_[i];std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::get;std::__uniq_ptr_impl<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::_M_ptr;std::tuple_element<0ul, std::tuple<SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> > >::type const& std::get<0ul, SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> >;SimpleModel::Xi* const& std::__get_helper<0ul, SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> > 15229947
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];void Simulation::SimulationUnit::execute_process_knrl<Simulation::SimulationUnit::cycle_process;void Simulation::SimulationUnit::cycle_process;Simulation::p_kernel;update_simple_model;update_xi_dot;std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::operator;_[i];std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::get;std::__uniq_ptr_impl<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::_M_ptr;std::tuple_element<0ul, std::tuple<SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> > >::type const& std::get<0ul, SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> >;SimpleModel::Xi* const& std::__get_helper<0ul, SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> >;std::_Tuple_impl<0ul, SimpleModel::Xi*, std::default_delete<SimpleModel::Xi> >::_M_head;std::_Head_base<0ul, SimpleModel::Xi*, false>::_M_head 796330250
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];void Simulation::SimulationUnit::execute_process_knrl<Simulation::SimulationUnit::cycle_process;void Simulation::SimulationUnit::cycle_process;Simulation::p_kernel;update_simple_model;uptake_glucose 16015964
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];void Simulation::SimulationUnit::execute_process_knrl<Simulation::SimulationUnit::cycle_process;void Simulation::SimulationUnit::cycle_process;Simulation::p_kernel;update_simple_model;uptake_glucose;naive_newton;std::function<double ;std::_Function_handler<double ;std::enable_if<is_invocable_r_v<double, uptake_glucose;double std::__invoke_impl<double, uptake_glucose;uptake_glucose 889746204
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];void Simulation::SimulationUnit::execute_process_knrl<Simulation::SimulationUnit::cycle_process;void Simulation::SimulationUnit::cycle_process;Simulation::p_kernel;update_simple_model;uptake_glucose;naive_newton;std::function<double ;std::_Function_handler<double ;std::enable_if<is_invocable_r_v<double, uptake_glucose;double std::__invoke_impl<double, uptake_glucose;uptake_glucose;phi_permease;std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::operator;_[i];std::unique_ptr<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::get;std::__uniq_ptr_impl<SimpleModel::Xi, std::default_delete<SimpleModel::Xi> >::_M_ptr 1648680665
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];void Simulation::SimulationUnit::execute_process_knrl<Simulation::SimulationUnit::cycle_process;void Simulation::SimulationUnit::cycle_process;Simulation::p_kernel;update_simple_model;uptake_glucose;phi_pts;std::__shared_ptr_access<SimpleModel, ;_[i];std::__shared_ptr_access<SimpleModel, ;std::__shared_ptr<SimpleModel,  1663524858
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];void Simulation::SimulationUnit::execute_process_knrl<Simulation::SimulationUnit::cycle_process;void Simulation::SimulationUnit::cycle_process;Simulation::p_kernel;update_simple_model;uptake_o2;naive_newton 792557677
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];void Simulation::SimulationUnit::execute_process_knrl<Simulation::SimulationUnit::cycle_process;void Simulation::SimulationUnit::cycle_process;Simulation::p_kernel;update_simple_model;uptake_o2;naive_newton;std::isnan 1344573913
BioCMA-MCST_cli;[unknown];[libgomp.so.1.0.0];void Simulation::SimulationUnit::execute_process_knrl<Simulation::SimulationUnit::cycle_process;void Simulation::SimulationUnit::cycle_process;std::span<std::vector<MC::Particles, std::allocator<MC::Particles> >, 18446744073709551615ul>::span<std::vector<std::vector<MC::Particles, std::allocator<MC::Particles> >, std::allocator<std::vector<MC::Particles, std::allocator<MC::Particles> > > >&>;std::vector<std::vector<MC::Particles, std::allocator<MC::Particles> >, std::allocator<std::vector<MC::Particles, std::allocator<MC::Particles> > > >::data 1250152376
BioCMA-MCST_cli;[unknown];[libopenblasp-r0.3.20.so] 28488694608
BioCMA-MCST_cli;[unknown];[libopenblasp-r0.3.20.so];asm_common_interrupt_[k];common_interrupt_[k];__common_interrupt_[k];handle_edge_irq_[k];handle_irq_event_[k];__handle_irq_event_percpu_[k];amdgpu_irq_handler_[k];amdgpu_ih_process_[k];amdgpu_irq_dispatch_[k];amdgpu_dm_irq_handler_[k];dm_crtc_high_irq_[k];amdgpu_dm_crtc_handle_vblank_[k];drm_crtc_handle_vblank_[k];drm_handle_vblank_[k];drm_update_vblank_count_[k];amdgpu_get_vblank_counter_kms_[k] 20736976
BioCMA-MCST_cli;[unknown];[libopenblasp-r0.3.20.so];asm_common_interrupt_[k];common_interrupt_[k];__common_interrupt_[k];handle_edge_irq_[k];handle_irq_event_[k];__handle_irq_event_percpu_[k];amdgpu_irq_handler_[k];amdgpu_ih_process_[k];amdgpu_irq_dispatch_[k];amdgpu_dm_irq_handler_[k];dm_crtc_high_irq_[k];amdgpu_dm_crtc_handle_vblank_[k];drm_crtc_handle_vblank_[k];drm_handle_vblank_[k];drm_update_vblank_count_[k];drm_crtc_get_last_vbltimestamp_[k];drm_crtc_vblank_helper_get_vblank_timestamp_[k];drm_crtc_vblank_helper_get_vblank_timestamp_internal_[k] 21488445
BioCMA-MCST_cli;[unknown];[libopenblasp-r0.3.20.so];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];scheduler_tick_[k];task_tick_fair_[k];update_load_avg_[k];sugov_update_single_freq_[k] 21487964
BioCMA-MCST_cli;[unknown];[libopenblasp-r0.3.20.so];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];tick_program_event_[k] 20933145
BioCMA-MCST_cli;[unknown];[libopenblasp-r0.3.20.so];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];irq_exit_rcu_[k];__irq_exit_rcu_[k] 21285254
BioCMA-MCST_cli;[unknown];[unknown];[unknown];[libopenblasp-r0.3.20.so] 29313302
BioCMA-MCST_cli;[unknown];[unknown];[unknown];[unknown];[unknown];GOMP_parallel 32791051
BioCMA-MCST_cli;[unknown];[unknown];[unknown];[unknown];[unknown];GOMP_parallel;[libgomp.so.1.0.0];entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_futex_[k];do_futex_[k];futex_wake_[k] 32935808
BioCMA-MCST_cli;[unknown];[unknown];[unknown];[unknown];[unknown];GOMP_parallel;void Simulation::SimulationUnit::execute_process_knrl<Simulation::SimulationUnit::cycle_process;void Simulation::SimulationUnit::cycle_process;Simulation::p_kernel;MC::double_unfiform;MC::uniform_double_rand;std::uniform_real_distribution<double>::uniform_real_distribution;std::uniform_real_distribution<double>::param_type::param_type 32997359
BioCMA-MCST_cli;[unknown];[unknown];[unknown];[unknown];[unknown];GOMP_parallel;void Simulation::SimulationUnit::execute_process_knrl<Simulation::SimulationUnit::cycle_process;void Simulation::SimulationUnit::cycle_process;Simulation::p_kernel;contribution_simple_model 32185852
BioCMA-MCST_cli;[unknown];[unknown];[unknown];[unknown];[unknown];GOMP_parallel;void Simulation::SimulationUnit::execute_process_knrl<Simulation::SimulationUnit::cycle_process;void Simulation::SimulationUnit::cycle_process;Simulation::p_kernel;contribution_simple_model;std::__shared_ptr_access<SimpleModel, ;_[i];std::__shared_ptr_access<SimpleModel, ;std::__shared_ptr<SimpleModel,  33135603
BioCMA-MCST_cli;[unknown];[unknown];[unknown];[unknown];[unknown];GOMP_parallel;void Simulation::SimulationUnit::execute_process_knrl<Simulation::SimulationUnit::cycle_process;void Simulation::SimulationUnit::cycle_process;Simulation::p_kernel;std::function<void ;std::_Function_handler<void ;std::enable_if<is_invocable_r_v<void, Simulation::pbf;void std::__invoke_impl<void, Simulation::pbf;Simulation::pbf;Eigen::SparseMatrix<double, 0, int>::coeff;Eigen::internal::CompressedStorage<double, int>::atInRange;Eigen::internal::CompressedStorage<double, int>::searchLowerIndex;int* std::lower_bound<int*, long>;int* std::__lower_bound<int*, long, __gnu_cxx::__ops::_Iter_less_val>;bool __gnu_cxx::__ops::_Iter_less_val::operator 24165208
BioCMA-MCST_cli;[unknown];[unknown];[unknown];[unknown];[unknown];GOMP_parallel;void Simulation::SimulationUnit::execute_process_knrl<Simulation::SimulationUnit::cycle_process;void Simulation::SimulationUnit::cycle_process;Simulation::p_kernel;std::function<void ;std::_Function_handler<void ;std::enable_if<is_invocable_r_v<void, Simulation::pbf;void std::__invoke_impl<void, Simulation::pbf;double&& std::forward<double> 22144762
BioCMA-MCST_cli;[unknown];[unknown];[unknown];[unknown];[unknown];GOMP_parallel;void Simulation::SimulationUnit::execute_process_knrl<Simulation::SimulationUnit::cycle_process;void Simulation::SimulationUnit::cycle_process;Simulation::p_kernel;update_simple_model;uptake_glucose;naive_newton;std::function<double ;std::_Function_handler<double ;std::enable_if<is_invocable_r_v<double, uptake_glucose;double std::__invoke_impl<double, uptake_glucose;uptake_glucose 32929955
BioCMA-MCST_cli;[unknown];[unknown];[unknown];[unknown];[unknown];GOMP_parallel;void Simulation::SimulationUnit::execute_process_knrl<Simulation::SimulationUnit::cycle_process;void Simulation::SimulationUnit::cycle_process;Simulation::p_kernel;update_simple_model;uptake_o2;naive_newton 24169339
BioCMA-MCST_cli;[unknown];[unknown];[unknown];[unknown];[unknown];GOMP_parallel;void Simulation::SimulationUnit::execute_process_knrl<Simulation::SimulationUnit::cycle_process;void Simulation::SimulationUnit::cycle_process;Simulation::p_kernel;update_simple_model;uptake_o2;naive_newton;naive_newton;std::function<double ;std::_Function_handler<double ;std::enable_if<is_invocable_r_v<double, uptake_o2;double std::__invoke_impl<double, uptake_o2 30766553
BioCMA-MCST_cli;[unknown];[unknown];[unknown];[unknown];[unknown];GOMP_parallel;void Simulation::SimulationUnit::execute_process_knrl<Simulation::SimulationUnit::cycle_process;void Simulation::SimulationUnit::cycle_process;Simulation::p_kernel;update_simple_model;uptake_o2;naive_newton;naive_newton;std::function<double ;std::_Function_handler<double ;std::enable_if<is_invocable_r_v<double, uptake_o2;double std::__invoke_impl<double, uptake_o2;uptake_o2 32992757
BioCMA-MCST_cli;[unknown];[unknown];[unknown];[unknown];[unknown];[unknown];[unknown];[unknown];[unknown];[unknown];GOMP_parallel;void Simulation::SimulationUnit::execute_process_knrl<Simulation::SimulationUnit::cycle_process;void Simulation::SimulationUnit::cycle_process;Simulation::p_kernel;std::function<void ;std::_Function_handler<void ;std::enable_if<is_invocable_r_v<void, Simulation::pbf;void std::__invoke_impl<void, Simulation::pbf;Simulation::pbf;Eigen::SparseMatrix<double, 0, int>::coeff;Eigen::internal::CompressedStorage<double, int>::atInRange;Eigen::internal::CompressedStorage<double, int>::searchLowerIndex;int* std::lower_bound<int*, long>;int* std::__lower_bound<int*, long, __gnu_cxx::__ops::_Iter_less_val> 32946534
BioCMA-MCST_cli;[unknown];[unknown];[unknown];[unknown];[unknown];[unknown];[unknown];[unknown];[unknown];[unknown];GOMP_parallel;void Simulation::SimulationUnit::execute_process_knrl<Simulation::SimulationUnit::cycle_process;void Simulation::SimulationUnit::cycle_process;Simulation::p_kernel;update_simple_model;uptake_o2;naive_newton;std::function<double ;std::_Function_handler<double ;std::enable_if<is_invocable_r_v<double, uptake_o2;double std::__invoke_impl<double, uptake_o2;uptake_o2 31870018
BioCMA-MCST_cli;[unknown];[unknown];[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];asm_common_interrupt_[k];common_interrupt_[k];__common_interrupt_[k];handle_edge_irq_[k];handle_irq_event_[k];__handle_irq_event_percpu_[k];amdgpu_irq_handler_[k];amdgpu_ih_process_[k];amdgpu_irq_dispatch_[k];amdgpu_dm_irq_handler_[k];dm_crtc_high_irq_[k];amdgpu_dm_crtc_handle_vblank_[k];drm_crtc_handle_vblank_[k];drm_handle_vblank_[k];drm_update_vblank_count_[k];__get_vblank_counter_[k];amdgpu_get_vblank_counter_kms_[k];amdgpu_display_get_crtc_scanoutpos_[k];dm_crtc_get_scanoutpos_[k];dc_stream_get_scanoutpos_[k];optc1_get_crtc_scanoutpos_[k];optc1_get_position_[k];generic_reg_get_[k];dm_read_reg_func_[k];amdgpu_cgs_read_register_[k];amdgpu_device_rreg_[k] 22185231
BioCMA-MCST_cli;[unknown];[unknown];[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];_raw_spin_unlock_[k] 3505484
BioCMA-MCST_cli;[unknown];[unknown];[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];srso_safe_ret_[k] 22227076
BioCMA-MCST_cli;[unknown];__GI___futex_abstimed_wait_cancelable64;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_futex_[k];do_futex_[k];futex_wait_[k];futex_wait_queue_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];__perf_event_task_sched_in_[k] 10975621
BioCMA-MCST_cli;[unknown];__GI___futex_abstimed_wait_cancelable64;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_futex_[k];do_futex_[k];futex_wait_[k];futex_wait_queue_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];__perf_event_task_sched_in_[k];_raw_spin_unlock_[k] 311783
BioCMA-MCST_cli;[unknown];__GI___futex_abstimed_wait_cancelable64;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_futex_[k];do_futex_[k];futex_wait_[k];futex_wait_queue_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];__perf_event_task_sched_in_[k];perf_ctx_enable_[k] 1615474
BioCMA-MCST_cli;[unknown];__GI___futex_abstimed_wait_cancelable64;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_futex_[k];do_futex_[k];futex_wait_[k];futex_wait_queue_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];__perf_event_task_sched_in_[k];perf_ctx_enable_[k];x86_pmu_enable_[k];amd_pmu_enable_all_[k] 6278901
BioCMA-MCST_cli;[unknown];__GI___futex_abstimed_wait_cancelable64;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_futex_[k];do_futex_[k];futex_wait_[k];futex_wait_queue_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];__perf_event_task_sched_in_[k];perf_ctx_enable_[k];x86_pmu_enable_[k];amd_pmu_enable_all_[k];native_write_msr_[k] 1067971
BioCMA-MCST_cli;[unknown];__GI___futex_abstimed_wait_cancelable64;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_futex_[k];do_futex_[k];futex_wait_[k];futex_wait_queue_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];__rcu_read_unlock_[k] 13609579
BioCMA-MCST_cli;[unknown];__GI___futex_abstimed_wait_cancelable64;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_futex_[k];do_futex_[k];futex_wait_[k];futex_wait_queue_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];_raw_spin_unlock_[k] 8067419
BioCMA-MCST_cli;[unknown];__GI___futex_abstimed_wait_cancelable64;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_futex_[k];do_futex_[k];futex_wait_[k];futex_wait_queue_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];srso_safe_ret_[k] 1871100
BioCMA-MCST_cli;[unknown];__GI___futex_abstimed_wait_cancelable64;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_futex_[k];do_futex_[k];futex_wait_[k];futex_wait_queue_[k];schedule_[k];__schedule_[k];pick_next_task_[k];pick_next_task_fair_[k];newidle_balance_[k];load_balance_[k];detach_tasks_[k];deactivate_task_[k];dequeue_task_[k];dequeue_task_fair_[k];dequeue_entity_[k];detach_entity_load_avg_[k] 10341372
BioCMA-MCST_cli;[unknown];__GI___futex_abstimed_wait_cancelable64;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_futex_[k];do_futex_[k];futex_wait_[k];futex_wait_queue_[k];schedule_[k];__schedule_[k];prepare_task_switch_[k];__perf_event_task_sched_out_[k];perf_event_context_sched_out_[k];perf_ctx_disable_[k];x86_pmu_disable_[k];amd_pmu_disable_all_[k];x86_pmu_disable_all_[k] 14816520
BioCMA-MCST_cli;[unknown];__GI___futex_abstimed_wait_cancelable64;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_futex_[k];do_futex_[k];futex_wait_[k];futex_wait_queue_[k];schedule_[k];__schedule_[k];psi_task_switch_[k] 20937459
BioCMA-MCST_cli;[unknown];__GI___futex_abstimed_wait_cancelable64;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_exit_to_user_mode_[k];exit_to_user_mode_prepare_[k];exit_to_user_mode_loop_[k] 3027987
BioCMA-MCST_cli;[unknown];__GI___futex_abstimed_wait_cancelable64;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_exit_to_user_mode_[k];exit_to_user_mode_prepare_[k];exit_to_user_mode_loop_[k];__rseq_handle_notify_resume_[k];rseq_ip_fixup_[k];__get_user_8_[k] 25797036
BioCMA-MCST_cli;[unknown];__sched_yield 12214564262
BioCMA-MCST_cli;[unknown];__sched_yield;__irqentry_text_start_[k] 22366062
BioCMA-MCST_cli;[unknown];__sched_yield;asm_common_interrupt_[k];common_interrupt_[k];irq_exit_rcu_[k];__irq_exit_rcu_[k];__do_softirq_[k];tasklet_hi_action_[k];tasklet_action_common.constprop.0_[k];usb_giveback_urb_bh_[k];__usb_hcd_giveback_urb_[k];hid_irq_in_[k];usb_submit_urb_[k];usb_hcd_submit_urb_[k];xhci_urb_enqueue_[k];xhci_queue_intr_tx_[k];xhci_queue_bulk_tx_[k];xhci_ring_ep_doorbell_[k] 21118167
BioCMA-MCST_cli;[unknown];__sched_yield;asm_sysvec_apic_timer_interrupt_[k] 22774831
BioCMA-MCST_cli;[unknown];__sched_yield;asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k] 29288536
BioCMA-MCST_cli;[unknown];__sched_yield;asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];hrtimer_wakeup_[k];wake_up_process_[k];try_to_wake_up_[k];ttwu_do_activate_[k];enqueue_task_[k];psi_task_change_[k] 21419774
BioCMA-MCST_cli;[unknown];__sched_yield;asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];account_process_tick_[k];srso_safe_ret_[k] 22678672
BioCMA-MCST_cli;[unknown];__sched_yield;asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];scheduler_tick_[k];perf_event_task_tick_[k];perf_adjust_freq_unthr_context_[k] 38783139
BioCMA-MCST_cli;[unknown];__sched_yield;asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];scheduler_tick_[k];perf_event_task_tick_[k];perf_adjust_freq_unthr_context_[k];x86_pmu_disable_[k];amd_pmu_disable_all_[k];native_write_msr_[k] 24202082
BioCMA-MCST_cli;[unknown];__sched_yield;asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];scheduler_tick_[k];task_tick_fair_[k];update_load_avg_[k];sugov_update_single_freq_[k];cpufreq_driver_resolve_freq_[k] 19167680
BioCMA-MCST_cli;[unknown];__sched_yield;asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];scheduler_tick_[k];update_cfs_group_[k] 21251703
BioCMA-MCST_cli;[unknown];__sched_yield;asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];_raw_spin_lock_irqsave_[k];__raw_spin_lock_irqsave_[k] 27834722
BioCMA-MCST_cli;[unknown];__sched_yield;asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];irq_exit_rcu_[k];__irq_exit_rcu_[k];__do_softirq_[k];rcu_core_si_[k];rcu_core_[k];rcu_do_batch_[k];delayed_put_task_struct_[k];__put_task_struct_[k] 22489365
BioCMA-MCST_cli;[unknown];__sched_yield;asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];irq_exit_rcu_[k];__irq_exit_rcu_[k];__do_softirq_[k];run_rebalance_domains_[k];update_blocked_averages_[k];__update_blocked_fair_[k];update_load_avg_[k] 22035403
BioCMA-MCST_cli;[unknown];__sched_yield;asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];irqentry_exit_[k];irqentry_exit_to_user_mode_[k];exit_to_user_mode_prepare_[k];exit_to_user_mode_loop_[k];schedule_[k];__schedule_[k] 32363823
BioCMA-MCST_cli;[unknown];__sched_yield;do_syscall_64_[k] 3057430766
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_[k] 20463090229
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k] 25525730540
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];__x64_sys_sched_yield_[k] 13435357788
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];__x64_sys_sched_yield_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];enqueue_hrtimer_[k] 24630719
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];__x64_sys_sched_yield_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];ktime_get_[k] 18957530
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];__x86_indirect_thunk_rax_[k] 856791950
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k] 26885604925
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k] 7688442976
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];__x86_indirect_thunk_rax_[k] 457719594
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];asm_sysvec_apic_timer_interrupt_[k] 24203958
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];asm_sysvec_reschedule_ipi_[k] 30635666
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k] 50699699435
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];__schedule_[k] 1096123967
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];_raw_spin_lock_[k] 6411827291
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];_raw_spin_unlock_[k] 2933536967
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];asm_common_interrupt_[k];common_interrupt_[k];__common_interrupt_[k];handle_edge_irq_[k];handle_irq_event_[k];__handle_irq_event_percpu_[k];amdgpu_irq_handler_[k];amdgpu_ih_process_[k];amdgpu_irq_dispatch_[k];amdgpu_dm_irq_handler_[k];dm_crtc_high_irq_[k];amdgpu_dm_crtc_handle_crc_irq_[k] 21818666
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];asm_common_interrupt_[k];common_interrupt_[k];__common_interrupt_[k];handle_edge_irq_[k];handle_irq_event_[k];__handle_irq_event_percpu_[k];amdgpu_irq_handler_[k];amdgpu_ih_process_[k];amdgpu_irq_dispatch_[k];amdgpu_dm_irq_handler_[k];dm_crtc_high_irq_[k];amdgpu_dm_crtc_handle_vblank_[k];drm_crtc_handle_vblank_[k];drm_handle_vblank_[k];drm_handle_vblank_events_[k];send_vblank_event_[k];drm_send_event_timestamp_locked_[k];drm_send_event_helper_[k];__wake_up_[k];__wake_up_common_lock_[k];__wake_up_common_[k];ep_poll_callback_[k];__wake_up_[k];__wake_up_common_lock_[k];__wake_up_common_[k];ep_autoremove_wake_function_[k];default_wake_function_[k];try_to_wake_up_[k];ttwu_do_activate_[k];enqueue_task_[k];enqueue_task_fair_[k];rb_insert_color_[k] 20825150
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];asm_common_interrupt_[k];common_interrupt_[k];__common_interrupt_[k];handle_edge_irq_[k];handle_irq_event_[k];__handle_irq_event_percpu_[k];amdgpu_irq_handler_[k];amdgpu_ih_process_[k];amdgpu_irq_dispatch_[k];amdgpu_dm_irq_handler_[k];dm_crtc_high_irq_[k];amdgpu_dm_crtc_handle_vblank_[k];drm_crtc_handle_vblank_[k];drm_handle_vblank_[k];drm_update_vblank_count_[k];__get_vblank_counter_[k];amdgpu_get_vblank_counter_kms_[k];srso_safe_ret_[k] 26373546
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];asm_common_interrupt_[k];common_interrupt_[k];irq_exit_rcu_[k];__irq_exit_rcu_[k];__do_softirq_[k];tasklet_hi_action_[k];tasklet_action_common.constprop.0_[k];usb_giveback_urb_bh_[k];__usb_hcd_giveback_urb_[k];hid_irq_in_[k];hid_input_report_[k];hid_report_raw_event_[k];hidinput_report_event_[k];input_event_[k];input_handle_event_[k];input_event_dispose_[k];input_pass_values.part.0_[k];input_to_handler_[k];evdev_events_[k];evdev_pass_values_[k];__wake_up_[k];__wake_up_common_lock_[k];__wake_up_common_[k];ep_poll_callback_[k];__wake_up_[k];__wake_up_common_lock_[k];__wake_up_common_[k];ep_poll_callback_[k];__wake_up_[k];__wake_up_common_lock_[k];__wake_up_common_[k];ep_autoremove_wake_function_[k];default_wake_function_[k];try_to_wake_up_[k];update_rq_clock_[k] 25202479
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];rcu_sched_clock_irq_[k] 21313842
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];scheduler_tick_[k];__rcu_read_unlock_[k] 19722541
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];scheduler_tick_[k];perf_event_task_tick_[k];perf_adjust_freq_unthr_context_[k];x86_pmu_disable_[k];amd_pmu_disable_all_[k];x86_pmu_disable_all_[k];native_read_msr_[k] 21475889
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];irq_exit_rcu_[k];__irq_exit_rcu_[k];__do_softirq_[k];rcu_core_si_[k];rcu_core_[k];rcu_do_batch_[k];drm_sched_fence_free_rcu_[k];kmem_cache_free_[k];cache_from_obj_[k] 23515624
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];irq_exit_rcu_[k];__irq_exit_rcu_[k];__do_softirq_[k];rcu_core_si_[k];rcu_core_[k];rcu_do_batch_[k];file_free_rcu_[k] 21599737
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];irq_exit_rcu_[k];__irq_exit_rcu_[k];__do_softirq_[k];run_rebalance_domains_[k];update_blocked_averages_[k];__update_blocked_fair_[k] 21738862
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];raw_spin_rq_lock_nested_[k] 8077442304
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];raw_spin_rq_lock_nested_[k];_raw_spin_lock_[k];native_queued_spin_lock_slowpath_[k] 324734006
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];raw_spin_rq_unlock_[k] 401813652
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];raw_spin_rq_unlock_[k];_raw_spin_unlock_[k] 1187213155
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k] 12358042531
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__irqentry_text_start_[k] 30351095
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k] 66367596803
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];_raw_spin_lock_[k] 6602867314
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];_raw_spin_unlock_[k] 4276010306
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];asm_common_interrupt_[k];common_interrupt_[k];__common_interrupt_[k];handle_edge_irq_[k];handle_irq_event_[k];__handle_irq_event_percpu_[k];__irq_wake_thread_[k];wake_up_process_[k];try_to_wake_up_[k];ttwu_do_activate_[k];enqueue_task_[k];psi_task_change_[k] 28517698
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];asm_common_interrupt_[k];common_interrupt_[k];__common_interrupt_[k];handle_edge_irq_[k];handle_irq_event_[k];__handle_irq_event_percpu_[k];amdgpu_irq_handler_[k];amdgpu_ih_process_[k];amdgpu_irq_dispatch_[k];__x86_indirect_thunk_rdx_[k] 20449623
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];asm_common_interrupt_[k];common_interrupt_[k];__common_interrupt_[k];handle_edge_irq_[k];handle_irq_event_[k];__handle_irq_event_percpu_[k];amdgpu_irq_handler_[k];amdgpu_ih_process_[k];amdgpu_irq_dispatch_[k];amdgpu_dm_irq_handler_[k];dm_crtc_high_irq_[k];amdgpu_dm_crtc_handle_vblank_[k];drm_crtc_handle_vblank_[k];drm_handle_vblank_[k];drm_update_vblank_count_[k];__get_vblank_counter_[k];amdgpu_get_vblank_counter_kms_[k];amdgpu_display_get_crtc_scanoutpos_[k];dm_crtc_get_scanoutpos_[k];dc_stream_get_scanoutpos_[k];optc1_get_crtc_scanoutpos_[k];optc1_get_position_[k];generic_reg_get_[k];dm_read_reg_func_[k];amdgpu_cgs_read_register_[k];amdgpu_device_rreg_[k] 32635052
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];asm_common_interrupt_[k];common_interrupt_[k];__common_interrupt_[k];handle_edge_irq_[k];handle_irq_event_[k];__handle_irq_event_percpu_[k];amdgpu_irq_handler_[k];amdgpu_ih_process_[k];amdgpu_irq_dispatch_[k];amdgpu_dm_irq_handler_[k];dm_crtc_high_irq_[k];amdgpu_dm_crtc_handle_vblank_[k];drm_crtc_handle_vblank_[k];drm_handle_vblank_[k];drm_update_vblank_count_[k];__get_vblank_counter_[k];amdgpu_get_vblank_counter_kms_[k];dm_vblank_get_counter_[k];dc_stream_get_vblank_counter_[k];optc1_get_vblank_counter_[k];generic_reg_get_[k];dm_read_reg_func_[k];amdgpu_cgs_read_register_[k];amdgpu_device_rreg_[k] 42414800
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];asm_common_interrupt_[k];common_interrupt_[k];__common_interrupt_[k];handle_edge_irq_[k];handle_irq_event_[k];__handle_irq_event_percpu_[k];amdgpu_irq_handler_[k];amdgpu_ih_process_[k];amdgpu_irq_dispatch_[k];amdgpu_dm_irq_handler_[k];dm_crtc_high_irq_[k];amdgpu_dm_crtc_handle_vblank_[k];drm_crtc_handle_vblank_[k];drm_handle_vblank_[k];drm_update_vblank_count_[k];drm_crtc_get_last_vbltimestamp_[k];drm_crtc_vblank_helper_get_vblank_timestamp_[k];drm_crtc_vblank_helper_get_vblank_timestamp_internal_[k] 22094629
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];asm_common_interrupt_[k];common_interrupt_[k];__common_interrupt_[k];handle_edge_irq_[k];handle_irq_event_[k];__handle_irq_event_percpu_[k];amdgpu_irq_handler_[k];amdgpu_ih_process_[k];amdgpu_irq_dispatch_[k];amdgpu_dm_irq_handler_[k];dm_crtc_high_irq_[k];amdgpu_dm_crtc_handle_vblank_[k];drm_crtc_handle_vblank_[k];drm_handle_vblank_[k];drm_update_vblank_count_[k];drm_crtc_get_last_vbltimestamp_[k];drm_crtc_vblank_helper_get_vblank_timestamp_[k];drm_crtc_vblank_helper_get_vblank_timestamp_internal_[k];amdgpu_crtc_get_scanout_position_[k];amdgpu_display_get_crtc_scanoutpos_[k];dm_crtc_get_scanoutpos_[k];dc_stream_get_scanoutpos_[k];optc1_get_crtc_scanoutpos_[k];optc1_get_position_[k];generic_reg_get2_[k];dm_read_reg_func_[k];amdgpu_cgs_read_register_[k];amdgpu_device_rreg_[k] 31543340
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];asm_common_interrupt_[k];common_interrupt_[k];__common_interrupt_[k];handle_edge_irq_[k];handle_irq_event_[k];__handle_irq_event_percpu_[k];xhci_msi_irq_[k];xhci_irq_[k] 27038248
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];asm_common_interrupt_[k];common_interrupt_[k];irq_exit_rcu_[k];__irq_exit_rcu_[k];__do_softirq_[k];tasklet_hi_action_[k];tasklet_action_common.constprop.0_[k];usb_giveback_urb_bh_[k];__usb_hcd_giveback_urb_[k];hid_irq_in_[k];usb_submit_urb_[k];usb_get_urb_[k] 19876137
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k] 26707552
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k] 23791387
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_next_event_base_[k] 22644603
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k] 41518437
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];__remove_hrtimer_[k];rb_next_[k] 47750493
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];__remove_hrtimer_[k];timerqueue_del_[k] 21531568
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];hrtimer_wakeup_[k];wake_up_process_[k];try_to_wake_up_[k];ttwu_do_activate_[k];enqueue_task_[k];psi_task_change_[k];psi_flags_change_[k] 21271545
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k] 22726472
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];ktime_get_[k] 21980486
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];irq_work_tick_[k] 16406541
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];arch_scale_freq_tick_[k] 25386654
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];rcu_sched_clock_irq_[k] 20765474
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];rcu_sched_clock_irq_[k];check_cpu_stall_[k] 29006734
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];rcu_segcblist_ready_cbs_[k] 21109848
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];scheduler_tick_[k] 21511649
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];scheduler_tick_[k];perf_event_task_tick_[k];perf_adjust_freq_unthr_context_[k] 127359066
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];scheduler_tick_[k];perf_event_task_tick_[k];perf_adjust_freq_unthr_context_[k];x86_pmu_disable_[k];amd_pmu_disable_all_[k];__x86_indirect_thunk_rax_[k] 20295920
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];scheduler_tick_[k];perf_event_task_tick_[k];perf_adjust_freq_unthr_context_[k];x86_pmu_disable_[k];amd_pmu_disable_all_[k];native_read_msr_[k] 19969772
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];scheduler_tick_[k];perf_event_task_tick_[k];perf_adjust_freq_unthr_context_[k];x86_pmu_disable_[k];amd_pmu_disable_all_[k];native_write_msr_[k] 23684408
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];scheduler_tick_[k];perf_event_task_tick_[k];perf_adjust_freq_unthr_context_[k];x86_pmu_disable_[k];amd_pmu_disable_all_[k];srso_safe_ret_[k] 20682609
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];scheduler_tick_[k];perf_event_task_tick_[k];perf_adjust_freq_unthr_context_[k];x86_pmu_disable_[k];amd_pmu_disable_all_[k];x86_pmu_disable_all_[k] 40329500
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];scheduler_tick_[k];perf_event_task_tick_[k];perf_adjust_freq_unthr_context_[k];x86_pmu_disable_[k];amd_pmu_disable_all_[k];x86_pmu_disable_all_[k];native_read_msr_[k] 64189697
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];scheduler_tick_[k];perf_event_task_tick_[k];perf_adjust_freq_unthr_context_[k];x86_pmu_enable_[k];amd_pmu_enable_all_[k] 21064349
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];scheduler_tick_[k];task_tick_fair_[k];update_curr_[k] 21443074
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];scheduler_tick_[k];task_tick_fair_[k];update_load_avg_[k] 33527489
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];scheduler_tick_[k];task_tick_fair_[k];update_load_avg_[k];__update_load_avg_se_[k] 45336306
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];scheduler_tick_[k];task_tick_fair_[k];update_load_avg_[k];sugov_update_single_freq_[k] 18954451
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];scheduler_tick_[k];update_cfs_group_[k] 24888992
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];scheduler_tick_[k];update_rq_clock_[k];sched_clock_cpu_[k];sched_clock_[k];sched_clock_noinstr_[k];native_sched_clock_[k] 21079353
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];task_tick_fair_[k] 21581078
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];timerqueue_add_[k] 23283507
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];hrtimer_update_next_event_[k];__hrtimer_next_event_base_[k] 20485575
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k] 41529962
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];__perf_event_task_sched_in_[k] 19043458
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];__perf_event_task_sched_in_[k];_raw_spin_unlock_[k] 2204159
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];__perf_event_task_sched_in_[k];perf_ctx_enable_[k] 2161403
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];__perf_event_task_sched_in_[k];perf_ctx_enable_[k];x86_pmu_enable_[k];amd_pmu_enable_all_[k] 1165169
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];__perf_event_task_sched_in_[k];perf_ctx_enable_[k];x86_pmu_enable_[k];amd_pmu_enable_all_[k];x86_pmu_enable_event_[k] 15535
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];__rcu_read_unlock_[k] 3353281
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];_raw_spin_unlock_[k] 20306278
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k] 11799752
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];scheduler_tick_[k];perf_event_task_tick_[k];perf_adjust_freq_unthr_context_[k] 17604470
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];irq_exit_rcu_[k];__irq_exit_rcu_[k];__do_softirq_[k];rcu_core_si_[k];rcu_core_[k];rcu_do_batch_[k] 24384895
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];irq_exit_rcu_[k];__irq_exit_rcu_[k];__do_softirq_[k];run_rebalance_domains_[k];update_blocked_averages_[k];__update_blocked_fair_[k] 11595515
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];raw_spin_rq_unlock_[k];_raw_spin_unlock_[k] 43670
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];srso_safe_ret_[k] 9912119
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k] 14155480816
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];check_cfs_rq_runtime_[k] 5331964647
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];pick_next_entity_[k] 6791075972
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];pick_next_task_fair_[k] 63603606116
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];pick_next_task_fair_[k];__calc_delta_[k] 1604156792
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];pick_next_task_fair_[k];__cgroup_account_cputime_[k] 195944332
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];pick_next_task_fair_[k];check_cfs_rq_runtime_[k] 27916502
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];pick_next_task_fair_[k];cpuacct_charge_[k] 1703782259
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];pick_next_task_fair_[k];pick_next_entity_[k] 14708964113
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];pick_next_task_fair_[k];put_prev_entity_[k] 16704728
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];pick_next_task_fair_[k];put_prev_entity_[k];srso_safe_ret_[k] 17536031
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];pick_next_task_fair_[k];put_prev_entity_[k];update_load_avg_[k] 54728053
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];pick_next_task_fair_[k];put_prev_entity_[k];update_load_avg_[k];__update_load_avg_cfs_rq_[k] 36940035
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];pick_next_task_fair_[k];rb_erase_[k] 65793931
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];pick_next_task_fair_[k];rb_insert_color_[k] 39240353
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];pick_next_task_fair_[k];rb_next_[k] 21076738
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];pick_next_task_fair_[k];set_next_entity_[k] 63909233
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];pick_next_task_fair_[k];set_next_entity_[k];__update_load_avg_cfs_rq_[k] 17160203
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];pick_next_task_fair_[k];set_next_entity_[k];update_load_avg_[k] 41404585
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];pick_next_task_fair_[k];set_next_entity_[k];update_load_avg_[k];__update_load_avg_cfs_rq_[k] 6933116
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];pick_next_task_fair_[k];srso_return_thunk_[k] 83311004
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];pick_next_task_fair_[k];srso_safe_ret_[k] 6224979189
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];pick_next_task_fair_[k];update_curr_[k] 61293940946
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];pick_next_task_fair_[k];update_curr_[k];__calc_delta_[k] 11656374875
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];pick_next_task_fair_[k];update_curr_[k];__cgroup_account_cputime_[k] 12053264005
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];pick_next_task_fair_[k];update_curr_[k];__cgroup_account_cputime_[k];cgroup_rstat_updated_[k] 5207902088
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];pick_next_task_fair_[k];update_curr_[k];cgroup_rstat_updated_[k] 597750827
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];pick_next_task_fair_[k];update_curr_[k];cpuacct_charge_[k] 7866259327
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];pick_next_task_fair_[k];update_curr_[k];srso_safe_ret_[k] 1502792877
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];pick_next_task_fair_[k];update_curr_[k];update_min_vruntime_[k] 1875797386
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];pick_next_task_fair_[k];update_min_vruntime_[k] 6807445096
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];put_prev_task_balance_[k];put_prev_task_fair_[k];put_prev_entity_[k] 21203530
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];set_next_entity_[k] 18610806
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];srso_return_thunk_[k] 807447234
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];srso_safe_ret_[k] 12812926061
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];update_curr_[k] 1099894861
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_dl_[k] 31237466
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_fair_[k] 1334273979
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];prepare_task_switch_[k];__perf_event_task_sched_out_[k];__rcu_read_unlock_[k] 30978385
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];prepare_task_switch_[k];__perf_event_task_sched_out_[k];_raw_spin_lock_[k] 38948761
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];prepare_task_switch_[k];__perf_event_task_sched_out_[k];perf_event_context_sched_out_[k] 48373082
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];prepare_task_switch_[k];__perf_event_task_sched_out_[k];perf_event_context_sched_out_[k];perf_ctx_disable_[k] 60954133
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];prepare_task_switch_[k];__perf_event_task_sched_out_[k];perf_event_context_sched_out_[k];perf_ctx_disable_[k];x86_pmu_disable_[k];amd_pmu_check_overflow_[k] 21717027
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];prepare_task_switch_[k];__perf_event_task_sched_out_[k];perf_event_context_sched_out_[k];perf_ctx_disable_[k];x86_pmu_disable_[k];amd_pmu_disable_all_[k] 17677994
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];prepare_task_switch_[k];__perf_event_task_sched_out_[k];perf_event_context_sched_out_[k];perf_ctx_disable_[k];x86_pmu_disable_[k];amd_pmu_disable_all_[k];__x86_indirect_thunk_rdx_[k] 29033687
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];prepare_task_switch_[k];__perf_event_task_sched_out_[k];perf_event_context_sched_out_[k];perf_ctx_disable_[k];x86_pmu_disable_[k];amd_pmu_disable_all_[k];amd_pmu_addr_offset_[k] 27098192
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];prepare_task_switch_[k];__perf_event_task_sched_out_[k];perf_event_context_sched_out_[k];perf_ctx_disable_[k];x86_pmu_disable_[k];amd_pmu_disable_all_[k];amd_pmu_check_overflow_[k];amd_pmu_addr_offset_[k] 48322992
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];prepare_task_switch_[k];__perf_event_task_sched_out_[k];perf_event_context_sched_out_[k];perf_ctx_disable_[k];x86_pmu_disable_[k];amd_pmu_disable_all_[k];amd_pmu_check_overflow_[k];amd_pmu_test_overflow_topbit_[k] 22284337
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];prepare_task_switch_[k];__perf_event_task_sched_out_[k];perf_event_context_sched_out_[k];perf_ctx_disable_[k];x86_pmu_disable_[k];amd_pmu_disable_all_[k];amd_pmu_check_overflow_[k];amd_pmu_test_overflow_topbit_[k];native_read_msr_[k] 58257936
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];prepare_task_switch_[k];__perf_event_task_sched_out_[k];perf_event_context_sched_out_[k];perf_ctx_disable_[k];x86_pmu_disable_[k];amd_pmu_disable_all_[k];native_write_msr_[k] 998005503
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];prepare_task_switch_[k];__perf_event_task_sched_out_[k];perf_event_context_sched_out_[k];perf_ctx_disable_[k];x86_pmu_disable_[k];amd_pmu_disable_all_[k];x86_pmu_disable_all_[k] 107833060
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];prepare_task_switch_[k];__perf_event_task_sched_out_[k];perf_event_context_sched_out_[k];perf_ctx_disable_[k];x86_pmu_disable_[k];amd_pmu_disable_all_[k];x86_pmu_disable_all_[k];amd_pmu_addr_offset_[k] 19746840
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];prepare_task_switch_[k];__perf_event_task_sched_out_[k];perf_event_context_sched_out_[k];perf_ctx_disable_[k];x86_pmu_disable_[k];amd_pmu_disable_all_[k];x86_pmu_disable_all_[k];native_read_msr_[k] 241815020
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];prepare_task_switch_[k];__perf_event_task_sched_out_[k];perf_event_context_sched_out_[k];perf_ctx_disable_[k];x86_pmu_disable_[k];x86_pmu_disable_all_[k] 25600644
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];prepare_task_switch_[k];__perf_event_task_sched_out_[k];srso_safe_ret_[k] 9372132
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];psi_flags_change_[k] 9814422
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];psi_task_switch_[k] 129397588
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];psi_task_switch_[k];psi_group_change_[k] 45798691
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];psi_task_switch_[k];sched_clock_cpu_[k] 68204766
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];psi_task_switch_[k];sched_clock_cpu_[k];sched_clock_[k] 12652248
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];psi_task_switch_[k];sched_clock_cpu_[k];sched_clock_[k];sched_clock_noinstr_[k];native_sched_clock_[k] 19115908
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];raw_spin_rq_lock_nested_[k] 8140120620
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];raw_spin_rq_lock_nested_[k];_raw_spin_lock_[k];native_queued_spin_lock_slowpath_[k] 50233370
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];raw_spin_rq_unlock_[k] 219520854
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];raw_spin_rq_unlock_[k];_raw_spin_unlock_[k] 1066375930
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];rcu_note_context_switch_[k] 8682781049
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];sched_clock_cpu_[k] 1090758948
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];srso_safe_ret_[k] 4225254707
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];update_rq_clock_[k] 18049310817
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];update_rq_clock_[k];sched_clock_[k] 1033669547
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];update_rq_clock_[k];sched_clock_cpu_[k] 11332990110
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];update_rq_clock_[k];sched_clock_cpu_[k];sched_clock_[k] 9969247798
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];update_rq_clock_[k];sched_clock_cpu_[k];sched_clock_[k];native_sched_clock_[k] 1477322659
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];update_rq_clock_[k];sched_clock_cpu_[k];sched_clock_[k];sched_clock_noinstr_[k];native_sched_clock_[k] 22516662571
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];update_rq_clock_[k];sched_clock_cpu_[k];sched_clock_[k];srso_safe_ret_[k] 382010328
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];update_rq_clock_[k];sched_clock_cpu_[k];sched_clock_noinstr_[k] 2004171257
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];update_rq_clock_[k];sched_clock_cpu_[k];srso_safe_ret_[k] 898205696
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];update_rq_clock_[k];srso_safe_ret_[k] 912886735
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];asm_common_interrupt_[k];common_interrupt_[k];irq_exit_rcu_[k];__irq_exit_rcu_[k];__do_softirq_[k] 25350857
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];asm_common_interrupt_[k];common_interrupt_[k];irq_exit_rcu_[k];__irq_exit_rcu_[k];__do_softirq_[k];tasklet_hi_action_[k];tasklet_action_common.constprop.0_[k];usb_giveback_urb_bh_[k];__usb_hcd_giveback_urb_[k];hid_irq_in_[k];hid_input_report_[k];hid_report_raw_event_[k];hid_process_report_[k];snto32_[k] 23625543
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];asm_sysvec_apic_timer_interrupt_[k] 110646411
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];hrtimer_wakeup_[k];wake_up_process_[k];try_to_wake_up_[k];select_task_rq_fair_[k];select_idle_sibling_[k];select_idle_cpu_[k] 24015953
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];pick_next_task_[k] 1645897030
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];prepare_task_switch_[k] 23858488
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];raw_spin_rq_lock_nested_[k] 4022205117
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];raw_spin_rq_unlock_[k] 8753328540
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];rcu_note_context_switch_[k] 441424870
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];srso_return_thunk_[k] 182922571
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];srso_safe_ret_[k] 7828527723
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];update_rq_clock_[k] 3830799041
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];srso_safe_ret_[k] 2890348105
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];update_rq_clock_[k] 42975043
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];yield_task_fair_[k] 4565306670
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];yield_task_fair_[k];sched_clock_cpu_[k] 15570006
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];yield_task_fair_[k];srso_safe_ret_[k] 33224318
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];yield_task_fair_[k];update_curr_[k] 183104521
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];yield_task_fair_[k];update_curr_[k];__cgroup_account_cputime_[k] 45470377
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];yield_task_fair_[k];update_curr_[k];cpuacct_charge_[k] 137181236
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];yield_task_fair_[k];update_curr_[k];update_min_vruntime_[k] 45778861
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];yield_task_fair_[k];update_rq_clock_[k] 172754212
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];yield_task_fair_[k];update_rq_clock_[k];sched_clock_cpu_[k] 152951885
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];yield_task_fair_[k];update_rq_clock_[k];sched_clock_cpu_[k];sched_clock_[k] 19591155
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];yield_task_fair_[k];update_rq_clock_[k];sched_clock_cpu_[k];sched_clock_[k];native_sched_clock_[k] 32176504
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];yield_task_fair_[k];update_rq_clock_[k];sched_clock_cpu_[k];sched_clock_[k];sched_clock_noinstr_[k];native_sched_clock_[k] 55327284
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];yield_task_fair_[k];update_rq_clock_[k];sched_clock_cpu_[k];sched_clock_noinstr_[k] 22695970
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];yield_task_fair_[k];update_rq_clock_[k];sched_clock_cpu_[k];srso_safe_ret_[k] 63616555
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];yield_task_fair_[k];update_rq_clock_[k];srso_safe_ret_[k] 17481329
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];error_entry_[k] 21298434
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];raw_spin_rq_lock_nested_[k] 813576099
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];raw_spin_rq_unlock_[k] 9368037763
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];schedule_[k] 591655861
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];srso_return_thunk_[k] 1416180581
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];srso_safe_ret_[k] 6718420230
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];yield_task_fair_[k] 10594417789
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];amd_clear_divider_[k] 3966414081
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];asm_sysvec_apic_timer_interrupt_[k] 21441283
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k] 21842338
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];hrtimer_wakeup_[k];wake_up_process_[k];try_to_wake_up_[k];select_task_rq_fair_[k];select_idle_sibling_[k];available_idle_cpu_[k] 21413100
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];scheduler_tick_[k];perf_event_task_tick_[k];perf_adjust_freq_unthr_context_[k];x86_pmu_disable_[k];amd_pmu_disable_all_[k];x86_pmu_disable_all_[k];native_read_msr_[k] 21475452
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];scheduler_tick_[k];task_tick_fair_[k];update_curr_[k] 21105691
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];scheduler_tick_[k];task_tick_fair_[k];update_load_avg_[k];__update_load_avg_se_[k] 20257877
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];do_sched_yield_[k] 1920690705
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];exit_to_user_mode_prepare_[k] 1613384663
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];srso_safe_ret_[k] 2750513653
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_enter_from_user_mode_[k] 4546144089
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_enter_from_user_mode_[k];asm_common_interrupt_[k];common_interrupt_[k];__common_interrupt_[k];handle_edge_irq_[k];handle_irq_event_[k];__handle_irq_event_percpu_[k];amdgpu_irq_handler_[k];amdgpu_ih_process_[k];amdgpu_irq_dispatch_[k];amdgpu_dm_irq_handler_[k];dc_interrupt_ack_[k];dal_irq_service_ack_[k];dm_read_reg_func_[k];amdgpu_cgs_read_register_[k];amdgpu_device_rreg_[k] 26830230
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_enter_from_user_mode_[k];asm_common_interrupt_[k];common_interrupt_[k];__common_interrupt_[k];handle_edge_irq_[k];handle_irq_event_[k];__handle_irq_event_percpu_[k];amdgpu_irq_handler_[k];amdgpu_ih_process_[k];amdgpu_irq_dispatch_[k];amdgpu_dm_irq_handler_[k];dm_crtc_high_irq_[k];amdgpu_dm_crtc_handle_vblank_[k];drm_crtc_handle_vblank_[k];drm_handle_vblank_[k];drm_update_vblank_count_[k];drm_crtc_get_last_vbltimestamp_[k];drm_crtc_vblank_helper_get_vblank_timestamp_[k];drm_crtc_vblank_helper_get_vblank_timestamp_internal_[k];amdgpu_crtc_get_scanout_position_[k];amdgpu_display_get_crtc_scanoutpos_[k];dm_crtc_get_scanoutpos_[k];dc_stream_get_scanoutpos_[k];optc1_get_crtc_scanoutpos_[k];optc1_get_position_[k];generic_reg_get2_[k];dm_read_reg_func_[k];amdgpu_cgs_read_register_[k];amdgpu_device_rreg_[k] 20485938
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_enter_from_user_mode_[k];asm_common_interrupt_[k];common_interrupt_[k];__common_interrupt_[k];handle_edge_irq_[k];handle_irq_event_[k];__handle_irq_event_percpu_[k];amdgpu_irq_handler_[k];amdgpu_ih_process_[k];amdgpu_irq_dispatch_[k];amdgpu_dm_irq_handler_[k];dm_pflip_high_irq_[k];amdgpu_get_vblank_counter_kms_[k];dm_vblank_get_counter_[k];dc_stream_get_vblank_counter_[k];optc1_get_vblank_counter_[k];generic_reg_get_[k];dm_read_reg_func_[k];amdgpu_cgs_read_register_[k];amdgpu_device_rreg_[k] 21945667
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_enter_from_user_mode_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k] 14152471
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_enter_from_user_mode_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];account_process_tick_[k];account_system_time_[k];account_system_index_time_[k];acct_account_cputime_[k] 21103593
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_enter_from_user_mode_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];scheduler_tick_[k];perf_event_task_tick_[k];perf_adjust_freq_unthr_context_[k] 20537761
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_enter_from_user_mode_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];scheduler_tick_[k];task_tick_fair_[k] 21995875
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_enter_from_user_mode_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];scheduler_tick_[k];task_tick_fair_[k];update_curr_[k];__calc_delta_[k] 22346948
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_enter_from_user_mode_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];scheduler_tick_[k];task_tick_fair_[k];update_load_avg_[k];__update_load_avg_cfs_rq_[k] 20891200
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_enter_from_user_mode_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];scheduler_tick_[k];task_tick_fair_[k];update_load_avg_[k];sugov_update_single_freq_[k] 25113819
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_enter_from_user_mode_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];irq_exit_rcu_[k];__irq_exit_rcu_[k];__do_softirq_[k];run_rebalance_domains_[k];rebalance_domains_[k] 35143886
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_enter_from_user_mode_[k];asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];irq_exit_rcu_[k];__irq_exit_rcu_[k];__do_softirq_[k];run_rebalance_domains_[k];update_blocked_averages_[k] 21435261
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_exit_to_user_mode_[k] 11020804760
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_exit_to_user_mode_[k];exit_to_user_mode_prepare_[k] 27477641350
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_exit_to_user_mode_[k];exit_to_user_mode_prepare_[k];__rseq_handle_notify_resume_[k] 3134133
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_exit_to_user_mode_[k];exit_to_user_mode_prepare_[k];blkcg_maybe_throttle_current_[k] 48701916
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_exit_to_user_mode_[k];exit_to_user_mode_prepare_[k];exit_to_user_mode_loop_[k] 33498292
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_exit_to_user_mode_[k];exit_to_user_mode_prepare_[k];exit_to_user_mode_loop_[k];__rseq_handle_notify_resume_[k];__put_user_8_[k] 470533212
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_exit_to_user_mode_[k];exit_to_user_mode_prepare_[k];exit_to_user_mode_loop_[k];__rseq_handle_notify_resume_[k];rseq_ip_fixup_[k] 28492597
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_exit_to_user_mode_[k];exit_to_user_mode_prepare_[k];exit_to_user_mode_loop_[k];__rseq_handle_notify_resume_[k];rseq_ip_fixup_[k];__get_user_8_[k] 24841605
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_exit_to_user_mode_[k];exit_to_user_mode_prepare_[k];exit_to_user_mode_loop_[k];__rseq_handle_notify_resume_[k];rseq_ip_fixup_[k];rseq_get_rseq_cs_[k] 23494146
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_exit_to_user_mode_[k];exit_to_user_mode_prepare_[k];exit_to_user_mode_loop_[k];__rseq_handle_notify_resume_[k];rseq_ip_fixup_[k];srso_safe_ret_[k] 12074137
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_exit_to_user_mode_[k];exit_to_user_mode_prepare_[k];exit_to_user_mode_loop_[k];__rseq_handle_notify_resume_[k];rseq_update_cpu_node_id_[k] 54052972
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_exit_to_user_mode_[k];exit_to_user_mode_prepare_[k];exit_to_user_mode_loop_[k];__rseq_handle_notify_resume_[k];srso_safe_ret_[k] 25497381
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_exit_to_user_mode_[k];exit_to_user_mode_prepare_[k];exit_to_user_mode_loop_[k];mem_cgroup_handle_over_high_[k] 19148096
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_exit_to_user_mode_[k];exit_to_user_mode_prepare_[k];exit_to_user_mode_loop_[k];rseq_update_cpu_node_id_[k] 13528577
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_exit_to_user_mode_[k];exit_to_user_mode_prepare_[k];exit_to_user_mode_loop_[k];task_mm_cid_work_[k] 22530729
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_exit_to_user_mode_[k];exit_to_user_mode_prepare_[k];exit_to_user_mode_loop_[k];task_work_run_[k];task_mm_cid_work_[k] 32581592
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_exit_to_user_mode_[k];exit_to_user_mode_prepare_[k];fpregs_assert_state_consistent_[k] 1049019420
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_exit_to_user_mode_[k];exit_to_user_mode_prepare_[k];srso_safe_ret_[k] 15137033
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_exit_to_user_mode_[k];exit_to_user_mode_prepare_[k];switch_fpu_return_[k] 3006038
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_exit_to_user_mode_[k];exit_to_user_mode_prepare_[k];switch_fpu_return_[k];restore_fpregs_from_fpstate_[k] 230705303
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_exit_to_user_mode_[k];fpregs_assert_state_consistent_[k] 1913859966
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_exit_to_user_mode_[k];srso_safe_ret_[k] 1382746410
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];srso_return_thunk_[k] 542591349
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];srso_safe_ret_[k] 4922406908
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];syscall_enter_from_user_mode_[k] 1998871365
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_after_hwframe_[k];syscall_exit_to_user_mode_[k] 2107086274
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSCALL_64_safe_stack_[k] 2810976465
BioCMA-MCST_cli;[unknown];__sched_yield;entry_SYSRETQ_unsafe_stack_[k] 2093663082
BioCMA-MCST_cli;[unknown];__sched_yield;entry_untrain_ret_[k] 2905037769
BioCMA-MCST_cli;[unknown];__sched_yield;irq_enter_rcu_[k] 21887017
BioCMA-MCST_cli;[unknown];__sched_yield;srso_safe_ret_[k] 20150106325
BioCMA-MCST_cli;[unknown];__sched_yield;syscall_return_via_sysret_[k] 8886215050
BioCMA-MCST_cli;[unknown];_int_free 1183919576
BioCMA-MCST_cli;[unknown];dgemm_kernel_ZEN 461930954
BioCMA-MCST_cli;[unknown];dgemm_oncopy_ZEN 1404913944
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;MC::ReactorDomain::setLiquidNeighbors;std::vector<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > >::operator=;std::vector<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > >::_M_move_assign;std::vector<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > >::~vector;void std::_Destroy<std::vector<unsigned long, std::allocator<unsigned long> >*, std::vector<unsigned long, std::allocator<unsigned long> > >;void std::_Destroy<std::vector<unsigned long, std::allocator<unsigned long> >*>;void std::_Destroy_aux<false>::__destroy<std::vector<unsigned long, std::allocator<unsigned long> >*>;void std::_Destroy<std::vector<unsigned long, std::allocator<unsigned long> > >;void std::destroy_at<std::vector<unsigned long, std::allocator<unsigned long> > > 36413668
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::SimulationUnit::post_process_reducing;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::MatrixBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::operator+=<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::call_assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;void Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::add_assign_op<double, double>, 0>::assignPacket<16, 16, double __vector;double __vector;double __vector 81116470
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::SimulationUnit::post_process_reducing;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::MatrixBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::operator+=<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::call_assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;void Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::add_assign_op<double, double>, 0>::assignPacket<16, 16, double __vector;void Eigen::internal::add_assign_op<double, double>::assignPacket<16, double __vector;double __vector 24180636
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::operator 626744340
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Eigen::SparseMatrix<double, 0, int>::coeff 315858759
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP 2187830001
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::DenseBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false> >::operator/=;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >, Eigen::internal::div_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >, Eigen::internal::div_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >, Eigen::internal::div_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >, Eigen::internal::div_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false> >::evaluator;Eigen::internal::block_evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator 32906736
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::DenseBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false> >::operator/=;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >, Eigen::internal::div_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >, Eigen::internal::div_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >, Eigen::internal::div_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >, Eigen::internal::div_assign_op<double, double> >;void Eigen::internal::resize_if_allowed<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >, Eigen::internal::div_assign_op<double, double> >;Eigen::internal::variable_if_dynamic<long, 1>::value 64947762
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::DenseBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::row;Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>::Block;Eigen::BlockImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false, true>::BlockImpl_dense;Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, 1>::MapBase;Eigen::MapBase<Eigen::Block<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1, -1, false>, 0>::MapBase;Eigen::internal::variable_if_dynamic<long, 1>::variable_if_dynamic 24182507
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::coeffRef 32247168
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::operator 313456315
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::operator;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::coeffRef 613998123
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::operator;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::coeffRef;Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::derived 154743542
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::operator;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::coeffRef;Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::evaluator 300475332
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::operator;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::coeffRef;Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::evaluator;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 3>::outerStride 68760441
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::operator;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::coeffRef;Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::evaluator;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::data 32831684
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::operator;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::coeffRef;Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::evaluator;Eigen::internal::evaluator<Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::evaluator 482236280
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::operator;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::coeffRef;Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::evaluator;Eigen::internal::evaluator<Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::evaluator;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 3>::outerStride 265790337
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::operator;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::coeffRef;Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::evaluator;Eigen::internal::evaluator<Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::evaluator;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 3>::outerStride;Eigen::DenseBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::innerSize 30323441
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::operator;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::coeffRef;Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::evaluator;Eigen::internal::evaluator<Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::evaluator;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 3>::outerStride;Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::derived 239601865
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::operator;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::coeffRef;Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::evaluator;Eigen::internal::evaluator<Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::evaluator;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 3>::outerStride;Eigen::Matrix<double, -1, -1, 0, -1, -1>::outerStride 197533800
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::operator;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::coeffRef;Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::evaluator;Eigen::internal::evaluator<Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::evaluator;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 3>::outerStride;Eigen::Matrix<double, -1, -1, 0, -1, -1>::outerStride;Eigen::DenseBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::innerSize 213408874
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::operator;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::coeffRef;Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::evaluator;Eigen::internal::evaluator<Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::evaluator;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 3>::outerStride;Eigen::Matrix<double, -1, -1, 0, -1, -1>::outerStride;Eigen::DenseBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::innerSize;Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows 180169479
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::operator;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::coeffRef;Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::evaluator;Eigen::internal::evaluator<Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::evaluator;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 3>::outerStride;Eigen::Matrix<double, -1, -1, 0, -1, -1>::outerStride;Eigen::DenseBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::innerSize;Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows;Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::derived 390548457
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::operator;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::coeffRef;Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::evaluator;Eigen::internal::evaluator<Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::evaluator;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 3>::outerStride;Eigen::Matrix<double, -1, -1, 0, -1, -1>::outerStride;Eigen::DenseBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::innerSize;Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows 243371705
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::operator;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::coeffRef;Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::evaluator;Eigen::internal::evaluator<Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::evaluator;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 3>::outerStride;Eigen::Matrix<double, -1, -1, 0, -1, -1>::outerStride;Eigen::DenseBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::innerSize;Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows;Eigen::DenseStorage<double, -1, -1, -1, 0>::rows 464603603
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::operator;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::coeffRef;Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::evaluator;Eigen::internal::evaluator<Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::evaluator;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 3>::outerStride;Eigen::Matrix<double, -1, -1, 0, -1, -1>::outerStride;Eigen::DenseBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::innerSize;Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows;Eigen::DenseStorage<double, -1, -1, -1, 0>::rows;asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];irqentry_exit_[k];irqentry_exit_to_user_mode_[k];exit_to_user_mode_prepare_[k];exit_to_user_mode_loop_[k];task_work_run_[k];task_mm_cid_work_[k] 23396099
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::operator;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::coeffRef;Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::evaluator;Eigen::internal::evaluator<Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::evaluator;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::data 119480157
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::operator;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::coeffRef;Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::evaluator;Eigen::internal::evaluator<Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::evaluator;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::data;Eigen::DenseStorage<double, -1, -1, -1, 0>::data 478876353
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::operator;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::coeffRef;Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::evaluator;Eigen::internal::evaluator<Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::evaluator;Eigen::internal::evaluator_base<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::evaluator_base 58820380
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::operator;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::coeffRef;Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::evaluator;Eigen::internal::evaluator<Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::evaluator;Eigen::internal::plainobjectbase_evaluator_data<double, -1>::plainobjectbase_evaluator_data 304459005
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::operator;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::coeffRef;Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::evaluator;Eigen::internal::evaluator_base<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::evaluator_base 323206349
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::operator;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::coeffRef;Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::evaluator;Eigen::internal::plainobjectbase_evaluator_data<double, -1>::plainobjectbase_evaluator_data 24153984
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::operator;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::coeffRef;Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::~evaluator 125289383
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::operator;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::coeffRef;Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::~evaluator;Eigen::internal::evaluator<Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::~evaluator 434660890
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::operator;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::coeffRef;Eigen::internal::evaluator<Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::coeffRef 818133232
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::operator;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::coeffRef;Eigen::internal::evaluator<Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::coeffRef;Eigen::internal::plainobjectbase_evaluator_data<double, -1>::outerStride 428151452
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::operator;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::coeffRef;Eigen::internal::evaluator<Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::coeffRef;asm_common_interrupt_[k];common_interrupt_[k];__common_interrupt_[k];handle_edge_irq_[k];handle_irq_event_[k];__handle_irq_event_percpu_[k];amdgpu_irq_handler_[k];amdgpu_ih_process_[k];amdgpu_irq_dispatch_[k];amdgpu_dm_irq_handler_[k];dm_dcn_vertical_interrupt0_high_irq_[k];amdgpu_dm_crtc_handle_crc_window_irq_[k];_raw_spin_unlock_irqrestore_[k] 31932700
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::operator;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::coeffRef;Eigen::internal::evaluator<Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::~evaluator 104291032
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::operator;Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::cols 187231207
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::operator;Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::cols;Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::derived 271611300
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::operator;Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::cols;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::cols 418101632
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::operator;Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::cols;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::cols;Eigen::DenseStorage<double, -1, -1, -1, 0>::cols 346816100
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::operator;Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::derived 207331372
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::operator;Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows 60187965
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::operator;Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows;Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::derived 58516366
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::operator;Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows 223431099
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::operator;Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows;Eigen::DenseStorage<double, -1, -1, -1, 0>::rows 389560280
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::operator;Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::evaluator 92478447
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::operator;Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::~evaluator 121201563
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::DenseCoeffsBase<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 1>::operator;Eigen::internal::evaluator<Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::coeffRef 35187002
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::cols 35195230
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows 124596071
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::SparseMatrix<double, 0, int>::coeff 1702832034
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::SparseMatrix<double, 0, int>::coeff;Eigen::SparseMatrix<double, 0, int>::cols 379314527
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::SparseMatrix<double, 0, int>::coeff;Eigen::SparseMatrix<double, 0, int>::rows 346506789
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::SparseMatrix<double, 0, int>::coeff;Eigen::internal::CompressedStorage<double, int>::atInRange 1778486769
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::SparseMatrix<double, 0, int>::coeff;Eigen::internal::CompressedStorage<double, int>::atInRange;Eigen::internal::CompressedStorage<double, int>::searchLowerIndex 556283743
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::SparseMatrix<double, 0, int>::coeff;Eigen::internal::CompressedStorage<double, int>::atInRange;Eigen::internal::CompressedStorage<double, int>::searchLowerIndex;__gnu_cxx::__ops::__iter_less_val 46710865
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::SparseMatrix<double, 0, int>::coeff;Eigen::internal::CompressedStorage<double, int>::atInRange;Eigen::internal::CompressedStorage<double, int>::searchLowerIndex;asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];irq_exit_rcu_[k];__irq_exit_rcu_[k];__do_softirq_[k];run_rebalance_domains_[k];rebalance_domains_[k];load_balance_[k] 33076064
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::SparseMatrix<double, 0, int>::coeff;Eigen::internal::CompressedStorage<double, int>::atInRange;Eigen::internal::CompressedStorage<double, int>::searchLowerIndex;int* std::lower_bound<int*, long> 329682101
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::SparseMatrix<double, 0, int>::coeff;Eigen::internal::CompressedStorage<double, int>::atInRange;Eigen::internal::CompressedStorage<double, int>::searchLowerIndex;int* std::lower_bound<int*, long>;bool __gnu_cxx::__ops::_Iter_less_val::operator 67703283
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::SparseMatrix<double, 0, int>::coeff;Eigen::internal::CompressedStorage<double, int>::atInRange;Eigen::internal::CompressedStorage<double, int>::searchLowerIndex;int* std::lower_bound<int*, long>;int* std::__lower_bound<int*, long, __gnu_cxx::__ops::_Iter_less_val> 2146215738
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::SparseMatrix<double, 0, int>::coeff;Eigen::internal::CompressedStorage<double, int>::atInRange;Eigen::internal::CompressedStorage<double, int>::searchLowerIndex;int* std::lower_bound<int*, long>;int* std::__lower_bound<int*, long, __gnu_cxx::__ops::_Iter_less_val>;asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];scheduler_tick_[k];update_cfs_group_[k] 30852934
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::SparseMatrix<double, 0, int>::coeff;Eigen::internal::CompressedStorage<double, int>::atInRange;Eigen::internal::CompressedStorage<double, int>::searchLowerIndex;int* std::lower_bound<int*, long>;int* std::__lower_bound<int*, long, __gnu_cxx::__ops::_Iter_less_val>;bool __gnu_cxx::__ops::_Iter_less_val::operator 740064240
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::SparseMatrix<double, 0, int>::coeff;Eigen::internal::CompressedStorage<double, int>::atInRange;Eigen::internal::CompressedStorage<double, int>::searchLowerIndex;int* std::lower_bound<int*, long>;int* std::__lower_bound<int*, long, __gnu_cxx::__ops::_Iter_less_val>;std::iterator_traits<int*>::difference_type std::distance<int*> 293552072
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::SparseMatrix<double, 0, int>::coeff;Eigen::internal::CompressedStorage<double, int>::atInRange;Eigen::internal::CompressedStorage<double, int>::searchLowerIndex;int* std::lower_bound<int*, long>;int* std::__lower_bound<int*, long, __gnu_cxx::__ops::_Iter_less_val>;std::iterator_traits<int*>::difference_type std::distance<int*>;std::iterator_traits<int*>::difference_type std::__distance<int*> 320496760
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::SparseMatrix<double, 0, int>::coeff;Eigen::internal::CompressedStorage<double, int>::atInRange;Eigen::internal::CompressedStorage<double, int>::searchLowerIndex;int* std::lower_bound<int*, long>;int* std::__lower_bound<int*, long, __gnu_cxx::__ops::_Iter_less_val>;std::iterator_traits<int*>::difference_type std::distance<int*>;std::iterator_traits<int*>::iterator_category std::__iterator_category<int*> 102452643
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::SparseMatrix<double, 0, int>::coeff;Eigen::internal::CompressedStorage<double, int>::atInRange;Eigen::internal::CompressedStorage<double, int>::searchLowerIndex;int* std::lower_bound<int*, long>;int* std::__lower_bound<int*, long, __gnu_cxx::__ops::_Iter_less_val>;std::iterator_traits<int*>::iterator_category std::__iterator_category<int*> 462022592
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::SparseMatrix<double, 0, int>::coeff;Eigen::internal::CompressedStorage<double, int>::atInRange;Eigen::internal::CompressedStorage<double, int>::searchLowerIndex;int* std::lower_bound<int*, long>;int* std::__lower_bound<int*, long, __gnu_cxx::__ops::_Iter_less_val>;void std::advance<int*, long> 1056400240
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::SparseMatrix<double, 0, int>::coeff;Eigen::internal::CompressedStorage<double, int>::atInRange;Eigen::internal::CompressedStorage<double, int>::searchLowerIndex;int* std::lower_bound<int*, long>;int* std::__lower_bound<int*, long, __gnu_cxx::__ops::_Iter_less_val>;void std::advance<int*, long>;std::iterator_traits<int*>::iterator_category std::__iterator_category<int*> 60293210
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::SparseMatrix<double, 0, int>::coeff;Eigen::internal::CompressedStorage<double, int>::atInRange;Eigen::internal::CompressedStorage<double, int>::searchLowerIndex;int* std::lower_bound<int*, long>;int* std::__lower_bound<int*, long, __gnu_cxx::__ops::_Iter_less_val>;void std::advance<int*, long>;void std::__advance<int*, long> 810866480
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::SparseMatrix<double, 0, int>::coeff;Eigen::internal::CompressedStorage<double, int>::atInRange;Eigen::internal::CompressedStorage<double, int>::searchLowerIndex;int* std::lower_bound<int*, long>;std::iterator_traits<int*>::difference_type std::distance<int*> 34382645
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::SparseMatrix<double, 0, int>::coeff;Eigen::internal::CompressedStorage<double, int>::atInRange;Eigen::internal::CompressedStorage<double, int>::searchLowerIndex;int* std::lower_bound<int*, long>;void std::advance<int*, long> 29651431
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::SparseMatrix<double, 0, int>::coeff;Eigen::internal::CompressedStorage<double, int>::atInRange;Eigen::internal::CompressedStorage<double, int>::searchLowerIndex;std::iterator_traits<int*>::difference_type std::distance<int*> 168550428
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::SparseMatrix<double, 0, int>::coeff;Eigen::internal::CompressedStorage<double, int>::atInRange;Eigen::internal::CompressedStorage<double, int>::searchLowerIndex;std::iterator_traits<int*>::difference_type std::distance<int*>;std::iterator_traits<int*>::difference_type std::__distance<int*> 229909691
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::SparseMatrix<double, 0, int>::coeff;Eigen::internal::CompressedStorage<double, int>::atInRange;Eigen::internal::CompressedStorage<double, int>::searchLowerIndex;std::iterator_traits<int*>::iterator_category std::__iterator_category<int*> 166733095
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::SparseMatrix<double, 0, int>::coeff;Eigen::internal::CompressedStorage<double, int>::atInRange;int* std::lower_bound<int*, long> 24163366
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::SparseMatrix<double, 0, int>::coeff;Eigen::internal::CompressedStorage<double, int>::searchLowerIndex 106374746
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::SparseMatrix<double, 0, int>::cols 91116596
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::SparseMatrix<double, 0, int>::rows 63669454
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;Eigen::internal::CompressedStorage<double, int>::atInRange 32226259
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::cycle_process;Simulation::pbf;Simulation::get_CP;[unknown];Eigen::internal::CompressedStorage<double, int>::atInRange;asm_sysvec_apic_timer_interrupt_[k] 24174074
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> const> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> const> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> const> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> const>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> const>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> const>, Eigen::internal::assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> const> >, Eigen::internal::assign_op<double, double>, 0>, 4, 0>::run;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> const> >, Eigen::internal::assign_op<double, double>, 0>::assignCoeffByOuterInner;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> const> >, Eigen::internal::assign_op<double, double>, 0>::assignCoeff;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::coeff;Eigen::internal::evaluator_wrapper_base<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> > >::coeff 36543051
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> const> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> const> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> const> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> const>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> const>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> const>, Eigen::internal::assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> const> >, Eigen::internal::assign_op<double, double>, 0>, 4, 0>::run;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> const> >, Eigen::internal::assign_op<double, double>, 0>::assignCoeffByOuterInner;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> const> >, Eigen::internal::assign_op<double, double>, 0>::assignCoeff;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::coeff;Eigen::internal::product_evaluator<Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1>, 8, Eigen::DenseShape, Eigen::DiagonalShape, double, double>::coeff;Eigen::internal::evaluator_wrapper_base<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> > >::coeff;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::coeff 22356258
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1>, Eigen::internal::assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> >, Eigen::internal::assign_op<double, double>, 0>, 4, 0>::run;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> >, Eigen::internal::assign_op<double, double>, 0>::assignCoeffByOuterInner;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> >, Eigen::internal::assign_op<double, double>, 0>::assignCoeff;Eigen::internal::product_evaluator<Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1>, 8, Eigen::DenseShape, Eigen::DiagonalShape, double, double>::coeff 32109382
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1>, Eigen::internal::assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> >, Eigen::internal::assign_op<double, double>, 0>, 4, 0>::run;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> >, Eigen::internal::assign_op<double, double>, 0>::assignCoeffByOuterInner;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> >, Eigen::internal::assign_op<double, double>, 0>::assignCoeff;Eigen::internal::product_evaluator<Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1>, 8, Eigen::DenseShape, Eigen::DiagonalShape, double, double>::coeff;Eigen::internal::evaluator_wrapper_base<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> > >::coeff;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::coeff;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::coeff;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::coeff;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::coeff;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::coeff 22433762
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1>, Eigen::internal::assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> >, Eigen::internal::assign_op<double, double>, 0>, 4, 0>::run;void Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> >, Eigen::internal::assign_op<double, double>, 0>::assignPacketByOuterInner<16, 0, double __vector;void Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> >, Eigen::internal::assign_op<double, double>, 0>::assignPacket<16, 0, double __vector;Eigen::internal::evaluator<Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::coeffRef 32247890
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1>, Eigen::internal::assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> >, Eigen::internal::assign_op<double, double>, 0>, 4, 0>::run;void Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> >, Eigen::internal::assign_op<double, double>, 0>::assignPacketByOuterInner<16, 0, double __vector;void Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> >, Eigen::internal::assign_op<double, double>, 0>::assignPacket<16, 0, double __vector;double __vector;double __vector 33181408
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1>, Eigen::internal::assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> >, Eigen::internal::assign_op<double, double>, 0>, 4, 0>::run;void Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> >, Eigen::internal::assign_op<double, double>, 0>::assignPacketByOuterInner<16, 0, double __vector;void Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> >, Eigen::internal::assign_op<double, double>, 0>::assignPacket<16, 0, double __vector;double __vector;double __vector;double __vector;double __vector;double __vector;double __vector 24177095
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1>, Eigen::internal::assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> >, Eigen::internal::assign_op<double, double>, 0>, 4, 0>::run;void Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> >, Eigen::internal::assign_op<double, double>, 0>::assignPacketByOuterInner<16, 0, double __vector;void Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::MatrixWrapper<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::Array<double, -1, -1, 0, -1, -1> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Array<double, -1, -1, 0, -1, -1> const> const> const, Eigen::ArrayWrapper<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const> const> >, Eigen::DiagonalMatrix<double, -1, -1>, 1> >, Eigen::internal::assign_op<double, double>, 0>::assignPacket<16, 0, double __vector;double __vector;double __vector;double __vector;double __vector;double __vector;double __vector;double __vector;double __vector;double __vector;double __vector;double __vector;double __vector 30720900
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::Matrix<double, -1, -1, 0, -1, -1>::operator=<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0> >;void Eigen::internal::call_assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0> >;void Eigen::internal::call_assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0> >;void Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_init1<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::DenseShape, Eigen::DenseShape, 8>::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::DenseShape, Eigen::DenseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::parallelize_gemm<true, Eigen::internal::gemm_functor<double, long, Eigen::internal::general_matrix_matrix_product<long, double, 0, false, double, 0, false, 0, 1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::internal::gemm_blocking_space<0, double, double, -1, -1, -1, 1, false> >, long>;Eigen::internal::gemm_functor<double, long, Eigen::internal::general_matrix_matrix_product<long, double, 0, false, double, 0, false, 0, 1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::internal::gemm_blocking_space<0, double, double, -1, -1, -1, 1, false> >::operator 35785276
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::Matrix<double, -1, -1, 0, -1, -1>::operator=<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0> >;void Eigen::internal::call_assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0> >;void Eigen::internal::call_assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::internal::assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::internal::assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::assign_op<double, double>, 0>, 3, 0>::run;void Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::assign_op<double, double>, 0>::assignPacket<16, 16, double __vector;double __vector 34812889
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::MatrixBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const> >;void Eigen::internal::call_assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;void Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const> >, Eigen::internal::add_assign_op<double, double>, 0>::assignPacket<16, 16, double __vector;double __vector;double __vector;double __vector;double __vector 69821337
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::MatrixBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const> >;void Eigen::internal::call_assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;void Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<double, double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> const, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const, Eigen::Matrix<double, -1, -1, 0, -1, -1> const> const> >, Eigen::internal::add_assign_op<double, double>, 0>::assignPacket<16, 16, double __vector;double __vector;double __vector;double __vector;double __vector;double __vector 32225342
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::DiagonalWrapper<Eigen::CwiseUnaryOp<Eigen::internal::scalar_inverse_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> const> const> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::DiagonalWrapper<Eigen::CwiseUnaryOp<Eigen::internal::scalar_inverse_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> const> const> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::operator=<Eigen::DiagonalWrapper<Eigen::CwiseUnaryOp<Eigen::internal::scalar_inverse_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> const> const> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::MatrixBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::operator=<Eigen::DiagonalWrapper<Eigen::CwiseUnaryOp<Eigen::internal::scalar_inverse_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> const> const> >;void Eigen::internal::call_assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::DiagonalWrapper<Eigen::CwiseUnaryOp<Eigen::internal::scalar_inverse_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> const> const> >;void Eigen::internal::call_assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::DiagonalWrapper<Eigen::CwiseUnaryOp<Eigen::internal::scalar_inverse_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> const> const>, Eigen::internal::assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::DiagonalWrapper<Eigen::CwiseUnaryOp<Eigen::internal::scalar_inverse_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> const> const>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::DiagonalWrapper<Eigen::CwiseUnaryOp<Eigen::internal::scalar_inverse_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> const> const>, Eigen::internal::assign_op<double, double>, Eigen::internal::Diagonal2Dense, void>::run;Eigen::DenseBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::setZero;Eigen::DenseBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::setConstant;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::Matrix<double, -1, -1, 0, -1, -1>::operator=<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> > >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> > >;void Eigen::internal::call_assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> > >;void Eigen::internal::call_assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;double* std::fill_n<double*, long, double>;double* std::__fill_n_a<double*, long, double>;void std::__fill_a<double*, double>;__gnu_cxx::__enable_if<std::__is_scalar<double>::__value, void>::__type std::__fill_a1<double*, double> 658883276
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::DiagonalWrapper<Eigen::CwiseUnaryOp<Eigen::internal::scalar_inverse_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> const> const> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::DiagonalWrapper<Eigen::CwiseUnaryOp<Eigen::internal::scalar_inverse_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> const> const> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::operator=<Eigen::DiagonalWrapper<Eigen::CwiseUnaryOp<Eigen::internal::scalar_inverse_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> const> const> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::MatrixBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::operator=<Eigen::DiagonalWrapper<Eigen::CwiseUnaryOp<Eigen::internal::scalar_inverse_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> const> const> >;void Eigen::internal::call_assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::DiagonalWrapper<Eigen::CwiseUnaryOp<Eigen::internal::scalar_inverse_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> const> const> >;void Eigen::internal::call_assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::DiagonalWrapper<Eigen::CwiseUnaryOp<Eigen::internal::scalar_inverse_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> const> const>, Eigen::internal::assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::DiagonalWrapper<Eigen::CwiseUnaryOp<Eigen::internal::scalar_inverse_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> const> const>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::DiagonalWrapper<Eigen::CwiseUnaryOp<Eigen::internal::scalar_inverse_op<double>, Eigen::Matrix<double, -1, 1, 0, -1, 1> const> const>, Eigen::internal::assign_op<double, double>, Eigen::internal::Diagonal2Dense, void>::run;Eigen::DenseBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::setZero;Eigen::DenseBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::setConstant;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::Matrix<double, -1, -1, 0, -1, -1>::operator=<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> > >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> > >;void Eigen::internal::call_assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> > >;void Eigen::internal::call_assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;double* std::fill_n<double*, long, double>;double* std::__fill_n_a<double*, long, double>;void std::__fill_a<double*, double>;__gnu_cxx::__enable_if<std::__is_scalar<double>::__value, void>::__type std::__fill_a1<double*, double>;asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];enqueue_hrtimer_[k];timerqueue_add_[k] 33047476
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0> >;void Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_init1<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::DenseShape, Eigen::DenseShape, 8>::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::DenseShape, Eigen::DenseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;Eigen::internal::gemm_blocking_space<0, double, double, -1, -1, -1, 1, false>::gemm_blocking_space;void Eigen::internal::computeProductBlockingSizes<double, double, 1, long>;void Eigen::internal::evaluateProductBlockingSizesHeuristic<double, double, 1, long>;Eigen::internal::manage_caching_sizes 24164591
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> > 272497157
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type, double>, Eigen::internal::plain_constant_type<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type>::type const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> const Eigen::operator*<double> 170377533
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row 152414076
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::SparseCompressedBase<Eigen::SparseMatrix<double, 0, int> >::InnerIterator::operator bool 48362731
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::SparseCompressedBase<Eigen::SparseMatrix<double, 0, int> >::InnerIterator::operator++ 957799105
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::SparseCompressedBase<Eigen::SparseMatrix<double, 0, int> >::InnerIterator::value 308774192
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow 3068373709
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block 150459400
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> > 2630312219
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;Eigen::EigenBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::derived 1215969171
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;Eigen::EigenBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::derived;asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];rcu_sched_clock_irq_[k] 26115219
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;Eigen::EigenBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::derived 707964094
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;Eigen::EigenBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::derived;asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];irq_exit_rcu_[k];__irq_exit_rcu_[k];__do_softirq_[k];run_rebalance_domains_[k];update_blocked_averages_[k] 23659857
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> > 1696264320
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run 868683195
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> > 2099904362
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run 1645780877
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;Eigen::EigenBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::const_cast_derived 492491435
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run 159117310
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::evaluator 269336107
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::~evaluator 359302496
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator 492687964
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::~evaluator 511399263
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::generic_dense_assignment_kernel 79405686
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];scheduler_tick_[k];perf_event_task_tick_[k];perf_adjust_freq_unthr_context_[k] 35822043
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> > 3974604680
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::cols 32776653
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::rows 292927051
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::EigenBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::const_cast_derived 398252270
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::EigenBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::const_cast_derived;asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];irqentry_exit_[k];irqentry_exit_to_user_mode_[k];exit_to_user_mode_prepare_[k];exit_to_user_mode_loop_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];__rcu_read_unlock_[k] 1838103
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::MapBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, 0>::cols 97949261
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::MapBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, 0>::rows 424544466
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator 31801112
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::~binary_evaluator 481482199
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::block_evaluator 297956471
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::~block_evaluator 228993237
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run 2326340043
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;Eigen::MapBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, 1>::data 32729931
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::assignCoeff 32769364
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::dstDataPtr 858077245
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::dstDataPtr;Eigen::MapBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, 1>::data 930759638
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::size 996811413
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::size;Eigen::EigenBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::cols 147671837
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::size;Eigen::EigenBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::rows 179235113
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::size;Eigen::EigenBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::size 788640366
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::size;Eigen::EigenBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::size;Eigen::EigenBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::cols 358419374
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::size;Eigen::EigenBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::size;Eigen::EigenBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::cols;Eigen::EigenBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::derived 464900395
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::size;Eigen::EigenBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::size;Eigen::EigenBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::cols;Eigen::MapBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, 0>::cols 562105406
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::size;Eigen::EigenBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::size;Eigen::EigenBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::cols;Eigen::MapBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, 0>::cols;Eigen::internal::variable_if_dynamic<long, -1>::value 1346087453
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::size;Eigen::EigenBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::size;Eigen::EigenBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::derived 55597987
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::size;Eigen::EigenBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::size;Eigen::EigenBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::rows 824945804
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::size;Eigen::EigenBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::size;Eigen::EigenBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::rows;Eigen::EigenBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::derived 637273951
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::size;Eigen::EigenBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::size;Eigen::EigenBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::rows;Eigen::MapBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, 0>::rows 57730450
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::size;Eigen::EigenBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::size;Eigen::EigenBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::rows;Eigen::MapBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, 0>::rows;Eigen::internal::variable_if_dynamic<long, 1>::value 66117265
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::size;Eigen::EigenBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::size;Eigen::EigenBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::rows;Eigen::internal::variable_if_dynamic<long, 1>::value 32168349
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::size;Eigen::EigenBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::size;Eigen::MapBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, 0>::cols 64765432
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::size;Eigen::EigenBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::size;Eigen::MapBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, 0>::rows 116336811
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::size;Eigen::EigenBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::size;asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];task_tick_mm_cid_[k] 24179288
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::coeffRef 62534464
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];scheduler_tick_[k];arch_scale_freq_tick_[k];native_read_msr_[k] 23909112
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];irqentry_exit_[k];irqentry_exit_to_user_mode_[k];exit_to_user_mode_prepare_[k];exit_to_user_mode_loop_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];__perf_event_task_sched_in_[k] 1924403
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;double __vector 177932300
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;long Eigen::internal::first_aligned<16, double, long> 1569774936
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;void Eigen::internal::add_assign_op<double, double>::assignPacket<16, double __vector 62356981
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;void Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::assignPacket<16, 0, double __vector 1350344600
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;void Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::assignPacket<16, 0, double __vector;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::func 101923948
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;void Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::assignPacket<16, 0, double __vector;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::coeffRef 1342812477
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;void Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::assignPacket<16, 0, double __vector;Eigen::internal::variable_if_dynamic<long, 1>::value 67915488
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;void Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::assignPacket<16, 0, double __vector;double __vector 2056539278
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;void Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::assignPacket<16, 0, double __vector;double __vector;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::func 549261467
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;void Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::assignPacket<16, 0, double __vector;double __vector;Eigen::internal::variable_if_dynamic<long, 1>::value 90666481
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;void Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::assignPacket<16, 0, double __vector;double __vector;double __vector 3206886975
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;void Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::assignPacket<16, 0, double __vector;double __vector;double __vector;double __vector 3959604523
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;void Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::assignPacket<16, 0, double __vector;double __vector;double __vector;double __vector;double __vector 507445518
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;void Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::assignPacket<16, 0, double __vector;double __vector;double __vector;double __vector;double __vector;double __vector 1907059349
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;void Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::assignPacket<16, 0, double __vector;void Eigen::internal::add_assign_op<double, double>::assignPacket<16, double __vector 1606581129
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;void Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::assignPacket<16, 0, double __vector;void Eigen::internal::add_assign_op<double, double>::assignPacket<16, double __vector;asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_do_timer_[k];tick_do_update_jiffies64_[k];update_wall_time_[k];timekeeping_advance_[k];timekeeping_update_[k];raw_notifier_call_chain_[k];notifier_call_chain_[k] 24169084
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;void Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::assignPacket<16, 0, double __vector;void Eigen::internal::add_assign_op<double, double>::assignPacket<16, double __vector;double __vector 3351217385
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;void Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::assignPacket<16, 0, double __vector;void Eigen::internal::add_assign_op<double, double>::assignPacket<16, double __vector;double __vector;asm_common_interrupt_[k];common_interrupt_[k];__common_interrupt_[k];handle_edge_irq_[k];handle_irq_event_[k];__handle_irq_event_percpu_[k];amdgpu_irq_handler_[k];amdgpu_ih_process_[k];amdgpu_irq_dispatch_[k];amdgpu_dm_irq_handler_[k];dm_crtc_high_irq_[k];amdgpu_dm_crtc_handle_vblank_[k];drm_crtc_handle_vblank_[k];drm_handle_vblank_[k];drm_update_vblank_count_[k];drm_crtc_get_last_vbltimestamp_[k];drm_crtc_vblank_helper_get_vblank_timestamp_[k];drm_crtc_vblank_helper_get_vblank_timestamp_internal_[k];amdgpu_crtc_get_scanout_position_[k];amdgpu_display_get_crtc_scanoutpos_[k];read_tsc_[k] 36492899
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;void Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::assignPacket<16, 0, double __vector;void Eigen::internal::add_assign_op<double, double>::assignPacket<16, double __vector;void Eigen::internal::pstore<double, double __vector 1324624007
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;void Eigen::internal::unaligned_dense_assignment_loop<false>::run<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0> > 1275635243
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;void Eigen::internal::unaligned_dense_assignment_loop<false>::run<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0> >;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::assignCoeff 1180510643
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;void Eigen::internal::unaligned_dense_assignment_loop<false>::run<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0> >;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::assignCoeff;Eigen::internal::add_assign_op<double, double>::assignCoeff 909044350
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;void Eigen::internal::unaligned_dense_assignment_loop<false>::run<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0> >;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::assignCoeff;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::func 108568301
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;void Eigen::internal::unaligned_dense_assignment_loop<false>::run<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0> >;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::assignCoeff;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::coeff 2242728975
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;void Eigen::internal::unaligned_dense_assignment_loop<false>::run<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0> >;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::assignCoeff;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::coeff;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::func 521714763
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;void Eigen::internal::unaligned_dense_assignment_loop<false>::run<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0> >;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::assignCoeff;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::coeff;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::coeff 2070797067
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;void Eigen::internal::unaligned_dense_assignment_loop<false>::run<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0> >;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::assignCoeff;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::coeff;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::coeff;asm_common_interrupt_[k];common_interrupt_[k];__common_interrupt_[k];handle_edge_irq_[k];handle_irq_event_[k];__handle_irq_event_percpu_[k];amdgpu_irq_handler_[k];amdgpu_ih_process_[k];amdgpu_irq_dispatch_[k];amdgpu_dm_irq_handler_[k];dm_crtc_high_irq_[k];drm_crtc_handle_vblank_[k] 33835202
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;void Eigen::internal::unaligned_dense_assignment_loop<false>::run<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0> >;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::assignCoeff;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::coeff;Eigen::internal::scalar_product_op<double, double>::operator 1198934336
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;void Eigen::internal::unaligned_dense_assignment_loop<false>::run<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0> >;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::assignCoeff;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::coeff;Eigen::internal::variable_if_dynamic<long, 1>::value 59375707
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;void Eigen::internal::unaligned_dense_assignment_loop<false>::run<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0> >;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::assignCoeff;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::coeff;double Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> >::coeff<long> 661597958
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;void Eigen::internal::unaligned_dense_assignment_loop<false>::run<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0> >;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::assignCoeff;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::coeff;double Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> >::coeff<long>;asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];scheduler_tick_[k];perf_event_task_tick_[k];perf_adjust_freq_unthr_context_[k] 24174292
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;void Eigen::internal::unaligned_dense_assignment_loop<false>::run<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0> >;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::assignCoeff;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::coeff;double Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> >::coeff<long>;double Eigen::internal::nullary_wrapper<double, Eigen::internal::scalar_constant_op<double>, true, false, false>::operator 623241683
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;void Eigen::internal::unaligned_dense_assignment_loop<false>::run<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0> >;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::assignCoeff;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::coeff;double Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> >::coeff<long>;double Eigen::internal::nullary_wrapper<double, Eigen::internal::scalar_constant_op<double>, true, false, false>::operator;Eigen::internal::scalar_constant_op<double>::operator 1052277055
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;void Eigen::internal::unaligned_dense_assignment_loop<false>::run<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0> >;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::assignCoeff;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::coeff;double Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> >::coeff<long>;double Eigen::internal::nullary_wrapper<double, Eigen::internal::scalar_constant_op<double>, true, false, false>::operator;Eigen::internal::scalar_constant_op<double>::operator;asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];irq_exit_rcu_[k];__irq_exit_rcu_[k];__do_softirq_[k];run_rebalance_domains_[k];rebalance_domains_[k];group_balance_cpu_[k] 30177031
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;void Eigen::internal::unaligned_dense_assignment_loop<false>::run<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0> >;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::assignCoeff;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::coeff;double Eigen::internal::nullary_wrapper<double, Eigen::internal::scalar_constant_op<double>, true, false, false>::operator 129002037
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;void Eigen::internal::unaligned_dense_assignment_loop<false>::run<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0> >;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::assignCoeff;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::coeff 24146432
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;void Eigen::internal::unaligned_dense_assignment_loop<false>::run<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0> >;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::assignCoeff;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::coeffRef 201655439
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;void Eigen::internal::unaligned_dense_assignment_loop<false>::run<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0> >;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::assignCoeff;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::coeffRef;Eigen::internal::variable_if_dynamic<long, 1>::value 88935545
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;void Eigen::internal::unaligned_dense_assignment_loop<false>::run<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0> >;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::assignCoeff;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::coeffRef;asm_sysvec_apic_timer_interrupt_[k];srso_safe_ret_[k] 32320300
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;void Eigen::internal::unaligned_dense_assignment_loop<false>::run<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0> >;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::assignCoeff;Eigen::internal::scalar_product_op<double, double>::operator 141594903
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;void Eigen::internal::unaligned_dense_assignment_loop<false>::run<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0> >;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::assignCoeff;asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_do_timer_[k];_raw_spin_lock_[k] 24181981
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;void Eigen::internal::unaligned_dense_assignment_loop<false>::run<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0> >;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::coeffRef 250536614
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::evaluator 720939448
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::block_evaluator 833907099
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::block_evaluator;Eigen::MapBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, 1>::data 81194947
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::block_evaluator;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::innerStride 346086888
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::block_evaluator;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::outerStride 152250364
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::block_evaluator;Eigen::internal::evaluator_base<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::evaluator_base 250478435
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator 1567915109
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::MapBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, 1>::data 1110876069
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::innerStride 55737253
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride 179615169
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::innerStride 337395262
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::innerStride;Eigen::Matrix<double, -1, -1, 0, -1, -1>::innerStride 96766684
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::innerStride;Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::nestedExpression 64956534
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::innerStride;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::innerStride 633153066
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::innerStride;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::innerStride;Eigen::EigenBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::derived 578987067
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::innerStride;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::innerStride;Eigen::Matrix<double, -1, -1, 0, -1, -1>::innerStride 96887254
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::innerStride;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::innerStride;Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::nestedExpression 906319492
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::outerStride 662690360
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::outerStride;Eigen::Matrix<double, -1, -1, 0, -1, -1>::outerStride 31599517
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::outerStride;Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::nestedExpression 33304936
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::outerStride;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride 901887211
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::outerStride;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride;Eigen::DenseBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::innerSize 31861722
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::outerStride;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride;Eigen::EigenBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::derived 765558405
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::outerStride;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride;Eigen::Matrix<double, -1, -1, 0, -1, -1>::outerStride 683091635
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::outerStride;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride;Eigen::Matrix<double, -1, -1, 0, -1, -1>::outerStride;Eigen::DenseBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::innerSize 833818768
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::outerStride;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride;Eigen::Matrix<double, -1, -1, 0, -1, -1>::outerStride;Eigen::DenseBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::innerSize;Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows 460694565
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::outerStride;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride;Eigen::Matrix<double, -1, -1, 0, -1, -1>::outerStride;Eigen::DenseBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::innerSize;Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows;Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::derived 500620294
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::outerStride;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride;Eigen::Matrix<double, -1, -1, 0, -1, -1>::outerStride;Eigen::DenseBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::innerSize;Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows 615193010
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::outerStride;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride;Eigen::Matrix<double, -1, -1, 0, -1, -1>::outerStride;Eigen::DenseBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::innerSize;Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows;Eigen::DenseStorage<double, -1, -1, -1, 0>::rows 925757089
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::outerStride;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride;Eigen::Matrix<double, -1, -1, 0, -1, -1>::outerStride;Eigen::DenseBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::innerSize;Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows;Eigen::DenseStorage<double, -1, -1, -1, 0>::rows;asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];irqentry_exit_[k];irqentry_exit_to_user_mode_[k];exit_to_user_mode_prepare_[k];exit_to_user_mode_loop_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];_raw_spin_unlock_[k] 857570
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::outerStride;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride;Eigen::Matrix<double, -1, -1, 0, -1, -1>::outerStride;Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows 32782178
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::outerStride;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride;Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::nestedExpression 873534212
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::internal::evaluator_base<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::evaluator_base 32324267
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::internal::variable_if_dynamic<long, -1>::variable_if_dynamic 714414479
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::internal::variable_if_dynamic<long, 1>::variable_if_dynamic 706390091
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::block_evaluator;Eigen::internal::variable_if_dynamic<long, -1>::variable_if_dynamic 202881252
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::block_evaluator;Eigen::internal::variable_if_dynamic<long, 1>::variable_if_dynamic 152369933
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator 24184993
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::evaluator;asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];scheduler_tick_[k];perf_event_task_tick_[k];perf_adjust_freq_unthr_context_[k];x86_pmu_disable_[k];amd_pmu_disable_all_[k];x86_pmu_disable_all_[k] 34897786
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::~evaluator 263605202
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::~evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::~block_evaluator 645862389
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::~evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::~block_evaluator;Eigen::internal::evaluator_base<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::~evaluator_base 182576466
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::~evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::~block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::~mapbase_evaluator 546081669
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::~evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::~block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::~mapbase_evaluator;Eigen::internal::evaluator_base<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::~evaluator_base 99049606
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::~evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::~block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::~mapbase_evaluator;asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];irqentry_exit_[k];irqentry_exit_to_user_mode_[k];exit_to_user_mode_prepare_[k];exit_to_user_mode_loop_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];__perf_event_task_sched_in_[k];perf_ctx_enable_[k] 730083
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::~evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::~mapbase_evaluator 259612041
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator 943762712
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data 95542911
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator 1844628875
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::functor 63762010
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::lhs 213274611
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::rhs 400896717
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data 1645335606
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::functor 781132127
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::lhs 266222028
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::lhs;asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];scheduler_tick_[k];perf_event_task_tick_[k];perf_adjust_freq_unthr_context_[k] 31871059
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::rhs 335747206
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::evaluator 179711240
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::evaluator 844275633
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::block_evaluator 176648510
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::evaluator;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::evaluator 539215039
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::evaluator;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::block_evaluator 768625248
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::evaluator;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::block_evaluator;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::innerStride 314575141
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::evaluator;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::block_evaluator;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::outerStride 376130659
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::evaluator;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::block_evaluator;Eigen::internal::evaluator_base<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::evaluator_base 289903608
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::evaluator;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator 1187023105
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::evaluator;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::MapBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, 0>::data 950495502
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::evaluator;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::innerStride 306952744
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::evaluator;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride 123452187
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::evaluator;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::innerStride 291736272
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::evaluator;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::innerStride;Eigen::EigenBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::derived 64466848
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::evaluator;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::innerStride;Eigen::Matrix<double, -1, -1, 0, -1, -1>::innerStride 445228878
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::evaluator;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::innerStride;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::innerStride 700556266
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::evaluator;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::innerStride;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::innerStride;Eigen::EigenBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::derived 484814551
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::evaluator;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::innerStride;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::innerStride;Eigen::Matrix<double, -1, -1, 0, -1, -1>::innerStride 30580825
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::evaluator;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::innerStride;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::innerStride;Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::nestedExpression 743958678
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::evaluator;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::outerStride 672800575
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::evaluator;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::outerStride;Eigen::Matrix<double, -1, -1, 0, -1, -1>::outerStride 32348311
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::evaluator;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::outerStride;Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::nestedExpression 31959288
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::evaluator;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::outerStride;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride 724096294
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::evaluator;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::outerStride;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride;Eigen::EigenBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::derived 551132830
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::evaluator;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::outerStride;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride;Eigen::EigenBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::derived;asm_sysvec_reschedule_ipi_[k];sysvec_reschedule_ipi_[k];irqentry_exit_[k];irqentry_exit_to_user_mode_[k];exit_to_user_mode_prepare_[k];exit_to_user_mode_loop_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];_raw_spin_unlock_[k] 1001738
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::evaluator;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::outerStride;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride;Eigen::Matrix<double, -1, -1, 0, -1, -1>::outerStride 635329774
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::evaluator;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::outerStride;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride;Eigen::Matrix<double, -1, -1, 0, -1, -1>::outerStride;Eigen::DenseBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::innerSize 895969116
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::evaluator;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::outerStride;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride;Eigen::Matrix<double, -1, -1, 0, -1, -1>::outerStride;Eigen::DenseBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::innerSize;Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows 506888904
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::evaluator;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::outerStride;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride;Eigen::Matrix<double, -1, -1, 0, -1, -1>::outerStride;Eigen::DenseBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::innerSize;Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows;Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::derived 513028524
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::evaluator;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::outerStride;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride;Eigen::Matrix<double, -1, -1, 0, -1, -1>::outerStride;Eigen::DenseBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::innerSize;Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows 276280589
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::evaluator;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::outerStride;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride;Eigen::Matrix<double, -1, -1, 0, -1, -1>::outerStride;Eigen::DenseBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::innerSize;Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows;Eigen::DenseStorage<double, -1, -1, -1, 0>::rows 1062210209
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::evaluator;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::outerStride;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride;Eigen::Matrix<double, -1, -1, 0, -1, -1>::outerStride;asm_common_interrupt_[k];common_interrupt_[k];__common_interrupt_[k];handle_edge_irq_[k];irq_chip_ack_parent_[k] 30952946
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::evaluator;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::outerStride;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride;Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::nestedExpression 599794574
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::evaluator;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::internal::evaluator_base<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::evaluator_base 149114391
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::evaluator;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::internal::variable_if_dynamic<long, -1>::variable_if_dynamic 552294712
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::evaluator;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator;Eigen::internal::variable_if_dynamic<long, 1>::variable_if_dynamic 1000079644
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::evaluator;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::block_evaluator;Eigen::internal::variable_if_dynamic<long, -1>::variable_if_dynamic 267921938
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::evaluator;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::block_evaluator;Eigen::internal::variable_if_dynamic<long, 1>::variable_if_dynamic 315839201
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::evaluator;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::mapbase_evaluator 58497444
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> >::evaluator 31456822
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const>::evaluator 878995499
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const>::evaluator;Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const>::functor 142869277
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const>::evaluator;Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> >::evaluator 833641462
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const>::evaluator;Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> >::evaluator;Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const>::functor 540471795
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const>::evaluator;Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> >::evaluator;Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const>::functor;asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];scheduler_tick_[k];perf_event_task_tick_[k];perf_adjust_freq_unthr_context_[k];x86_pmu_disable_[k];amd_pmu_disable_all_[k];x86_pmu_disable_all_[k] 23226142
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const>::evaluator;Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> >::evaluator;Eigen::internal::evaluator_base<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> >::evaluator_base 113162278
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const>::evaluator;Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> >::evaluator;Eigen::internal::scalar_constant_op<double>::scalar_constant_op 863964554
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const>::evaluator;Eigen::internal::evaluator_base<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> >::evaluator_base 165907358
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::Data;Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const>::evaluator;Eigen::internal::scalar_constant_op<double>::scalar_constant_op 34223739
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::evaluator 482379439
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const>::evaluator 177295451
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::binary_evaluator;Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const>::evaluator;asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_do_timer_[k];tick_do_update_jiffies64_[k];update_wall_time_[k];timekeeping_advance_[k];timekeeping_update_[k];raw_notifier_call_chain_[k];notifier_call_chain_[k] 24151615
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator;Eigen::internal::evaluator_base<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::evaluator_base 469388088
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::~evaluator 536672934
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::~evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::~Data 435341048
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::~evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::~binary_evaluator 1379127477
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::~evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::~binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::~Data 1069412590
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::~evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::~binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::~Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::~evaluator 276555388
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::~evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::~binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::~Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::~evaluator 460341588
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::~evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::~binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::~Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::~evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::~block_evaluator 122878101
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::~evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::~binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::~Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::~evaluator;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::~evaluator 721000748
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::~evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::~binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::~Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::~evaluator;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::~evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::~block_evaluator 801315419
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::~evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::~binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::~Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::~evaluator;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::~evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::~block_evaluator;Eigen::internal::evaluator_base<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::~evaluator_base 125894373
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::~evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::~binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::~Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::~evaluator;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::~evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::~block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::~mapbase_evaluator 516813827
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::~evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::~binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::~Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::~evaluator;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::~evaluator;Eigen::internal::block_evaluator<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::~block_evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::~mapbase_evaluator;Eigen::internal::evaluator_base<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::~evaluator_base 224594194
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::~evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::~binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::~Data;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::~evaluator;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::~evaluator;Eigen::internal::mapbase_evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::Matrix<double, 1, -1, 1, 1, -1> >::~mapbase_evaluator 239651777
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::~evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::~binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::~Data;Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> >::~evaluator 110449528
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::~evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::~binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::~Data;Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const>::~evaluator 482453532
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::~evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::~binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::~Data;Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const>::~evaluator;Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> >::~evaluator 601219525
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::~evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::~binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::~Data;Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const>::~evaluator;Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> >::~evaluator;Eigen::internal::evaluator_base<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> >::~evaluator_base 92585566
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::~evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::~binary_evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::Data::~Data;Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const>::~evaluator;Eigen::internal::evaluator_base<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> >::~evaluator_base 172776778
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::~evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::~binary_evaluator;Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::~evaluator 290235394
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::~evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::~binary_evaluator;Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const>::~evaluator 344475145
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::~evaluator;Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::IndexBased, Eigen::internal::IndexBased, double, double>::~binary_evaluator;Eigen::internal::evaluator_base<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::~evaluator_base 94970103
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::~evaluator;Eigen::internal::evaluator_base<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::~evaluator_base 773714687
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::dstDataPtr 145589237
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::generic_dense_assignment_kernel 1176365531
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::size 194610854
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0>::assignPacket<16, 0, double __vector 157205245
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::resize_if_allowed<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> > 1859890474
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::resize_if_allowed<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::cols 305864726
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::resize_if_allowed<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::cols;Eigen::MapBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, 0>::cols 618737826
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::resize_if_allowed<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::cols;Eigen::MapBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, 0>::cols;Eigen::internal::variable_if_dynamic<long, -1>::value 1123191454
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::resize_if_allowed<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::cols;Eigen::MapBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, 0>::cols;Eigen::internal::variable_if_dynamic<long, -1>::value;asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];scheduler_tick_[k];perf_event_task_tick_[k];perf_adjust_freq_unthr_context_[k] 24227356
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::resize_if_allowed<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::rows 557942442
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::resize_if_allowed<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::rows;Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const>::rows 95720745
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::resize_if_allowed<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::rows;Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const>::rows;Eigen::internal::variable_if_dynamic<long, 1>::value 32293367
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::resize_if_allowed<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::rows;Eigen::internal::variable_if_dynamic<long, 1>::value 523345986
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::resize_if_allowed<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const>::rows 562900406
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::resize_if_allowed<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::MapBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, 0>::cols 581780261
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::resize_if_allowed<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::MapBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, 0>::cols;Eigen::internal::variable_if_dynamic<long, -1>::value 1248075722
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::resize_if_allowed<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::MapBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, 0>::rows 31920578
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::resize_if_allowed<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::variable_if_dynamic<long, 1>::value 713962638
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::unaligned_dense_assignment_loop<false>::run<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >, Eigen::internal::add_assign_op<double, double>, 0> > 217339035
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::check_for_aliasing<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> > 32322085
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::resize_if_allowed<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> > 305381557
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_dense_assignment_loop<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> > 179903064
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::check_for_aliasing<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> > 32889177
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>& Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::operator+=<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >;void Eigen::internal::call_assignment_no_alias<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> > 787172256
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type, double>, Eigen::internal::plain_constant_type<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type>::type const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> const Eigen::operator*<double> 1164027917
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type, double>, Eigen::internal::plain_constant_type<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type>::type const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> const Eigen::operator*<double>;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::CwiseBinaryOp 2585920804
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type, double>, Eigen::internal::plain_constant_type<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type>::type const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> const Eigen::operator*<double>;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::CwiseBinaryOp;Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const, Eigen::Dense>::CwiseBinaryOpImpl 888645012
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type, double>, Eigen::internal::plain_constant_type<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type>::type const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> const Eigen::operator*<double>;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::CwiseBinaryOp;Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const, Eigen::Dense>::CwiseBinaryOpImpl;Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::DenseBase 65497206
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type, double>, Eigen::internal::plain_constant_type<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type>::type const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> const Eigen::operator*<double>;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::CwiseBinaryOp;Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const, Eigen::Dense>::CwiseBinaryOpImpl;Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::MatrixBase 481260767
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type, double>, Eigen::internal::plain_constant_type<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type>::type const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> const Eigen::operator*<double>;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::CwiseBinaryOp;Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const, Eigen::Dense>::CwiseBinaryOpImpl;Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::MatrixBase;Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::DenseBase 130950524
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type, double>, Eigen::internal::plain_constant_type<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type>::type const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> const Eigen::operator*<double>;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::CwiseBinaryOp;Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const>::CwiseNullaryOp 2089344013
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type, double>, Eigen::internal::plain_constant_type<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type>::type const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> const Eigen::operator*<double>;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::CwiseBinaryOp;Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const>::CwiseNullaryOp;Eigen::internal::scalar_constant_op<double>::scalar_constant_op 639931689
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type, double>, Eigen::internal::plain_constant_type<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type>::type const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> const Eigen::operator*<double>;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::CwiseBinaryOp;Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const>::cols 599248824
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type, double>, Eigen::internal::plain_constant_type<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type>::type const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> const Eigen::operator*<double>;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::CwiseBinaryOp;Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const>::cols;Eigen::internal::variable_if_dynamic<long, -1>::value 1122626683
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type, double>, Eigen::internal::plain_constant_type<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type>::type const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> const Eigen::operator*<double>;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::CwiseBinaryOp;Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const>::rows 159583833
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type, double>, Eigen::internal::plain_constant_type<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type>::type const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> const Eigen::operator*<double>;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::CwiseBinaryOp;Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const>::rows;Eigen::internal::variable_if_dynamic<long, 1>::value 24179559
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type, double>, Eigen::internal::plain_constant_type<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type>::type const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> const Eigen::operator*<double>;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::CwiseBinaryOp;Eigen::MapBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, 0>::cols 402953557
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type, double>, Eigen::internal::plain_constant_type<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type>::type const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> const Eigen::operator*<double>;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::CwiseBinaryOp;Eigen::MapBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, 0>::cols;Eigen::internal::variable_if_dynamic<long, -1>::value 841594641
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type, double>, Eigen::internal::plain_constant_type<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type>::type const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> const Eigen::operator*<double>;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::CwiseBinaryOp;Eigen::MapBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, 0>::rows 86763719
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type, double>, Eigen::internal::plain_constant_type<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type>::type const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> const Eigen::operator*<double>;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::CwiseBinaryOp;Eigen::MatrixBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::MatrixBase 94179405
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type, double>, Eigen::internal::plain_constant_type<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type>::type const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> const Eigen::operator*<double>;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::CwiseBinaryOp;Eigen::internal::scalar_constant_op<double>::scalar_constant_op 54891818
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type, double>, Eigen::internal::plain_constant_type<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type>::type const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> const Eigen::operator*<double>;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::CwiseBinaryOp;Eigen::internal::variable_if_dynamic<long, 1>::value 751869867
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type, double>, Eigen::internal::plain_constant_type<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type>::type const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> const Eigen::operator*<double>;Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const, Eigen::Dense>::CwiseBinaryOpImpl 341800277
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type, double>, Eigen::internal::plain_constant_type<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type>::type const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> const Eigen::operator*<double>;Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const>::CwiseNullaryOp 2136404664
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type, double>, Eigen::internal::plain_constant_type<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type>::type const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> const Eigen::operator*<double>;Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const>::CwiseNullaryOp;Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> >::DenseBase 111687202
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type, double>, Eigen::internal::plain_constant_type<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type>::type const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> const Eigen::operator*<double>;Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const>::CwiseNullaryOp;Eigen::MatrixBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> >::MatrixBase 357852815
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type, double>, Eigen::internal::plain_constant_type<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type>::type const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> const Eigen::operator*<double>;Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const>::CwiseNullaryOp;Eigen::MatrixBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> >::MatrixBase;Eigen::DenseBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> >::DenseBase 91349678
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type, double>, Eigen::internal::plain_constant_type<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type>::type const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> const Eigen::operator*<double>;Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const>::CwiseNullaryOp;Eigen::internal::scalar_constant_op<double>::scalar_constant_op 715914216
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type, double>, Eigen::internal::plain_constant_type<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type>::type const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> const Eigen::operator*<double>;Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const>::CwiseNullaryOp;Eigen::internal::variable_if_dynamic<long, -1>::variable_if_dynamic 979421856
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type, double>, Eigen::internal::plain_constant_type<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type>::type const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> const Eigen::operator*<double>;Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const>::CwiseNullaryOp;Eigen::internal::variable_if_dynamic<long, -1>::variable_if_dynamic;asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];irqentry_exit_[k];irqentry_exit_to_user_mode_[k];exit_to_user_mode_prepare_[k];exit_to_user_mode_loop_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];_raw_spin_unlock_[k] 949956
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type, double>, Eigen::internal::plain_constant_type<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type>::type const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> const Eigen::operator*<double>;Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const>::CwiseNullaryOp;Eigen::internal::variable_if_dynamic<long, 1>::variable_if_dynamic 974179004
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type, double>, Eigen::internal::plain_constant_type<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type>::type const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> const Eigen::operator*<double>;Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const>::CwiseNullaryOp;Eigen::internal::variable_if_dynamic<long, 1>::variable_if_dynamic;asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];irq_exit_rcu_[k];__irq_exit_rcu_[k];__do_softirq_[k] 36491060
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type, double>, Eigen::internal::plain_constant_type<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type>::type const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> const Eigen::operator*<double>;Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const>::cols 34689333
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type, double>, Eigen::internal::plain_constant_type<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type>::type const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> const Eigen::operator*<double>;Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const>::rows 328703859
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type, double>, Eigen::internal::plain_constant_type<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type>::type const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> const Eigen::operator*<double>;Eigen::EigenBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::derived 894958212
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type, double>, Eigen::internal::plain_constant_type<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type>::type const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> const Eigen::operator*<double>;Eigen::MapBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, 0>::cols 425014088
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type, double>, Eigen::internal::plain_constant_type<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type>::type const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> const Eigen::operator*<double>;Eigen::MapBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, 0>::cols;Eigen::internal::variable_if_dynamic<long, -1>::value 1288047085
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type, double>, Eigen::internal::plain_constant_type<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type>::type const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> const Eigen::operator*<double>;Eigen::MapBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, 0>::rows 356786643
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type, double>, Eigen::internal::plain_constant_type<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type>::type const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> const Eigen::operator*<double>;Eigen::MapBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, 0>::rows;Eigen::internal::variable_if_dynamic<long, 1>::value 57964636
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type, double>, Eigen::internal::plain_constant_type<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type>::type const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> const Eigen::operator*<double>;Eigen::MatrixBase<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> >::MatrixBase 274343989
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type, double>, Eigen::internal::plain_constant_type<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type>::type const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> const Eigen::operator*<double>;Eigen::internal::scalar_constant_op<double>::scalar_constant_op 851630931
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type, double>, Eigen::internal::plain_constant_type<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type>::type const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> const Eigen::operator*<double>;Eigen::internal::variable_if_dynamic<long, -1>::value 68857092
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type, double>, Eigen::internal::plain_constant_type<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type>::type const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> const Eigen::operator*<double>;Eigen::internal::variable_if_dynamic<long, -1>::variable_if_dynamic 33091954
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type, double>, Eigen::internal::plain_constant_type<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type>::type const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> const Eigen::operator*<double>;Eigen::internal::variable_if_dynamic<long, 1>::value 155034322
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type, double>, Eigen::internal::plain_constant_type<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, Eigen::internal::promote_scalar_arg<double, double, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, double, Eigen::internal::scalar_product_op<double, double> > >::value>::type>::type const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> const Eigen::operator*<double>;Eigen::internal::variable_if_dynamic<long, 1>::variable_if_dynamic 385401527
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>::CwiseBinaryOp 68587008
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const>::CwiseNullaryOp 124376789
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row 744820550
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block 1217180467
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl 628762142
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::data 84929973
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride 542054576
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense 2651247343
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::EigenBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::derived 258338730
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::MapBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, 0>::MapBase 1385950216
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::MapBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, 0>::MapBase;Eigen::DenseBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::DenseBase 164165566
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::MapBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, 0>::MapBase;Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::MatrixBase 351591147
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::MapBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, 0>::MapBase;Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::MatrixBase;Eigen::DenseBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::DenseBase 230642032
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::MapBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, 0>::MapBase;Eigen::internal::variable_if_dynamic<long, -1>::variable_if_dynamic 788340090
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::MapBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, 0>::MapBase;Eigen::internal::variable_if_dynamic<long, 1>::variable_if_dynamic 745272315
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::MapBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, 0>::MapBase;void Eigen::MapBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, 0>::checkSanity<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> > 1048548029
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::Matrix<double, -1, -1, 0, -1, -1>::outerStride 148756281
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::MatrixBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::MatrixBase 119640070
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::data 32603832
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::cols 1279970906
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::cols;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows 656803215
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::cols;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows;Eigen::DenseStorage<double, -1, -1, -1, 0>::rows 822270115
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::nestedExpression 121745421
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::data 372893666
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::data;Eigen::DenseStorage<double, -1, -1, -1, 0>::data 33894746
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::data;Eigen::EigenBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::derived 634780744
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::data;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::data 610167074
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::data;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::data;Eigen::DenseStorage<double, -1, -1, -1, 0>::data 878922012
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::data;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::data;asm_common_interrupt_[k];common_interrupt_[k];__common_interrupt_[k];handle_edge_irq_[k];apic_ack_irq_[k] 34446346
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::data;Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::nestedExpression 997520599
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride 377310859
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride;Eigen::DenseBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::innerSize 31284931
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride;Eigen::EigenBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::derived 513890009
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride;Eigen::Matrix<double, -1, -1, 0, -1, -1>::outerStride 837646964
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride;Eigen::Matrix<double, -1, -1, 0, -1, -1>::outerStride;Eigen::DenseBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::innerSize 855045231
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride;Eigen::Matrix<double, -1, -1, 0, -1, -1>::outerStride;Eigen::DenseBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::innerSize;Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows 676854581
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride;Eigen::Matrix<double, -1, -1, 0, -1, -1>::outerStride;Eigen::DenseBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::innerSize;Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows;Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::derived 526127888
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride;Eigen::Matrix<double, -1, -1, 0, -1, -1>::outerStride;Eigen::DenseBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::innerSize;Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows 711159566
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride;Eigen::Matrix<double, -1, -1, 0, -1, -1>::outerStride;Eigen::DenseBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::innerSize;Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows;Eigen::DenseStorage<double, -1, -1, -1, 0>::rows 1141088438
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride;Eigen::Matrix<double, -1, -1, 0, -1, -1>::outerStride;Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows 67033512
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride;Eigen::Matrix<double, -1, -1, 0, -1, -1>::outerStride;asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];task_tick_fair_[k] 30942651
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride;Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::nestedExpression 985451397
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::init 217204674
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::init;Eigen::Matrix<double, -1, -1, 0, -1, -1>::outerStride 24170629
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::init;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride 777397149
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::init;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride;Eigen::EigenBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::derived 600800308
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::init;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride;Eigen::Matrix<double, -1, -1, 0, -1, -1>::outerStride 907403954
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::init;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride;Eigen::Matrix<double, -1, -1, 0, -1, -1>::outerStride;Eigen::DenseBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::innerSize 716377253
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::init;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride;Eigen::Matrix<double, -1, -1, 0, -1, -1>::outerStride;Eigen::DenseBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::innerSize;Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows 671041551
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::init;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride;Eigen::Matrix<double, -1, -1, 0, -1, -1>::outerStride;Eigen::DenseBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::innerSize;Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows;Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::derived 732193352
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::init;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride;Eigen::Matrix<double, -1, -1, 0, -1, -1>::outerStride;Eigen::DenseBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::innerSize;Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows 602476021
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::init;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride;Eigen::Matrix<double, -1, -1, 0, -1, -1>::outerStride;Eigen::DenseBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::innerSize;Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows;Eigen::DenseStorage<double, -1, -1, -1, 0>::rows 867864943
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::init;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride;Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::nestedExpression 997978564
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::init;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride;asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_do_timer_[k];tick_do_update_jiffies64_[k];update_wall_time_[k];timekeeping_advance_[k];_raw_spin_lock_irqsave_[k];__raw_spin_lock_irqsave_[k] 35288579
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::internal::variable_if_dynamic<long, -1>::variable_if_dynamic 1502185597
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::internal::variable_if_dynamic<long, -1>::variable_if_dynamic;asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];scheduler_tick_[k];task_tick_fair_[k];update_load_avg_[k];__update_load_avg_cfs_rq_[k] 36101659
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;Eigen::internal::variable_if_dynamic<long, 1>::variable_if_dynamic 83148905
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, true>::BlockImpl_dense;void Eigen::MapBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, 0>::checkSanity<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> > 247550974
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::variable_if_dynamic<long, -1>::variable_if_dynamic 133145709
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::cols 125604762
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows 791056001
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::cols 662792211
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>::Block;Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::cols;Eigen::DenseStorage<double, -1, -1, -1, 0>::cols 1380745026
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>::Block 66034286
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::BlockImpl_dense;Eigen::MapBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, 1>::MapBase;Eigen::MapBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, 0>::MapBase 34052177
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::BlockImpl_dense;Eigen::MapBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, 1>::MapBase;Eigen::MapBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, 0>::MapBase;Eigen::DenseBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::DenseBase 22316351
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::BlockImpl_dense;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride;Eigen::Matrix<double, -1, -1, 0, -1, -1>::outerStride;Eigen::DenseBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::innerSize;Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows 24164441
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::BlockImpl_dense;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride;Eigen::Matrix<double, -1, -1, 0, -1, -1>::outerStride;Eigen::DenseBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::innerSize;Eigen::EigenBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows;Eigen::DenseStorage<double, -1, -1, -1, 0>::rows 30266629
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>::Block;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, Eigen::Dense>::BlockImpl;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::BlockImpl_dense;Eigen::internal::BlockImpl_dense<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true, true>::init;Eigen::TransposeImpl<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Dense>::outerStride;Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::nestedExpression 32074286
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::BlockImpl<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true, Eigen::Dense>::BlockImpl 65672262
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::EigenBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::derived 758394971
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::rows 122052254
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::DenseBase<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > >::row;asm_common_interrupt_[k];common_interrupt_[k];__common_interrupt_[k];handle_edge_irq_[k];handle_irq_event_[k];__handle_irq_event_percpu_[k];amdgpu_irq_handler_[k];amdgpu_ih_process_[k];amdgpu_irq_dispatch_[k];amdgpu_dm_irq_handler_[k];dm_crtc_high_irq_[k];amdgpu_dm_crtc_handle_vblank_[k];drm_crtc_handle_vblank_[k];drm_handle_vblank_[k];drm_update_vblank_count_[k];drm_crtc_get_last_vbltimestamp_[k];drm_crtc_vblank_helper_get_vblank_timestamp_[k];drm_crtc_vblank_helper_get_vblank_timestamp_internal_[k];amdgpu_crtc_get_scanout_position_[k];amdgpu_display_get_crtc_scanoutpos_[k];dm_crtc_get_scanoutpos_[k];dc_stream_get_scanoutpos_[k];optc1_get_crtc_scanoutpos_[k];optc1_get_position_[k];generic_reg_get_[k];dm_read_reg_func_[k];amdgpu_cgs_read_register_[k];amdgpu_device_rreg_[k] 35259738
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::EigenBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> >::derived 212353615
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::EigenBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true> >::derived 704152243
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::EigenBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const> >::derived 133743907
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::MapBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, 0>::cols 56826187
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::MapBase<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true>, 0>::rows 197245905
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::SparseCompressedBase<Eigen::SparseMatrix<double, 0, int> >::InnerIterator::index 967543040
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::SparseCompressedBase<Eigen::SparseMatrix<double, 0, int> >::InnerIterator::operator bool 613727369
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::SparseCompressedBase<Eigen::SparseMatrix<double, 0, int> >::InnerIterator::operator++ 1313719293
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::SparseCompressedBase<Eigen::SparseMatrix<double, 0, int> >::InnerIterator::value 1074486624
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;Eigen::internal::scalar_constant_op<double>::scalar_constant_op 65224204
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;asm_common_interrupt_[k];common_interrupt_[k];__common_interrupt_[k];handle_edge_irq_[k];handle_irq_event_[k];__handle_irq_event_percpu_[k];amdgpu_irq_handler_[k];amdgpu_ih_process_[k];amdgpu_irq_dispatch_[k];amdgpu_dm_irq_handler_[k];dm_crtc_high_irq_[k];amdgpu_dm_crtc_handle_vblank_[k];drm_crtc_handle_vblank_[k];drm_handle_vblank_[k];drm_update_vblank_count_[k];__get_vblank_counter_[k];amdgpu_get_vblank_counter_kms_[k];amdgpu_display_get_crtc_scanoutpos_[k];dm_crtc_get_scanoutpos_[k];dc_stream_get_scanoutpos_[k];optc1_get_crtc_scanoutpos_[k];optc1_get_position_[k];generic_reg_get_[k];dm_read_reg_func_[k];amdgpu_cgs_read_register_[k];amdgpu_device_rreg_[k] 29622437
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;Simulation::SimulationUnit::step;Simulation::ScalarSimulation::performStep;Eigen::Matrix<double, -1, -1, 0, -1, -1>::Matrix<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::PlainObjectBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::_set_noalias<Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Product<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, 0>, Eigen::internal::assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::evalTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl_base<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8> >::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::generic_product_impl<Eigen::Product<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0>, Eigen::SparseMatrix<double, 0, int>, Eigen::DenseShape, Eigen::SparseShape, 8>::scaleAndAddTo<Eigen::Matrix<double, -1, -1, 0, -1, -1> >;void Eigen::internal::sparse_time_dense_product<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double>;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::run;Eigen::internal::sparse_time_dense_product_impl<Eigen::Transpose<Eigen::SparseMatrix<double, 0, int> const>, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, double, 1, false>::processRow;void Eigen::internal::call_assignment<Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, 1, -1, true>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, Eigen::Matrix<double, 1, -1, 1, 1, -1> const> const, Eigen::Block<Eigen::Transpose<Eigen::Matrix<double, -1, -1, 0, -1, -1> > const, 1, -1, true> const>, Eigen::internal::add_assign_op<double, double> > 573480348
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;std::vector<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > >::vector;std::vector<unsigned long, std::allocator<unsigned long> >* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<std::vector<unsigned long, std::allocator<unsigned long> > const*, std::vector<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > > >, std::vector<unsigned long, std::allocator<unsigned long> >*, std::vector<unsigned long, std::allocator<unsigned long> > >;std::vector<unsigned long, std::allocator<unsigned long> >* std::uninitialized_copy<__gnu_cxx::__normal_iterator<std::vector<unsigned long, std::allocator<unsigned long> > const*, std::vector<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > > >, std::vector<unsigned long, std::allocator<unsigned long> >*>;std::vector<unsigned long, std::allocator<unsigned long> >* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<std::vector<unsigned long, std::allocator<unsigned long> > const*, std::vector<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > > >, std::vector<unsigned long, std::allocator<unsigned long> >*>;void std::_Construct<std::vector<unsigned long, std::allocator<unsigned long> >, std::vector<unsigned long, std::allocator<unsigned long> > const&>;std::vector<unsigned long, std::allocator<unsigned long> >::vector;__gnu_cxx::__alloc_traits<std::allocator<unsigned long>, unsigned long>::_S_select_on_copy 36620658
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;sync_step;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::MatrixBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::operator+=<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> > >;void Eigen::internal::call_assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;void Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::add_assign_op<double, double>, 0>::assignPacket<16, 0, double __vector;double __vector;double __vector 24188408
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;sync_step;Eigen::Matrix<double, -1, -1, 0, -1, -1>& Eigen::MatrixBase<Eigen::Matrix<double, -1, -1, 0, -1, -1> >::operator+=<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> > >;void Eigen::internal::call_assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::internal::add_assign_op<double, double> >;void Eigen::internal::call_assignment_no_alias<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::Assignment<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::internal::add_assign_op<double, double>, Eigen::internal::Dense2Dense, void>::run;void Eigen::internal::call_dense_assignment_loop<Eigen::Matrix<double, -1, -1, 0, -1, -1>, Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::internal::add_assign_op<double, double> >;Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::add_assign_op<double, double>, 0>, 3, 0>::run;void Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<double, -1, -1, 0, -1, -1> >, Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::add_assign_op<double, double>, 0>::assignPacket<16, 0, double __vector;void Eigen::internal::add_assign_op<double, double>::assignPacket<16, double __vector;double __vector 31467748
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;update_flow;Simulation::MatFlow::MatFlow;Eigen::SparseMatrix<double, 0, int>::operator=;Eigen::internal::CompressedStorage<double, int>::operator=;void Eigen::internal::smart_copy<double>;__memmove_avx_unaligned_erms 452124244
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;update_flow;Simulation::MatFlow::MatFlow;Eigen::SparseMatrix<double, 0, int>::operator=;Eigen::internal::CompressedStorage<double, int>::operator=;void Eigen::internal::smart_copy<int>;__memmove_avx_unaligned_erms 252401901
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;update_flow;Simulation::MatFlow::MatFlow;Eigen::SparseMatrix<double, 0, int>::operator=;Eigen::internal::CompressedStorage<double, int>::operator=;void Eigen::internal::smart_copy<int>;__memmove_avx_unaligned_erms;asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_handle_[k];update_process_times_[k];scheduler_tick_[k];perf_event_task_tick_[k];perf_adjust_freq_unthr_context_[k] 30687988
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;update_flow;Simulation::SimulationUnit::setLiquidFlow;Simulation::MatFlow::operator=;Eigen::SparseMatrix<double, 0, int>::operator=;Eigen::SparseMatrix<double, 0, int>::swap;std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<int*> >, std::is_move_constructible<int*>, std::is_move_assignable<int*> >::value, void>::type std::swap<int*> 23002096
BioCMA-MCST_cli;__libc_start_call_main;main;exec;host_process;main_loop;update_flow;std::vector<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > >::vector;std::vector<unsigned long, std::allocator<unsigned long> >* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<std::vector<unsigned long, std::allocator<unsigned long> > const*, std::vector<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > > >, std::vector<unsigned long, std::allocator<unsigned long> >*, std::vector<unsigned long, std::allocator<unsigned long> > >;std::vector<unsigned long, std::allocator<unsigned long> >* std::uninitialized_copy<__gnu_cxx::__normal_iterator<std::vector<unsigned long, std::allocator<unsigned long> > const*, std::vector<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > > >, std::vector<unsigned long, std::allocator<unsigned long> >*>;std::vector<unsigned long, std::allocator<unsigned long> >* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<std::vector<unsigned long, std::allocator<unsigned long> > const*, std::vector<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > > >, std::vector<unsigned long, std::allocator<unsigned long> >*>;void std::_Construct<std::vector<unsigned long, std::allocator<unsigned long> >, std::vector<unsigned long, std::allocator<unsigned long> > const&>;std::vector<unsigned long, std::allocator<unsigned long> >::vector;unsigned long* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<unsigned long const*, std::vector<unsigned long, std::allocator<unsigned long> > >, unsigned long*, unsigned long>;unsigned long* std::uninitialized_copy<__gnu_cxx::__normal_iterator<unsigned long const*, std::vector<unsigned long, std::allocator<unsigned long> > >, unsigned long*>;unsigned long* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<unsigned long const*, std::vector<unsigned long, std::allocator<unsigned long> > >, unsigned long*>;unsigned long* std::copy<__gnu_cxx::__normal_iterator<unsigned long const*, std::vector<unsigned long, std::allocator<unsigned long> > >, unsigned long*>;unsigned long* std::__copy_move_a<false, __gnu_cxx::__normal_iterator<unsigned long const*, std::vector<unsigned long, std::allocator<unsigned long> > >, unsigned long*>;unsigned long* std::__copy_move_a1<false, unsigned long const*, unsigned long*>;unsigned long* std::__copy_move_a2<false, unsigned long const*, unsigned long*> 36047967
BioCMA-MCST_cli;__sched_yield 32219121
BioCMA-MCST_cli;__sched_yield;asm_sysvec_apic_timer_interrupt_[k];sysvec_apic_timer_interrupt_[k];__sysvec_apic_timer_interrupt_[k];hrtimer_interrupt_[k];__hrtimer_run_queues_[k];tick_sched_timer_[k];tick_sched_do_timer_[k];tick_do_update_jiffies64_[k];update_wall_time_[k];timekeeping_advance_[k];timekeeping_update_[k];update_fast_timekeeper_[k] 24126240
BioCMA-MCST_cli;__sched_yield;entry_SYSCALL_64_[k] 24079519
BioCMA-MCST_cli;__sched_yield;entry_SYSCALL_64_after_hwframe_[k] 24183573
BioCMA-MCST_cli;__sched_yield;entry_SYSCALL_64_after_hwframe_[k];__x64_sys_sched_yield_[k] 36479956
BioCMA-MCST_cli;__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k] 64466878
BioCMA-MCST_cli;__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];_raw_spin_lock_[k] 35541480
BioCMA-MCST_cli;__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k] 24144084
BioCMA-MCST_cli;__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k] 94133124
BioCMA-MCST_cli;__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];pick_next_task_fair_[k] 85938173
BioCMA-MCST_cli;__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];pick_next_task_fair_[k];__calc_delta_[k] 35722951
BioCMA-MCST_cli;__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];pick_next_task_fair_[k];update_curr_[k] 24180169
BioCMA-MCST_cli;__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];pick_next_task_fair_[k];update_curr_[k];__cgroup_account_cputime_[k] 24169624
BioCMA-MCST_cli;__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];pick_next_task_fair_[k];update_curr_[k];__cgroup_account_cputime_[k];cgroup_rstat_updated_[k] 102322045
BioCMA-MCST_cli;__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];pick_next_task_[k];srso_safe_ret_[k] 32579770
BioCMA-MCST_cli;__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];update_rq_clock_[k] 36087467
BioCMA-MCST_cli;__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];update_rq_clock_[k];sched_clock_cpu_[k] 36385844
BioCMA-MCST_cli;__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];update_rq_clock_[k];sched_clock_cpu_[k];sched_clock_[k];sched_clock_noinstr_[k];native_sched_clock_[k] 86527827
BioCMA-MCST_cli;__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];__schedule_[k];update_rq_clock_[k];srso_safe_ret_[k] 33168027
BioCMA-MCST_cli;__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];schedule_[k];raw_spin_rq_unlock_[k] 34379688
BioCMA-MCST_cli;__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];srso_safe_ret_[k] 35972884
BioCMA-MCST_cli;__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];do_sched_yield_[k];yield_task_fair_[k];cpuacct_charge_[k] 31972030
BioCMA-MCST_cli;__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];raw_spin_rq_unlock_[k] 24140426
BioCMA-MCST_cli;__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];srso_safe_ret_[k] 24176554
BioCMA-MCST_cli;__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];__x64_sys_sched_yield_[k];yield_task_fair_[k] 72521879
BioCMA-MCST_cli;__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];srso_safe_ret_[k] 35248158
BioCMA-MCST_cli;__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_exit_to_user_mode_[k] 34105963
BioCMA-MCST_cli;__sched_yield;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_exit_to_user_mode_[k];exit_to_user_mode_prepare_[k] 90634874
BioCMA-MCST_cli;__sched_yield;srso_safe_ret_[k] 32328345
BioCMA-MCST_cli;dgemm_itcopy_ZEN 13743128
BioCMA-MCST_cli;dgemm_itcopy_ZEN;asm_sysvec_reschedule_ipi_[k];sysvec_reschedule_ipi_[k];irqentry_exit_[k];irqentry_exit_to_user_mode_[k];exit_to_user_mode_prepare_[k];exit_to_user_mode_loop_[k];schedule_[k];__schedule_[k];finish_task_switch.isra.0_[k];__perf_event_task_sched_in_[k] 4267925
BioCMA-MCST_cli;dgemm_kernel_ZEN 532268742
BioCMA-MCST_cli;exec_blas_async_wait 23627960
BioCMA-MCST_cli;malloc_consolidate 24272967
BioCMA-MCST_cli;pthread_cond_signal@@GLIBC_2.3.2;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_exit_to_user_mode_[k] 34854636
BioCMA-MCST_cli;pthread_cond_signal@@GLIBC_2.3.2;entry_SYSCALL_64_after_hwframe_[k];do_syscall_64_[k];syscall_exit_to_user_mode_[k];exit_to_user_mode_prepare_[k] 32338091
