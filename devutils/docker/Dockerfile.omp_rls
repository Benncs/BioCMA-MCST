FROM biocma_omp_base AS build

WORKDIR /app

# Copy files and directories into the Docker image
COPY ./apps /app/apps
COPY ./subprojects/dynlib.wrap /app/subprojects/dynlib.wrap
COPY ./subprojects/cereal.wrap /app/subprojects/cereal.wrap
COPY ./subprojects/highfive.wrap /app/subprojects/highfive.wrap
COPY ./subprojects/cmtool.wrap /app/subprojects/cmtool.wrap
COPY ./subprojects/cmtool /app/subprojects/cmtool
COPY ./meson.build /app/meson.build
COPY ./meson_options.txt /app/meson_options.txt
COPY ./devutils/auto_generate /app/devutils/auto_generate
COPY ./tools /app/tools
ENV CXX=clang++-19
RUN meson setup builddir --buildtype=release -Dbuild_test=false -Duse_system_kokkos=true -Duse_cuda=false -Dbuild_c_api=false -Dbuild_python_api=false
RUN ninja -C builddir install


FROM debian:bookworm-slim AS rls 

RUN apt-get update && \
    apt-get install -y \
    python3 \
    python3-pip \
    libomp5 \
    openmpi-bin \
    libhdf5-103 \
    libhdf5-openmpi-103 && \
    rm -rf /var/lib/apt/lists/*


RUN pip install --no-cache-dir meson lxml --break-system-packages
COPY --from=build /app/builddir/apps/cli/biocma_mcst_cli_app_shared /usr/bin/biocma_mcst_cli_app_shared
COPY --from=build /app/builddir/apps/cli/biocma_mcst_cli_app /usr/bin/biocma_mcst_cli_app
COPY ./tools/runner.py /usr/bin/runner.py
COPY ./devutils/datamodel /opt/biomc/datamodel
COPY ./tools/cli_formater.py /usr/bin/cli_formater.py
COPY ./devutils/exec.py /usr/bin/exec.py
ENTRYPOINT ["/usr/bin/runner.py"]